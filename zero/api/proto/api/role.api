syntax = "v1"

import "base.api"

type (
    // 角色
    Role {
        Id int64 `json:"id,optional"`                     // 主键id
        RolePid int64 `json:"role_pid,optional"`          // 父角色id
        RoleDomain string `json:"role_domain,optional"`   // 角色域
        RoleName string `json:"role_name,optional"`       // 角色名
        RoleComment string `json:"role_comment,optional"` // 角色备注
        IsDisable int64 `json:"is_disable,optional"`      // 是否禁用  0否 1是
        IsDefault int64 `json:"is_default,optional"`      // 是否默认角色 0否 1是
        CreatedAt int64 `json:"created_at,optional"`      // 创建时间
        UpdatedAt int64 `json:"updated_at,optional"`      // 更新时间
    }

    RoleDetails {
        Id int64 `json:"id,optional"`                     // 主键id
        RolePid int64 `json:"role_pid,optional"`          // 父角色id
        RoleDomain string `json:"role_domain,optional"`   // 角色域
        RoleName string `json:"role_name,optional"`       // 角色名
        RoleComment string `json:"role_comment,optional"` // 角色备注
        IsDisable int64 `json:"is_disable,optional"`      // 是否禁用  0否 1是
        IsDefault int64 `json:"is_default,optional"`      // 是否默认角色 0否 1是
        CreatedAt int64 `json:"created_at,optional"`      // 创建时间
        UpdatedAt int64 `json:"updated_at,optional"`      // 更新时间
        MenuIdList []int64 `json:"menu_id_list,optional"`
        ApiIdList []int64 `json:"resource_id_list,optional"`
    }

    RoleResourcesResp {
        RoleId int64 `json:"role_id,optional"`
        ApiIds []int64 `json:"api_ids,optional"`
        MenuIds []int64 `json:"menu_ids,optional"`
    }

    UpdateRoleApisReq {
        RoleId int64 `json:"role_id,optional"`
        ApiIds []int64 `json:"api_ids,optional"`
    }

    UpdateRoleMenusReq {
        RoleId int64 `json:"role_id,optional"`
        MenuIds []int64 `json:"menu_ids,optional"`
    }
)

@server(
    prefix: /api/v1
    group: role
)

service blog-api {
    @doc "创建角色"
    @handler CreateRole
    post /role/create_role (Role) returns (Role)

    @doc "更新角色"
    @handler UpdateRole
    put /role/update_role (Role) returns (Role)

    @doc "删除角色"
    @handler DeleteRole
    delete /role/delete_role (IdReq) returns (BatchResp)

    @doc "批量删除角色"
    @handler DeleteRoleList
    delete /role/delete_role_list (IdsReq) returns (BatchResp)

    @doc "查询角色"
    @handler FindRole
    post /role/find_role (IdReq) returns (Role)

    @doc "分页获取角色列表"
    @handler FindRoleList
    post /role/find_role_list (PageQuery) returns (PageResp)

    @doc "获取角色资源列表"
    @handler FindRoleResources
    post /role/find_role_resources (IdReq) returns (RoleResourcesResp)

    @doc "更新角色菜单权限"
    @handler UpdateRoleMenus
    post /role/update_role_menus (UpdateRoleMenusReq) returns (EmptyResp)

    @doc "更新角色接口权限"
    @handler UpdateRoleApis
    post /role/update_role_apis (UpdateRoleApisReq) returns (EmptyResp)
}
