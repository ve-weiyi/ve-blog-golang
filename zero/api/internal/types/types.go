// Code generated by goctl. DO NOT EDIT.
package types

type PingReq struct {
}

type PingResp struct {
	Env         string            `json:"env"`
	Name        string            `json:"name"`
	Version     string            `json:"version"`
	Runtime     string            `json:"runtime"`
	Description string            `json:"description"`
	RpcStatus   map[string]string `json:"rpc_status"`
}

type UserAreaDTO struct {
	Name  string `json:"name,optional"`
	Value int64  `json:"value,optional"`
}

type UserDTO struct {
	Id           int64           `json:"id,optional"`
	Username     string          `json:"username,optional"`
	Nickname     string          `json:"nickname,optional"`
	Avatar       string          `json:"avatar,optional"`
	Intro        string          `json:"intro,optional"`
	Website      string          `json:"website,optional"`
	Email        string          `json:"email,optional"`
	Status       int64           `json:"status,optional"`
	RegisterType string          `json:"register_type,optional"`
	IpAddress    string          `json:"ip_address,optional"` // ip host
	IpSource     string          `json:"ip_source,optional"`  // ip 源
	CreatedAt    int64           `json:"created_at,optional"`
	UpdatedAt    int64           `json:"updated_at,optional"`
	Roles        []*RoleLabelDTO `json:"roles,optional"`
}

type RoleLabelDTO struct {
	RoleName    string `json:"role_name,optional"`
	RoleComment string `json:"role_comment,optional"`
}

type UpdateUserStatusReq struct {
	UserId int64 `json:"user_id,optional"`
	Status int64 `json:"status,optional"` // 状态: -1删除 0正常 1禁用
}

type UpdateUserRolesReq struct {
	UserId  int64   `json:"user_id,optional"`
	RoleIds []int64 `json:"role_ids,optional"`
}

type RestHeader struct {
	HeaderCountry    string `header:"Country,optional"`
	HeaderLanguage   string `header:"Language,optional"`
	HeaderTimezone   string `header:"Timezone,optional"`
	HeaderAppName    string `header:"App-name,optional"`
	HeaderXUserId    string `header:"X-User-Id,optional"`
	HeaderXAuthToken string `header:"X-Auth-Token,optional"`
	HeaderTerminalID string `header:"X-Terminal-ID,optional"`
}

type EmptyReq struct {
}

type IdReq struct {
	ID int64 `json:"id"`
}

type IdsReq struct {
	IDS []int64 `json:"ids"`
}

type PageQuery struct {
	Limit      PageLimit       `json:"limit,optional"`
	Sorts      []PageSort      `json:"sorts,optional"`
	Conditions []PageCondition `json:"conditions,optional"`
}

type PageLimit struct {
	Page     int64 `json:"page,optional"`
	PageSize int64 `json:"page_size,optional"`
}

type PageSort struct {
	Field string `json:"field,optional"`
	Order string `json:"order,optional"`
}

type PageCondition struct {
	Field    string      `json:"field,optional"`    // 字段
	Value    interface{} `json:"value,optional"`    // 值
	Logic    string      `json:"logic,optional"`    // and | or
	Operator string      `json:"operator,optional"` // = | >= | < | in | not in |....
}

type EmptyResp struct {
}

type BatchResult struct {
	SuccessCount int64 `json:"success_count"`
}

type PageResult struct {
	Page     int64       `json:"page"`
	PageSize int64       `json:"page_size"`
	Total    int64       `json:"total"`
	List     interface{} `json:"list"`
}

type Response struct {
	Code    int         `json:"code"`
	Message string      `json:"message"`
	Data    interface{} `json:"data"`
	TraceID string      `json:"trace_id"`
}

type LoginHistory struct {
	Id        int64  `json:"id,optional"`
	LoginType string `json:"login_type,optional"` // 登录类型
	Agent     string `json:"agent,optional"`      // 代理
	IpAddress string `json:"ip_address,optional"` // ip host
	IpSource  string `json:"ip_source,optional"`  // ip 源
	LoginTime string `json:"login_time,optional"` // 创建时间
}

type UserApiDTO struct {
	Id        int64         `json:"id,optional"`         // 主键id
	Name      string        `json:"name,optional"`       // api名称
	Path      string        `json:"path,optional"`       // api路径
	Method    string        `json:"method,optional"`     // api请求方法
	ParentId  int64         `json:"parent_id,optional"`  // 分组id
	Traceable int64         `json:"traceable,optional"`  // 是否追溯操作记录 0需要，1是
	Status    int64         `json:"status,optional"`     // 状态 1开，2关
	CreatedAt int64         `json:"created_at,optional"` // 创建时间
	UpdatedAt int64         `json:"updated_at,optional"` // 更新时间
	Children  []*UserApiDTO `json:"children,optional"`
}

type UserMenuDTO struct {
	Id        int64  `json:"id,optional"`        // 主键
	ParentId  int64  `json:"parent_id,optional"` // 父id
	Title     string `json:"title,optional"`     // 菜单标题
	Type      int64  `json:"type,optional"`      // 菜单类型（0代表菜单、1代表iframe、2代表外链、3代表按钮）
	Path      string `json:"path,optional"`      // 路由地址
	Name      string `json:"name,optional"`      // 路由名字
	Component string `json:"component,optional"` // Layout组件
	Redirect  string `json:"redirect,optional"`  // 路由重定向
}

type UserAccount struct {
	Id           int64  `json:"id,optional"`            // id
	Username     string `json:"username,optional"`      // 用户名
	Password     string `json:"password,optional"`      // 密码
	Status       int64  `json:"status,optional"`        // 状态: -1删除 0正常 1禁用
	RegisterType string `json:"register_type,optional"` // 注册方式
	IpAddress    string `json:"ip_address,optional"`    // 注册ip
	IpSource     string `json:"ip_source,optional"`     // 注册ip 源
	CreatedAt    int64  `json:"created_at,optional"`    // 创建时间
	UpdatedAt    int64  `json:"updated_at,optional"`    // 更新时间
}

type UserRoleDTO struct {
	Id             int64   `json:"id,optional"`           // 主键id
	RolePId        int64   `json:"role_pid,optional"`     // 父角色id
	RoleDomain     string  `json:"role_domain,optional"`  // 角色域
	RoleName       string  `json:"role_name,optional"`    // 角色名
	RoleComment    string  `json:"role_comment,optional"` // 角色备注
	IsDisable      int64   `json:"is_disable,optional"`   // 是否禁用  0否 1是
	IsDefault      int64   `json:"is_default,optional"`   // 是否默认角色 0否 1是
	CreatedAt      int64   `json:"created_at,optional"`   // 创建时间
	UpdatedAt      int64   `json:"updated_at,optional"`   // 更新时间
	MenuIdList     []int64 `json:"menu_id_list,optional"`
	ResourceIdList []int64 `json:"resource_id_list,optional"`
}

type UserInfoReq struct {
	Nickname string `json:"nickname,optional"` // 昵称
	Website  string `json:"website,optional"`  // 网站
	Intro    string `json:"intro,optional"`    // 简介
	Avatar   string `json:"avatar,optional"`   // 头像
}

type UserInfoResp struct {
	Id        int64  `json:"id,optional"`         // id
	UserId    int64  `json:"user_id,optional"`    // 用户id
	Email     string `json:"email,optional"`      // 用户邮箱
	Nickname  string `json:"nickname,optional"`   // 用户昵称
	Avatar    string `json:"avatar,optional"`     // 用户头像
	Phone     string `json:"phone,optional"`      // 用户手机号
	Intro     string `json:"intro,optional"`      // 个人简介
	Website   string `json:"website,optional"`    // 个人网站
	CreatedAt int64  `json:"created_at,optional"` // 创建时间
	UpdatedAt int64  `json:"updated_at,optional"` // 更新时间
}

type Api struct {
	ID        int64  `json:"id,optional"`         // 主键id
	Name      string `json:"name,optional"`       // api名称
	Path      string `json:"path,optional"`       // api路径
	Method    string `json:"method,optional"`     // api请求方法
	ParentID  int64  `json:"parent_id,optional"`  // 分组id
	Traceable int64  `json:"traceable,optional"`  // 是否追溯操作记录 0需要，1是
	Status    int64  `json:"status,optional"`     // 状态 1开，2关
	CreatedAt int64  `json:"created_at,optional"` // 创建时间
	UpdatedAt int64  `json:"updated_at,optional"` // 更新时间
}

type ApiDetailsDTO struct {
	ID        int64            `json:"id,optional"`         // 主键id
	Name      string           `json:"name,optional"`       // api名称
	Path      string           `json:"path,optional"`       // api路径
	Method    string           `json:"method,optional"`     // api请求方法
	ParentID  int64            `json:"parent_id,optional"`  // 分组id
	Traceable int64            `json:"traceable,optional"`  // 是否追溯操作记录 0需要，1是
	Status    int64            `json:"status,optional"`     // 状态 1开，2关
	CreatedAt int64            `json:"created_at,optional"` // 创建时间
	UpdatedAt int64            `json:"updated_at,optional"` // 更新时间
	Children  []*ApiDetailsDTO `json:"children,optional"`
}

type LoginReq struct {
	Username string `json:"username,optional"`
	Password string `json:"password,optional"`
	Code     string `json:"code,optional"`
}

type LoginResp struct {
	Token    *Token    `json:"token,optional"`
	UserInfo *UserInfo `json:"user_info,optional"`
}

type Token struct {
	UserId           int64  `json:"user_id,optional"`            // 用户id
	TokenType        string `json:"token_type,optional"`         // token类型,Bearer
	AccessToken      string `json:"access_token,optional"`       // 访问token,过期时间较短。2h
	ExpiresIn        int64  `json:"expires_in,optional"`         // 访问token过期时间
	RefreshToken     string `json:"refresh_token,optional"`      // 刷新token,过期时间较长。30d
	RefreshExpiresIn int64  `json:"refresh_expires_in,optional"` // 刷新token过期时间
	Scope            string `json:"scope,optional"`              // 作用域
}

type UserInfo struct {
	UserId   int64  `json:"user_id,optional"`  // 用户id
	Username string `json:"username,optional"` // 用户名
	Nickname string `json:"nickname,optional"` // 昵称
	Avatar   string `json:"avatar,optional"`   // 头像
	Intro    string `json:"intro,optional"`    // 个人简介
	Website  string `json:"website,optional"`  // 个人网站
	Email    string `json:"email,optional"`    // 邮箱
}

type UserEmailReq struct {
	Username string `json:"username,optional"`
}

type ResetPasswordReq struct {
	Username string `json:"username,optional"`
	Password string `json:"password,optional"`
	Code     string `json:"code,optional"`
}

type OauthLoginReq struct {
	Platform string `json:"platform,optional"` // 平台
	Code     string `json:"code,optional"`     // 授权码
	State    string `json:"state,optional"`    // 状态
}

type OauthLoginUrl struct {
	Url string `json:"url,optional"` // 授权地址
}

type Menu struct {
	ID        int64  `json:"id,optional"`         // 主键
	ParentID  int64  `json:"parent_id,optional"`  // 父id
	Title     string `json:"title,optional"`      // 菜单标题
	Path      string `json:"path,optional"`       // 路由路径
	Name      string `json:"name,optional"`       // 路由名称
	Component string `json:"component,optional"`  // 路由组件
	Redirect  string `json:"redirect,optional"`   // 路由重定向
	Type      int64  `json:"type,optional"`       // 菜单类型
	Meta      string `json:"meta,optional"`       // 菜单元数据
	CreatedAt int64  `json:"created_at,optional"` // 创建时间
	UpdatedAt int64  `json:"updated_at,optional"` // 更新时间
}

type MenuDetailsDTO struct {
	ID        int64             `json:"id,optional"`        // 主键
	ParentID  int64             `json:"parent_id,optional"` // 父id
	Title     string            `json:"title,optional"`     // 菜单标题
	Type      int64             `json:"type,optional"`      // 菜单类型（0代表菜单、1代表iframe、2代表外链、3代表按钮）
	Path      string            `json:"path,optional"`      // 路由地址
	Name      string            `json:"name,optional"`      // 路由名字
	Component interface{}       `json:"component,optional"` // Layout组件
	Redirect  string            `json:"redirect,optional"`  // 路由重定向
	Meta      Meta              `json:"meta,optional"`      // meta配置
	Children  []*MenuDetailsDTO `json:"children,optional"`
	CreatedAt int64             `json:"created_at,optional"` // 创建时间
	UpdatedAt int64             `json:"updated_at,optional"` // 更新时间
}

type Meta struct {
	Title        string      `json:"title,optional"`         // 菜单名称
	Icon         string      `json:"icon,optional"`          // 菜单图标
	ShowLink     bool        `json:"show_link,optional"`     // 是否在菜单中显示
	Rank         int64       `json:"rank,optional"`          // 菜单升序排序
	ExtraIcon    interface{} `json:"extra_icon,optional"`    // 菜单名称右侧的额外图标
	ShowParent   bool        `json:"show_parent,optional"`   // 是否显示父级菜单
	Roles        []string    `json:"roles,optional"`         // 页面级别权限设置
	Auths        []string    `json:"auths,optional"`         // 按钮级别权限设置
	KeepAlive    bool        `json:"keep_alive,optional"`    // 路由组件缓存
	FrameSrc     string      `json:"frame_src,optional"`     // 内嵌的iframe链接
	FrameLoading bool        `json:"frame_loading,optional"` // iframe页是否开启首次加载动画
	Transition   Transition  `json:"transition,optional"`    // 页面加载动画
	HiddenTag    bool        `json:"hidden_tag,optional"`    // 是否不添加信息到标签页
	DynamicLevel int64       `json:"dynamic_level,optional"` // 动态路由可打开的最大数量
	ActivePath   string      `json:"active_path,optional"`   // 将某个菜单激活
}

type Transition struct {
	Name            string `json:"name,optional"`             // 当前路由动画效果
	EnterTransition string `json:"enter_transition,optional"` // 进场动画
	LeaveTransition string `json:"leave_transition,optional"` // 离场动画
}

type RouteConfigsTable struct {
	Type      int64               `json:"type,optional"`      // 菜单类型（0代表菜单、1代表iframe、2代表外链、3代表按钮）
	Path      string              `json:"path,optional"`      // 路由地址
	Name      string              `json:"name,optional"`      // 路由名字
	Component interface{}         `json:"component,optional"` // Layout组件
	Redirect  string              `json:"redirect,optional"`  // 路由重定向
	Meta      Meta                `json:"meta,optional"`      // meta配置
	Children  []RouteConfigsTable `json:"children,optional"`  // 子路由配置项
}

type SyncMenuRequest struct {
	Menus []RouteConfigsTable `json:"menus,optional"`
}

type Role struct {
	ID          int64  `json:"id,optional"`           // 主键id
	RolePID     int64  `json:"role_pid,optional"`     // 父角色id
	RoleDomain  string `json:"role_domain,optional"`  // 角色域
	RoleName    string `json:"role_name,optional"`    // 角色名
	RoleComment string `json:"role_comment,optional"` // 角色备注
	IsDisable   int64  `json:"is_disable,optional"`   // 是否禁用  0否 1是
	IsDefault   int64  `json:"is_default,optional"`   // 是否默认角色 0否 1是
	CreatedAt   int64  `json:"created_at,optional"`   // 创建时间
	UpdatedAt   int64  `json:"updated_at,optional"`   // 更新时间
}

type RoleDetailsDTO struct {
	ID             int64   `json:"id,optional"`           // 主键id
	RolePID        int64   `json:"role_pid,optional"`     // 父角色id
	RoleDomain     string  `json:"role_domain,optional"`  // 角色域
	RoleName       string  `json:"role_name,optional"`    // 角色名
	RoleComment    string  `json:"role_comment,optional"` // 角色备注
	IsDisable      int64   `json:"is_disable,optional"`   // 是否禁用  0否 1是
	IsDefault      int64   `json:"is_default,optional"`   // 是否默认角色 0否 1是
	CreatedAt      int64   `json:"created_at,optional"`   // 创建时间
	UpdatedAt      int64   `json:"updated_at,optional"`   // 更新时间
	MenuIdList     []int64 `json:"menu_id_list,optional"`
	ResourceIdList []int64 `json:"resource_id_list,optional"`
}

type RoleResourcesResp struct {
	RoleId  int64   `json:"role_id,optional"`
	ApiIds  []int64 `json:"api_ids,optional"`
	MenuIds []int64 `json:"menu_ids,optional"`
}

type UpdateRoleApisReq struct {
	RoleId int64   `json:"role_id,optional"`
	ApiIds []int64 `json:"api_ids,optional"`
}

type UpdateRoleMenusReq struct {
	RoleId  int64   `json:"role_id,optional"`
	MenuIds []int64 `json:"menu_ids,optional"`
}
