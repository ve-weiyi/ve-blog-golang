// 声明 proto 语法版本，固定值
syntax = "proto3";

// proto 包名
package blog;

// 生成 golang 代码后的包名
option go_package = "./blog";

message EmptyReq {
}

message EmptyResp {
}

message IdReq {
  int64 id = 1;
}

message IdsReq {
  repeated int64 ids = 1;
}

message PageQuery {
  PageLimit limit = 1;
  repeated PageSort sorts = 2;// 排序
  repeated PageCondition conditions = 3;// 使用条件语句查询
}

message PageLimit {
  int64 page = 1;
  int64 page_size = 2;
}

message PageSort {
  string field = 1;
  string order = 2;
}

message PageCondition {
  string field = 1;
  string value = 2;
  string logic = 3;
  string operator = 4;
}

message PageResp {
  int64 page = 1;
  int64 page_size = 2;
  int64 total = 3;
}

message BatchResp {
  int64 success_count = 1;
}

message PingReq {
  string ping = 1;
}

message PingResp {
  string pong = 1;
}

service BlogRpc {
  // 连接检测
  rpc Ping(PingReq) returns(PingResp);
}


// article结构体
message Article {
  int64 id = 1;// id
  int64 user_id = 2;// 作者
  int64 category_id = 3;// 文章分类
  string article_cover = 4;// 文章缩略图
  string article_title = 5;// 标题
  string article_content = 6;// 内容
  int64 type = 7;// 文章类型 1原创 2转载 3翻译
  string original_url = 8;// 原文链接
  int64 is_top = 9;// 是否置顶 0否 1是
  int64 is_delete = 10;// 是否删除  0否 1是
  int64 status = 11;// 状态值 1公开 2私密 3评论可见
  int64 created_at = 12;// 发表时间
  int64 updated_at = 13;// 更新时间
}

// article服务
service ArticleRpc {
  rpc CreateArticle(Article) returns(Article);

  rpc UpdateArticle(Article) returns(Article);

  rpc DeleteArticle(IdReq) returns(BatchResp);

  rpc FindArticle(IdReq) returns(Article);

  rpc DeleteArticleList(IdsReq) returns(BatchResp);

  rpc FindArticleList(PageQuery) returns(PageResp);
}


message Config {
  string config_key = 1;
  string config_value = 2;
}

service ConfigRpc {
  rpc CreateConfig(Config) returns(Config);

  rpc UpdateConfig(Config) returns(Config);

  rpc DeleteConfig(IdReq) returns(BatchResp);

  rpc FindConfig(IdReq) returns(Config);
}
