// 声明 proto 语法版本，固定值

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: permission.proto

// proto 包名

package permissionrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyReq) Reset() {
	*x = EmptyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyReq) ProtoMessage() {}

func (x *EmptyReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyReq.ProtoReflect.Descriptor instead.
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{0}
}

type EmptyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResp) Reset() {
	*x = EmptyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResp) ProtoMessage() {}

func (x *EmptyResp) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResp.ProtoReflect.Descriptor instead.
func (*EmptyResp) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{1}
}

type IdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdReq) Reset() {
	*x = IdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdReq) ProtoMessage() {}

func (x *IdReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdReq.ProtoReflect.Descriptor instead.
func (*IdReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{2}
}

func (x *IdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *IdsReq) Reset() {
	*x = IdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdsReq) ProtoMessage() {}

func (x *IdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdsReq.ProtoReflect.Descriptor instead.
func (*IdsReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{3}
}

func (x *IdsReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BatchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuccessCount int64 `protobuf:"varint,1,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
}

func (x *BatchResp) Reset() {
	*x = BatchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResp) ProtoMessage() {}

func (x *BatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResp.ProtoReflect.Descriptor instead.
func (*BatchResp) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{4}
}

func (x *BatchResp) GetSuccessCount() int64 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

type CountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountResp) Reset() {
	*x = CountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountResp) ProtoMessage() {}

func (x *CountResp) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountResp.ProtoReflect.Descriptor instead.
func (*CountResp) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{5}
}

func (x *CountResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserIdReq) Reset() {
	*x = UserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdReq) ProtoMessage() {}

func (x *UserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdReq.ProtoReflect.Descriptor instead.
func (*UserIdReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{6}
}

func (x *UserIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// ************* rbac 权限相关 *************
type ApiNewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                // 主键id
	ParentId  int64        `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`    // 分组id
	Path      string       `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`                             // api路径
	Name      string       `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                             // api名称
	Method    string       `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`                         // api请求方法
	Traceable int64        `protobuf:"varint,6,opt,name=traceable,proto3" json:"traceable,omitempty"`                  // 是否追溯操作记录 0需要，1是
	IsDisable int64        `protobuf:"varint,7,opt,name=is_disable,json=isDisable,proto3" json:"is_disable,omitempty"` // 是否禁用  0否 1是
	Children  []*ApiNewReq `protobuf:"bytes,10,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *ApiNewReq) Reset() {
	*x = ApiNewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiNewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiNewReq) ProtoMessage() {}

func (x *ApiNewReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiNewReq.ProtoReflect.Descriptor instead.
func (*ApiNewReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{7}
}

func (x *ApiNewReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApiNewReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ApiNewReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ApiNewReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiNewReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiNewReq) GetTraceable() int64 {
	if x != nil {
		return x.Traceable
	}
	return 0
}

func (x *ApiNewReq) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

func (x *ApiNewReq) GetChildren() []*ApiNewReq {
	if x != nil {
		return x.Children
	}
	return nil
}

type ApiDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                // 主键id
	ParentId  int64         `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`    // 分组id
	Path      string        `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`                             // api路径
	Name      string        `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                             // api名称
	Method    string        `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`                         // api请求方法
	Traceable int64         `protobuf:"varint,6,opt,name=traceable,proto3" json:"traceable,omitempty"`                  // 是否追溯操作记录 0需要，1是
	IsDisable int64         `protobuf:"varint,7,opt,name=is_disable,json=isDisable,proto3" json:"is_disable,omitempty"` // 是否禁用  0否 1是
	CreatedAt int64         `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // 创建时间
	UpdatedAt int64         `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // 更新时间
	Children  []*ApiDetails `protobuf:"bytes,10,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *ApiDetails) Reset() {
	*x = ApiDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiDetails) ProtoMessage() {}

func (x *ApiDetails) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiDetails.ProtoReflect.Descriptor instead.
func (*ApiDetails) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{8}
}

func (x *ApiDetails) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApiDetails) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ApiDetails) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ApiDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiDetails) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiDetails) GetTraceable() int64 {
	if x != nil {
		return x.Traceable
	}
	return 0
}

func (x *ApiDetails) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

func (x *ApiDetails) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ApiDetails) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ApiDetails) GetChildren() []*ApiDetails {
	if x != nil {
		return x.Children
	}
	return nil
}

type FindApiListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ApiDetails `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FindApiListResp) Reset() {
	*x = FindApiListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindApiListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindApiListResp) ProtoMessage() {}

func (x *FindApiListResp) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindApiListResp.ProtoReflect.Descriptor instead.
func (*FindApiListResp) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{9}
}

func (x *FindApiListResp) GetList() []*ApiDetails {
	if x != nil {
		return x.List
	}
	return nil
}

type MenuNewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             // 主键
	ParentId  int64         `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"` // 父id
	Path      string        `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`                          // 路由路径
	Name      string        `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                          // 路由名称
	Component string        `protobuf:"bytes,5,opt,name=component,proto3" json:"component,omitempty"`                // 路由组件
	Redirect  string        `protobuf:"bytes,6,opt,name=redirect,proto3" json:"redirect,omitempty"`                  // 路由重定向
	Children  []*MenuNewReq `protobuf:"bytes,10,rep,name=children,proto3" json:"children,omitempty"`
	Meta      *MenuMeta     `protobuf:"bytes,11,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *MenuNewReq) Reset() {
	*x = MenuNewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuNewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuNewReq) ProtoMessage() {}

func (x *MenuNewReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuNewReq.ProtoReflect.Descriptor instead.
func (*MenuNewReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{10}
}

func (x *MenuNewReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuNewReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenuNewReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuNewReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuNewReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuNewReq) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *MenuNewReq) GetChildren() []*MenuNewReq {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *MenuNewReq) GetMeta() *MenuMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type MenuMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       int64  `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty"`                               // 菜单类型（0代表目录、1代表菜单、2代表按钮、3代表外链）
	Title      string `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`                              // 菜单标题
	Icon       string `protobuf:"bytes,13,opt,name=icon,proto3" json:"icon,omitempty"`                                // 菜单标题
	Rank       int64  `protobuf:"varint,14,opt,name=rank,proto3" json:"rank,omitempty"`                               // 菜单排序
	Perm       string `protobuf:"bytes,15,opt,name=perm,proto3" json:"perm,omitempty"`                                // 权限标识
	Params     string `protobuf:"bytes,16,opt,name=params,proto3" json:"params,omitempty"`                            // 路由参数(json)
	KeepAlive  int64  `protobuf:"varint,17,opt,name=keep_alive,json=keepAlive,proto3" json:"keep_alive,omitempty"`    // 是否缓存
	AlwaysShow int64  `protobuf:"varint,18,opt,name=always_show,json=alwaysShow,proto3" json:"always_show,omitempty"` // 是否一直显示菜单
	IsHidden   int64  `protobuf:"varint,19,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"`       // 是否隐藏
	IsDisable  int64  `protobuf:"varint,20,opt,name=is_disable,json=isDisable,proto3" json:"is_disable,omitempty"`    // 是否禁用  0否 1是
}

func (x *MenuMeta) Reset() {
	*x = MenuMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuMeta) ProtoMessage() {}

func (x *MenuMeta) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuMeta.ProtoReflect.Descriptor instead.
func (*MenuMeta) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{11}
}

func (x *MenuMeta) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MenuMeta) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MenuMeta) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuMeta) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *MenuMeta) GetPerm() string {
	if x != nil {
		return x.Perm
	}
	return ""
}

func (x *MenuMeta) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *MenuMeta) GetKeepAlive() int64 {
	if x != nil {
		return x.KeepAlive
	}
	return 0
}

func (x *MenuMeta) GetAlwaysShow() int64 {
	if x != nil {
		return x.AlwaysShow
	}
	return 0
}

func (x *MenuMeta) GetIsHidden() int64 {
	if x != nil {
		return x.IsHidden
	}
	return 0
}

func (x *MenuMeta) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

type MenuDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                // 主键
	ParentId  int64          `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`    // 父id
	Path      string         `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`                             // 路由路径
	Name      string         `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                             // 路由名称
	Component string         `protobuf:"bytes,5,opt,name=component,proto3" json:"component,omitempty"`                   // 路由组件
	Redirect  string         `protobuf:"bytes,6,opt,name=redirect,proto3" json:"redirect,omitempty"`                     // 路由重定向
	CreatedAt int64          `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // 创建时间
	UpdatedAt int64          `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // 更新时间
	Children  []*MenuDetails `protobuf:"bytes,10,rep,name=children,proto3" json:"children,omitempty"`
	Meta      *MenuMeta      `protobuf:"bytes,11,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *MenuDetails) Reset() {
	*x = MenuDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuDetails) ProtoMessage() {}

func (x *MenuDetails) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuDetails.ProtoReflect.Descriptor instead.
func (*MenuDetails) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{12}
}

func (x *MenuDetails) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuDetails) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenuDetails) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuDetails) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuDetails) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *MenuDetails) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MenuDetails) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *MenuDetails) GetChildren() []*MenuDetails {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *MenuDetails) GetMeta() *MenuMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type FindMenuListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*MenuDetails `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FindMenuListResp) Reset() {
	*x = FindMenuListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindMenuListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindMenuListResp) ProtoMessage() {}

func (x *FindMenuListResp) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindMenuListResp.ProtoReflect.Descriptor instead.
func (*FindMenuListResp) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{13}
}

func (x *FindMenuListResp) GetList() []*MenuDetails {
	if x != nil {
		return x.List
	}
	return nil
}

type SyncMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus []*MenuNewReq `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"`
}

func (x *SyncMenuReq) Reset() {
	*x = SyncMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMenuReq) ProtoMessage() {}

func (x *SyncMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMenuReq.ProtoReflect.Descriptor instead.
func (*SyncMenuReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{14}
}

func (x *SyncMenuReq) GetMenus() []*MenuNewReq {
	if x != nil {
		return x.Menus
	}
	return nil
}

type SyncApiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apis []*ApiNewReq `protobuf:"bytes,1,rep,name=apis,proto3" json:"apis,omitempty"`
}

func (x *SyncApiReq) Reset() {
	*x = SyncApiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncApiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncApiReq) ProtoMessage() {}

func (x *SyncApiReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncApiReq.ProtoReflect.Descriptor instead.
func (*SyncApiReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{15}
}

func (x *SyncApiReq) GetApis() []*ApiNewReq {
	if x != nil {
		return x.Apis
	}
	return nil
}

type RoleNewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     // 主键id
	ParentId    int64  `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`         // 父角色id
	RoleName    string `protobuf:"bytes,3,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`          // 角色名
	RoleLabel   string `protobuf:"bytes,4,opt,name=role_label,json=roleLabel,proto3" json:"role_label,omitempty"`       // 角色标签
	RoleComment string `protobuf:"bytes,5,opt,name=role_comment,json=roleComment,proto3" json:"role_comment,omitempty"` // 角色备注
	IsDisable   int64  `protobuf:"varint,6,opt,name=is_disable,json=isDisable,proto3" json:"is_disable,omitempty"`      // 是否禁用  0否 1是
	IsDefault   int64  `protobuf:"varint,7,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`      // 是否默认角色 0否 1是
}

func (x *RoleNewReq) Reset() {
	*x = RoleNewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleNewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleNewReq) ProtoMessage() {}

func (x *RoleNewReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleNewReq.ProtoReflect.Descriptor instead.
func (*RoleNewReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{16}
}

func (x *RoleNewReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleNewReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *RoleNewReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleNewReq) GetRoleLabel() string {
	if x != nil {
		return x.RoleLabel
	}
	return ""
}

func (x *RoleNewReq) GetRoleComment() string {
	if x != nil {
		return x.RoleComment
	}
	return ""
}

func (x *RoleNewReq) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

func (x *RoleNewReq) GetIsDefault() int64 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type RoleDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     // 主键id
	ParentId    int64          `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`         // 父角色id
	RoleName    string         `protobuf:"bytes,3,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`          // 角色名
	RoleLabel   string         `protobuf:"bytes,4,opt,name=role_label,json=roleLabel,proto3" json:"role_label,omitempty"`       // 角色标签
	RoleComment string         `protobuf:"bytes,5,opt,name=role_comment,json=roleComment,proto3" json:"role_comment,omitempty"` // 角色备注
	IsDisable   int64          `protobuf:"varint,6,opt,name=is_disable,json=isDisable,proto3" json:"is_disable,omitempty"`      // 是否禁用  0否 1是
	IsDefault   int64          `protobuf:"varint,7,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`      // 是否默认角色 0否 1是
	CreatedAt   int64          `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`      // 创建时间
	UpdatedAt   int64          `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`      // 更新时间
	Children    []*RoleDetails `protobuf:"bytes,10,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *RoleDetails) Reset() {
	*x = RoleDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDetails) ProtoMessage() {}

func (x *RoleDetails) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDetails.ProtoReflect.Descriptor instead.
func (*RoleDetails) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{17}
}

func (x *RoleDetails) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleDetails) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *RoleDetails) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleDetails) GetRoleLabel() string {
	if x != nil {
		return x.RoleLabel
	}
	return ""
}

func (x *RoleDetails) GetRoleComment() string {
	if x != nil {
		return x.RoleComment
	}
	return ""
}

func (x *RoleDetails) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

func (x *RoleDetails) GetIsDefault() int64 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *RoleDetails) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RoleDetails) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *RoleDetails) GetChildren() []*RoleDetails {
	if x != nil {
		return x.Children
	}
	return nil
}

type FindRoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*RoleDetails `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FindRoleListResp) Reset() {
	*x = FindRoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindRoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRoleListResp) ProtoMessage() {}

func (x *FindRoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRoleListResp.ProtoReflect.Descriptor instead.
func (*FindRoleListResp) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{18}
}

func (x *FindRoleListResp) GetList() []*RoleDetails {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FindRoleListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RoleResourcesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  int64   `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	ApiIds  []int64 `protobuf:"varint,2,rep,packed,name=api_ids,json=apiIds,proto3" json:"api_ids,omitempty"`
	MenuIds []int64 `protobuf:"varint,3,rep,packed,name=menu_ids,json=menuIds,proto3" json:"menu_ids,omitempty"`
}

func (x *RoleResourcesResp) Reset() {
	*x = RoleResourcesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleResourcesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleResourcesResp) ProtoMessage() {}

func (x *RoleResourcesResp) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleResourcesResp.ProtoReflect.Descriptor instead.
func (*RoleResourcesResp) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{19}
}

func (x *RoleResourcesResp) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleResourcesResp) GetApiIds() []int64 {
	if x != nil {
		return x.ApiIds
	}
	return nil
}

func (x *RoleResourcesResp) GetMenuIds() []int64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type UpdateRoleApisReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64   `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	ApiIds []int64 `protobuf:"varint,2,rep,packed,name=api_ids,json=apiIds,proto3" json:"api_ids,omitempty"`
}

func (x *UpdateRoleApisReq) Reset() {
	*x = UpdateRoleApisReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleApisReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleApisReq) ProtoMessage() {}

func (x *UpdateRoleApisReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleApisReq.ProtoReflect.Descriptor instead.
func (*UpdateRoleApisReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateRoleApisReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateRoleApisReq) GetApiIds() []int64 {
	if x != nil {
		return x.ApiIds
	}
	return nil
}

type UpdateRoleMenusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  int64   `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	MenuIds []int64 `protobuf:"varint,2,rep,packed,name=menu_ids,json=menuIds,proto3" json:"menu_ids,omitempty"`
}

func (x *UpdateRoleMenusReq) Reset() {
	*x = UpdateRoleMenusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleMenusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleMenusReq) ProtoMessage() {}

func (x *UpdateRoleMenusReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleMenusReq.ProtoReflect.Descriptor instead.
func (*UpdateRoleMenusReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateRoleMenusReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateRoleMenusReq) GetMenuIds() []int64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type UpdateUserRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	RoleIds []int64 `protobuf:"varint,2,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
}

func (x *UpdateUserRoleReq) Reset() {
	*x = UpdateUserRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleReq) ProtoMessage() {}

func (x *UpdateUserRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateUserRoleReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserRoleReq) GetRoleIds() []int64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

type FindApiListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorts    []string `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`   // 排序
	Name     string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`     // api名称
	Path     string   `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`     // api路径
	Method   string   `protobuf:"bytes,6,opt,name=method,proto3" json:"method,omitempty"` // api请求方法
}

func (x *FindApiListReq) Reset() {
	*x = FindApiListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindApiListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindApiListReq) ProtoMessage() {}

func (x *FindApiListReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindApiListReq.ProtoReflect.Descriptor instead.
func (*FindApiListReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{23}
}

func (x *FindApiListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindApiListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindApiListReq) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *FindApiListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FindApiListReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FindApiListReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type FindMenuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorts    []string `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"` // 排序
	Title    string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"` // 菜单标题
	Name     string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`   // 路由名字
}

func (x *FindMenuListReq) Reset() {
	*x = FindMenuListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindMenuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindMenuListReq) ProtoMessage() {}

func (x *FindMenuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindMenuListReq.ProtoReflect.Descriptor instead.
func (*FindMenuListReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{24}
}

func (x *FindMenuListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindMenuListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindMenuListReq) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *FindMenuListReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FindMenuListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FindRoleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorts     []string `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`                           // 排序
	RoleName  string   `protobuf:"bytes,4,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`     // 角色名
	RoleLabel string   `protobuf:"bytes,5,opt,name=role_label,json=roleLabel,proto3" json:"role_label,omitempty"`  // 角色标签
	IsDisable int64    `protobuf:"varint,6,opt,name=is_disable,json=isDisable,proto3" json:"is_disable,omitempty"` // 是否禁用  0否 1是
}

func (x *FindRoleListReq) Reset() {
	*x = FindRoleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindRoleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRoleListReq) ProtoMessage() {}

func (x *FindRoleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_permission_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRoleListReq.ProtoReflect.Descriptor instead.
func (*FindRoleListReq) Descriptor() ([]byte, []int) {
	return file_permission_proto_rawDescGZIP(), []int{25}
}

func (x *FindRoleListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindRoleListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindRoleListReq) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *FindRoleListReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *FindRoleListReq) GetRoleLabel() string {
	if x != nil {
		return x.RoleLabel
	}
	return ""
}

func (x *FindRoleListReq) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

var File_permission_proto protoreflect.FileDescriptor

var file_permission_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70,
	0x63, 0x22, 0x0a, 0x0a, 0x08, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x22, 0x0b, 0x0a,
	0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x17, 0x0a, 0x05, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x06, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x30, 0x0a, 0x09, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x21, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x24, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xeb, 0x01, 0x0a, 0x09, 0x41,
	0x70, 0x69, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x69, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x52, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xab, 0x02, 0x0a, 0x0a, 0x41, 0x70, 0x69,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x35, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x70, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x40, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x70,
	0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x6e,
	0x75, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4e, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x2b, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x84, 0x02, 0x0a, 0x08, 0x4d,
	0x65, 0x6e, 0x75, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x72,
	0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x65, 0x72, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x41,
	0x6c, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x6c, 0x77, 0x61, 0x79,
	0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x68, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0xbf, 0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x36,
	0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63,
	0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x22, 0x3a, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x41,
	0x70, 0x69, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x69, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x52, 0x04, 0x61,
	0x70, 0x69, 0x73, 0x22, 0xd6, 0x01, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0xcd, 0x02, 0x0a,
	0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x6c,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x58, 0x0a, 0x10,
	0x46, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x60, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x61, 0x70, 0x69, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x22, 0x45, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x61, 0x70, 0x69, 0x49, 0x64, 0x73, 0x22,
	0x48, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x22, 0x47, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x82, 0x01, 0x0a,
	0x0f, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x6f, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x32, 0xf6, 0x0c, 0x0a, 0x0d, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x12, 0x3d, 0x0a, 0x06, 0x41, 0x64, 0x64,
	0x41, 0x70, 0x69, 0x12, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x69, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x70,
	0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x69, 0x12, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x69, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x70, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x12, 0x15, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x70, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x70,
	0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0c, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x41, 0x70, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x19, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4e, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x43, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x19, 0x2e,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x12, 0x15, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72,
	0x70, 0x63, 0x2e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x6e, 0x75,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0d, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x43, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x19,
	0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x72, 0x70, 0x63, 0x2e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4c, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48,
	0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x69, 0x73, 0x12, 0x18,
	0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x70, 0x69,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x72, 0x70, 0x63, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_permission_proto_rawDescOnce sync.Once
	file_permission_proto_rawDescData = file_permission_proto_rawDesc
)

func file_permission_proto_rawDescGZIP() []byte {
	file_permission_proto_rawDescOnce.Do(func() {
		file_permission_proto_rawDescData = protoimpl.X.CompressGZIP(file_permission_proto_rawDescData)
	})
	return file_permission_proto_rawDescData
}

var file_permission_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_permission_proto_goTypes = []any{
	(*EmptyReq)(nil),           // 0: permissionrpc.EmptyReq
	(*EmptyResp)(nil),          // 1: permissionrpc.EmptyResp
	(*IdReq)(nil),              // 2: permissionrpc.IdReq
	(*IdsReq)(nil),             // 3: permissionrpc.IdsReq
	(*BatchResp)(nil),          // 4: permissionrpc.BatchResp
	(*CountResp)(nil),          // 5: permissionrpc.CountResp
	(*UserIdReq)(nil),          // 6: permissionrpc.UserIdReq
	(*ApiNewReq)(nil),          // 7: permissionrpc.ApiNewReq
	(*ApiDetails)(nil),         // 8: permissionrpc.ApiDetails
	(*FindApiListResp)(nil),    // 9: permissionrpc.FindApiListResp
	(*MenuNewReq)(nil),         // 10: permissionrpc.MenuNewReq
	(*MenuMeta)(nil),           // 11: permissionrpc.MenuMeta
	(*MenuDetails)(nil),        // 12: permissionrpc.MenuDetails
	(*FindMenuListResp)(nil),   // 13: permissionrpc.FindMenuListResp
	(*SyncMenuReq)(nil),        // 14: permissionrpc.SyncMenuReq
	(*SyncApiReq)(nil),         // 15: permissionrpc.SyncApiReq
	(*RoleNewReq)(nil),         // 16: permissionrpc.RoleNewReq
	(*RoleDetails)(nil),        // 17: permissionrpc.RoleDetails
	(*FindRoleListResp)(nil),   // 18: permissionrpc.FindRoleListResp
	(*RoleResourcesResp)(nil),  // 19: permissionrpc.RoleResourcesResp
	(*UpdateRoleApisReq)(nil),  // 20: permissionrpc.UpdateRoleApisReq
	(*UpdateRoleMenusReq)(nil), // 21: permissionrpc.UpdateRoleMenusReq
	(*UpdateUserRoleReq)(nil),  // 22: permissionrpc.UpdateUserRoleReq
	(*FindApiListReq)(nil),     // 23: permissionrpc.FindApiListReq
	(*FindMenuListReq)(nil),    // 24: permissionrpc.FindMenuListReq
	(*FindRoleListReq)(nil),    // 25: permissionrpc.FindRoleListReq
}
var file_permission_proto_depIdxs = []int32{
	7,  // 0: permissionrpc.ApiNewReq.children:type_name -> permissionrpc.ApiNewReq
	8,  // 1: permissionrpc.ApiDetails.children:type_name -> permissionrpc.ApiDetails
	8,  // 2: permissionrpc.FindApiListResp.list:type_name -> permissionrpc.ApiDetails
	10, // 3: permissionrpc.MenuNewReq.children:type_name -> permissionrpc.MenuNewReq
	11, // 4: permissionrpc.MenuNewReq.meta:type_name -> permissionrpc.MenuMeta
	12, // 5: permissionrpc.MenuDetails.children:type_name -> permissionrpc.MenuDetails
	11, // 6: permissionrpc.MenuDetails.meta:type_name -> permissionrpc.MenuMeta
	12, // 7: permissionrpc.FindMenuListResp.list:type_name -> permissionrpc.MenuDetails
	10, // 8: permissionrpc.SyncMenuReq.menus:type_name -> permissionrpc.MenuNewReq
	7,  // 9: permissionrpc.SyncApiReq.apis:type_name -> permissionrpc.ApiNewReq
	17, // 10: permissionrpc.RoleDetails.children:type_name -> permissionrpc.RoleDetails
	17, // 11: permissionrpc.FindRoleListResp.list:type_name -> permissionrpc.RoleDetails
	7,  // 12: permissionrpc.PermissionRpc.AddApi:input_type -> permissionrpc.ApiNewReq
	7,  // 13: permissionrpc.PermissionRpc.UpdateApi:input_type -> permissionrpc.ApiNewReq
	3,  // 14: permissionrpc.PermissionRpc.DeleteApi:input_type -> permissionrpc.IdsReq
	23, // 15: permissionrpc.PermissionRpc.FindApiList:input_type -> permissionrpc.FindApiListReq
	15, // 16: permissionrpc.PermissionRpc.SyncApiList:input_type -> permissionrpc.SyncApiReq
	0,  // 17: permissionrpc.PermissionRpc.CleanApiList:input_type -> permissionrpc.EmptyReq
	10, // 18: permissionrpc.PermissionRpc.AddMenu:input_type -> permissionrpc.MenuNewReq
	10, // 19: permissionrpc.PermissionRpc.UpdateMenu:input_type -> permissionrpc.MenuNewReq
	3,  // 20: permissionrpc.PermissionRpc.DeleteMenu:input_type -> permissionrpc.IdsReq
	24, // 21: permissionrpc.PermissionRpc.FindMenuList:input_type -> permissionrpc.FindMenuListReq
	14, // 22: permissionrpc.PermissionRpc.SyncMenuList:input_type -> permissionrpc.SyncMenuReq
	0,  // 23: permissionrpc.PermissionRpc.CleanMenuList:input_type -> permissionrpc.EmptyReq
	16, // 24: permissionrpc.PermissionRpc.AddRole:input_type -> permissionrpc.RoleNewReq
	16, // 25: permissionrpc.PermissionRpc.UpdateRole:input_type -> permissionrpc.RoleNewReq
	3,  // 26: permissionrpc.PermissionRpc.DeleteRole:input_type -> permissionrpc.IdsReq
	25, // 27: permissionrpc.PermissionRpc.FindRoleList:input_type -> permissionrpc.FindRoleListReq
	21, // 28: permissionrpc.PermissionRpc.UpdateRoleMenus:input_type -> permissionrpc.UpdateRoleMenusReq
	20, // 29: permissionrpc.PermissionRpc.UpdateRoleApis:input_type -> permissionrpc.UpdateRoleApisReq
	2,  // 30: permissionrpc.PermissionRpc.FindRoleResources:input_type -> permissionrpc.IdReq
	22, // 31: permissionrpc.PermissionRpc.UpdateUserRole:input_type -> permissionrpc.UpdateUserRoleReq
	6,  // 32: permissionrpc.PermissionRpc.FindUserApis:input_type -> permissionrpc.UserIdReq
	6,  // 33: permissionrpc.PermissionRpc.FindUserMenus:input_type -> permissionrpc.UserIdReq
	6,  // 34: permissionrpc.PermissionRpc.FindUserRoles:input_type -> permissionrpc.UserIdReq
	8,  // 35: permissionrpc.PermissionRpc.AddApi:output_type -> permissionrpc.ApiDetails
	8,  // 36: permissionrpc.PermissionRpc.UpdateApi:output_type -> permissionrpc.ApiDetails
	4,  // 37: permissionrpc.PermissionRpc.DeleteApi:output_type -> permissionrpc.BatchResp
	9,  // 38: permissionrpc.PermissionRpc.FindApiList:output_type -> permissionrpc.FindApiListResp
	4,  // 39: permissionrpc.PermissionRpc.SyncApiList:output_type -> permissionrpc.BatchResp
	4,  // 40: permissionrpc.PermissionRpc.CleanApiList:output_type -> permissionrpc.BatchResp
	12, // 41: permissionrpc.PermissionRpc.AddMenu:output_type -> permissionrpc.MenuDetails
	12, // 42: permissionrpc.PermissionRpc.UpdateMenu:output_type -> permissionrpc.MenuDetails
	4,  // 43: permissionrpc.PermissionRpc.DeleteMenu:output_type -> permissionrpc.BatchResp
	13, // 44: permissionrpc.PermissionRpc.FindMenuList:output_type -> permissionrpc.FindMenuListResp
	4,  // 45: permissionrpc.PermissionRpc.SyncMenuList:output_type -> permissionrpc.BatchResp
	4,  // 46: permissionrpc.PermissionRpc.CleanMenuList:output_type -> permissionrpc.BatchResp
	17, // 47: permissionrpc.PermissionRpc.AddRole:output_type -> permissionrpc.RoleDetails
	17, // 48: permissionrpc.PermissionRpc.UpdateRole:output_type -> permissionrpc.RoleDetails
	4,  // 49: permissionrpc.PermissionRpc.DeleteRole:output_type -> permissionrpc.BatchResp
	18, // 50: permissionrpc.PermissionRpc.FindRoleList:output_type -> permissionrpc.FindRoleListResp
	1,  // 51: permissionrpc.PermissionRpc.UpdateRoleMenus:output_type -> permissionrpc.EmptyResp
	1,  // 52: permissionrpc.PermissionRpc.UpdateRoleApis:output_type -> permissionrpc.EmptyResp
	19, // 53: permissionrpc.PermissionRpc.FindRoleResources:output_type -> permissionrpc.RoleResourcesResp
	1,  // 54: permissionrpc.PermissionRpc.UpdateUserRole:output_type -> permissionrpc.EmptyResp
	9,  // 55: permissionrpc.PermissionRpc.FindUserApis:output_type -> permissionrpc.FindApiListResp
	13, // 56: permissionrpc.PermissionRpc.FindUserMenus:output_type -> permissionrpc.FindMenuListResp
	18, // 57: permissionrpc.PermissionRpc.FindUserRoles:output_type -> permissionrpc.FindRoleListResp
	35, // [35:58] is the sub-list for method output_type
	12, // [12:35] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_permission_proto_init() }
func file_permission_proto_init() {
	if File_permission_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_permission_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*EmptyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*EmptyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*IdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*IdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BatchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ApiNewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ApiDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*FindApiListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*MenuNewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*MenuMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*MenuDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*FindMenuListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SyncMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SyncApiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*RoleNewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*RoleDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*FindRoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*RoleResourcesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRoleApisReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRoleMenusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*FindApiListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*FindMenuListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*FindRoleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_permission_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_permission_proto_goTypes,
		DependencyIndexes: file_permission_proto_depIdxs,
		MessageInfos:      file_permission_proto_msgTypes,
	}.Build()
	File_permission_proto = out.File
	file_permission_proto_rawDesc = nil
	file_permission_proto_goTypes = nil
	file_permission_proto_depIdxs = nil
}
