// 声明 proto 语法版本，固定值

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: photo.proto

// proto 包名

package photorpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyReq) Reset() {
	*x = EmptyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyReq) ProtoMessage() {}

func (x *EmptyReq) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyReq.ProtoReflect.Descriptor instead.
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{0}
}

type EmptyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResp) Reset() {
	*x = EmptyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResp) ProtoMessage() {}

func (x *EmptyResp) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResp.ProtoReflect.Descriptor instead.
func (*EmptyResp) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{1}
}

type IdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdReq) Reset() {
	*x = IdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdReq) ProtoMessage() {}

func (x *IdReq) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdReq.ProtoReflect.Descriptor instead.
func (*IdReq) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{2}
}

func (x *IdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *IdsReq) Reset() {
	*x = IdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdsReq) ProtoMessage() {}

func (x *IdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdsReq.ProtoReflect.Descriptor instead.
func (*IdsReq) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{3}
}

func (x *IdsReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type UserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserIdReq) Reset() {
	*x = UserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdReq) ProtoMessage() {}

func (x *UserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdReq.ProtoReflect.Descriptor instead.
func (*UserIdReq) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{4}
}

func (x *UserIdReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type BatchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuccessCount int64 `protobuf:"varint,1,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
}

func (x *BatchResp) Reset() {
	*x = BatchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResp) ProtoMessage() {}

func (x *BatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResp.ProtoReflect.Descriptor instead.
func (*BatchResp) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{5}
}

func (x *BatchResp) GetSuccessCount() int64 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

type CountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountResp) Reset() {
	*x = CountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountResp) ProtoMessage() {}

func (x *CountResp) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountResp.ProtoReflect.Descriptor instead.
func (*CountResp) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{6}
}

func (x *CountResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// ************* blog 相册管理 *************
type PhotoNewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // 主键
	AlbumId   int64  `protobuf:"varint,2,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`      // 相册id
	PhotoName string `protobuf:"bytes,3,opt,name=photo_name,json=photoName,proto3" json:"photo_name,omitempty"` // 照片名
	PhotoDesc string `protobuf:"bytes,4,opt,name=photo_desc,json=photoDesc,proto3" json:"photo_desc,omitempty"` // 照片描述
	PhotoSrc  string `protobuf:"bytes,5,opt,name=photo_src,json=photoSrc,proto3" json:"photo_src,omitempty"`    // 照片地址
	IsDelete  int64  `protobuf:"varint,6,opt,name=is_delete,json=isDelete,proto3" json:"is_delete,omitempty"`   // 是否删除
}

func (x *PhotoNewReq) Reset() {
	*x = PhotoNewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoNewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoNewReq) ProtoMessage() {}

func (x *PhotoNewReq) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoNewReq.ProtoReflect.Descriptor instead.
func (*PhotoNewReq) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{7}
}

func (x *PhotoNewReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PhotoNewReq) GetAlbumId() int64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *PhotoNewReq) GetPhotoName() string {
	if x != nil {
		return x.PhotoName
	}
	return ""
}

func (x *PhotoNewReq) GetPhotoDesc() string {
	if x != nil {
		return x.PhotoDesc
	}
	return ""
}

func (x *PhotoNewReq) GetPhotoSrc() string {
	if x != nil {
		return x.PhotoSrc
	}
	return ""
}

func (x *PhotoNewReq) GetIsDelete() int64 {
	if x != nil {
		return x.IsDelete
	}
	return 0
}

type PhotoDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                // 主键
	AlbumId   int64  `protobuf:"varint,2,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`       // 相册id
	PhotoName string `protobuf:"bytes,3,opt,name=photo_name,json=photoName,proto3" json:"photo_name,omitempty"`  // 照片名
	PhotoDesc string `protobuf:"bytes,4,opt,name=photo_desc,json=photoDesc,proto3" json:"photo_desc,omitempty"`  // 照片描述
	PhotoSrc  string `protobuf:"bytes,5,opt,name=photo_src,json=photoSrc,proto3" json:"photo_src,omitempty"`     // 照片地址
	IsDelete  int64  `protobuf:"varint,6,opt,name=is_delete,json=isDelete,proto3" json:"is_delete,omitempty"`    // 是否删除
	CreatedAt int64  `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // 创建时间
	UpdatedAt int64  `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // 更新时间
}

func (x *PhotoDetails) Reset() {
	*x = PhotoDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoDetails) ProtoMessage() {}

func (x *PhotoDetails) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoDetails.ProtoReflect.Descriptor instead.
func (*PhotoDetails) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{8}
}

func (x *PhotoDetails) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PhotoDetails) GetAlbumId() int64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *PhotoDetails) GetPhotoName() string {
	if x != nil {
		return x.PhotoName
	}
	return ""
}

func (x *PhotoDetails) GetPhotoDesc() string {
	if x != nil {
		return x.PhotoDesc
	}
	return ""
}

func (x *PhotoDetails) GetPhotoSrc() string {
	if x != nil {
		return x.PhotoSrc
	}
	return ""
}

func (x *PhotoDetails) GetIsDelete() int64 {
	if x != nil {
		return x.IsDelete
	}
	return 0
}

func (x *PhotoDetails) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PhotoDetails) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type FindPhotoListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorts    []string `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"` // 排序
	AlbumId  int64    `protobuf:"varint,4,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
}

func (x *FindPhotoListReq) Reset() {
	*x = FindPhotoListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPhotoListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPhotoListReq) ProtoMessage() {}

func (x *FindPhotoListReq) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPhotoListReq.ProtoReflect.Descriptor instead.
func (*FindPhotoListReq) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{9}
}

func (x *FindPhotoListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindPhotoListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindPhotoListReq) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *FindPhotoListReq) GetAlbumId() int64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

type FindPhotoListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*PhotoDetails `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FindPhotoListResp) Reset() {
	*x = FindPhotoListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPhotoListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPhotoListResp) ProtoMessage() {}

func (x *FindPhotoListResp) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPhotoListResp.ProtoReflect.Descriptor instead.
func (*FindPhotoListResp) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{10}
}

func (x *FindPhotoListResp) GetList() []*PhotoDetails {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FindPhotoListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AlbumNewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                  // 主键
	AlbumName  string `protobuf:"bytes,2,opt,name=album_name,json=albumName,proto3" json:"album_name,omitempty"`    // 相册名
	AlbumDesc  string `protobuf:"bytes,3,opt,name=album_desc,json=albumDesc,proto3" json:"album_desc,omitempty"`    // 相册描述
	AlbumCover string `protobuf:"bytes,4,opt,name=album_cover,json=albumCover,proto3" json:"album_cover,omitempty"` // 相册封面
	IsDelete   int64  `protobuf:"varint,5,opt,name=is_delete,json=isDelete,proto3" json:"is_delete,omitempty"`      // 是否删除
	Status     int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                          // 状态值 1公开 2私密
	CreatedAt  int64  `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`   // 创建时间
	UpdatedAt  int64  `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`   // 更新时间
}

func (x *AlbumNewReq) Reset() {
	*x = AlbumNewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumNewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumNewReq) ProtoMessage() {}

func (x *AlbumNewReq) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumNewReq.ProtoReflect.Descriptor instead.
func (*AlbumNewReq) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{11}
}

func (x *AlbumNewReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlbumNewReq) GetAlbumName() string {
	if x != nil {
		return x.AlbumName
	}
	return ""
}

func (x *AlbumNewReq) GetAlbumDesc() string {
	if x != nil {
		return x.AlbumDesc
	}
	return ""
}

func (x *AlbumNewReq) GetAlbumCover() string {
	if x != nil {
		return x.AlbumCover
	}
	return ""
}

func (x *AlbumNewReq) GetIsDelete() int64 {
	if x != nil {
		return x.IsDelete
	}
	return 0
}

func (x *AlbumNewReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AlbumNewReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AlbumNewReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AlbumDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // 主键
	AlbumName  string `protobuf:"bytes,2,opt,name=album_name,json=albumName,proto3" json:"album_name,omitempty"`     // 相册名
	AlbumDesc  string `protobuf:"bytes,3,opt,name=album_desc,json=albumDesc,proto3" json:"album_desc,omitempty"`     // 相册描述
	AlbumCover string `protobuf:"bytes,4,opt,name=album_cover,json=albumCover,proto3" json:"album_cover,omitempty"`  // 相册封面
	IsDelete   int64  `protobuf:"varint,5,opt,name=is_delete,json=isDelete,proto3" json:"is_delete,omitempty"`       // 是否删除
	Status     int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                           // 状态值 1公开 2私密
	CreatedAt  int64  `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`    // 创建时间
	UpdatedAt  int64  `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`    // 更新时间
	PhotoCount int64  `protobuf:"varint,9,opt,name=photo_count,json=photoCount,proto3" json:"photo_count,omitempty"` // 照片数量
}

func (x *AlbumDetails) Reset() {
	*x = AlbumDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumDetails) ProtoMessage() {}

func (x *AlbumDetails) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumDetails.ProtoReflect.Descriptor instead.
func (*AlbumDetails) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{12}
}

func (x *AlbumDetails) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlbumDetails) GetAlbumName() string {
	if x != nil {
		return x.AlbumName
	}
	return ""
}

func (x *AlbumDetails) GetAlbumDesc() string {
	if x != nil {
		return x.AlbumDesc
	}
	return ""
}

func (x *AlbumDetails) GetAlbumCover() string {
	if x != nil {
		return x.AlbumCover
	}
	return ""
}

func (x *AlbumDetails) GetIsDelete() int64 {
	if x != nil {
		return x.IsDelete
	}
	return 0
}

func (x *AlbumDetails) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AlbumDetails) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AlbumDetails) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AlbumDetails) GetPhotoCount() int64 {
	if x != nil {
		return x.PhotoCount
	}
	return 0
}

type FindAlbumListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorts     []string `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`                          // 排序
	AlbumName string   `protobuf:"bytes,4,opt,name=album_name,json=albumName,proto3" json:"album_name,omitempty"` // 相册名
}

func (x *FindAlbumListReq) Reset() {
	*x = FindAlbumListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAlbumListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAlbumListReq) ProtoMessage() {}

func (x *FindAlbumListReq) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAlbumListReq.ProtoReflect.Descriptor instead.
func (*FindAlbumListReq) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{13}
}

func (x *FindAlbumListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindAlbumListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindAlbumListReq) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *FindAlbumListReq) GetAlbumName() string {
	if x != nil {
		return x.AlbumName
	}
	return ""
}

type FindAlbumListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*AlbumDetails `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FindAlbumListResp) Reset() {
	*x = FindAlbumListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAlbumListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAlbumListResp) ProtoMessage() {}

func (x *FindAlbumListResp) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAlbumListResp.ProtoReflect.Descriptor instead.
func (*FindAlbumListResp) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{14}
}

func (x *FindAlbumListResp) GetList() []*AlbumDetails {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FindAlbumListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type BannerNewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     // 页面id
	BannerName  string `protobuf:"bytes,2,opt,name=banner_name,json=bannerName,proto3" json:"banner_name,omitempty"`    // 页面名
	BannerLabel string `protobuf:"bytes,3,opt,name=banner_label,json=bannerLabel,proto3" json:"banner_label,omitempty"` // 页面标签
	BannerCover string `protobuf:"bytes,4,opt,name=banner_cover,json=bannerCover,proto3" json:"banner_cover,omitempty"` // 页面封面
}

func (x *BannerNewReq) Reset() {
	*x = BannerNewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerNewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerNewReq) ProtoMessage() {}

func (x *BannerNewReq) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerNewReq.ProtoReflect.Descriptor instead.
func (*BannerNewReq) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{15}
}

func (x *BannerNewReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BannerNewReq) GetBannerName() string {
	if x != nil {
		return x.BannerName
	}
	return ""
}

func (x *BannerNewReq) GetBannerLabel() string {
	if x != nil {
		return x.BannerLabel
	}
	return ""
}

func (x *BannerNewReq) GetBannerCover() string {
	if x != nil {
		return x.BannerCover
	}
	return ""
}

type BannerDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     // 页面id
	BannerName  string `protobuf:"bytes,2,opt,name=banner_name,json=bannerName,proto3" json:"banner_name,omitempty"`    // 页面名
	BannerLabel string `protobuf:"bytes,3,opt,name=banner_label,json=bannerLabel,proto3" json:"banner_label,omitempty"` // 页面标签
	BannerCover string `protobuf:"bytes,4,opt,name=banner_cover,json=bannerCover,proto3" json:"banner_cover,omitempty"` // 页面封面
	CreatedAt   int64  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`      // 创建时间
	UpdatedAt   int64  `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`      // 更新时间
}

func (x *BannerDetails) Reset() {
	*x = BannerDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerDetails) ProtoMessage() {}

func (x *BannerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerDetails.ProtoReflect.Descriptor instead.
func (*BannerDetails) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{16}
}

func (x *BannerDetails) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BannerDetails) GetBannerName() string {
	if x != nil {
		return x.BannerName
	}
	return ""
}

func (x *BannerDetails) GetBannerLabel() string {
	if x != nil {
		return x.BannerLabel
	}
	return ""
}

func (x *BannerDetails) GetBannerCover() string {
	if x != nil {
		return x.BannerCover
	}
	return ""
}

func (x *BannerDetails) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *BannerDetails) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type FindBannerListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorts    []string `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"` // 排序
}

func (x *FindBannerListReq) Reset() {
	*x = FindBannerListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindBannerListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBannerListReq) ProtoMessage() {}

func (x *FindBannerListReq) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBannerListReq.ProtoReflect.Descriptor instead.
func (*FindBannerListReq) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{17}
}

func (x *FindBannerListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindBannerListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindBannerListReq) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

type FindBannerListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*BannerDetails `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FindBannerListResp) Reset() {
	*x = FindBannerListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindBannerListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBannerListResp) ProtoMessage() {}

func (x *FindBannerListResp) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBannerListResp.ProtoReflect.Descriptor instead.
func (*FindBannerListResp) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{18}
}

func (x *FindBannerListResp) GetList() []*BannerDetails {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FindBannerListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_photo_proto protoreflect.FileDescriptor

var file_photo_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x22, 0x0a, 0x0a, 0x08, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x22, 0x0b, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x17, 0x0a, 0x05, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x06, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x24, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x09, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x21, 0x0a,
	0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xb0, 0x01, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x53, 0x72, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x0c, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x53, 0x72, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x74, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f,
	0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x11, 0x46,
	0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xef, 0x01, 0x0a, 0x0b, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4e, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x91, 0x02, 0x0a, 0x0c, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x78, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f,
	0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x55, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x85, 0x01, 0x0a, 0x0c, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x22, 0xc4, 0x01, 0x0a, 0x0d, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5a, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x6f, 0x72, 0x74, 0x73, 0x22, 0x57, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xb4, 0x06,
	0x0a, 0x08, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x70, 0x63, 0x12, 0x39, 0x0a, 0x08, 0x41, 0x64,
	0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x46, 0x69, 0x6e,
	0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70,
	0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12,
	0x15, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3c,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x15, 0x2e,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4e, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x0f, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x72, 0x70, 0x63, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x34, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x12, 0x10, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3c, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x16,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70,
	0x63, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x3f, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12,
	0x16, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x35, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x12, 0x10, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72, 0x70,
	0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x72,
	0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_photo_proto_rawDescOnce sync.Once
	file_photo_proto_rawDescData = file_photo_proto_rawDesc
)

func file_photo_proto_rawDescGZIP() []byte {
	file_photo_proto_rawDescOnce.Do(func() {
		file_photo_proto_rawDescData = protoimpl.X.CompressGZIP(file_photo_proto_rawDescData)
	})
	return file_photo_proto_rawDescData
}

var file_photo_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_photo_proto_goTypes = []any{
	(*EmptyReq)(nil),           // 0: photorpc.EmptyReq
	(*EmptyResp)(nil),          // 1: photorpc.EmptyResp
	(*IdReq)(nil),              // 2: photorpc.IdReq
	(*IdsReq)(nil),             // 3: photorpc.IdsReq
	(*UserIdReq)(nil),          // 4: photorpc.UserIdReq
	(*BatchResp)(nil),          // 5: photorpc.BatchResp
	(*CountResp)(nil),          // 6: photorpc.CountResp
	(*PhotoNewReq)(nil),        // 7: photorpc.PhotoNewReq
	(*PhotoDetails)(nil),       // 8: photorpc.PhotoDetails
	(*FindPhotoListReq)(nil),   // 9: photorpc.FindPhotoListReq
	(*FindPhotoListResp)(nil),  // 10: photorpc.FindPhotoListResp
	(*AlbumNewReq)(nil),        // 11: photorpc.AlbumNewReq
	(*AlbumDetails)(nil),       // 12: photorpc.AlbumDetails
	(*FindAlbumListReq)(nil),   // 13: photorpc.FindAlbumListReq
	(*FindAlbumListResp)(nil),  // 14: photorpc.FindAlbumListResp
	(*BannerNewReq)(nil),       // 15: photorpc.BannerNewReq
	(*BannerDetails)(nil),      // 16: photorpc.BannerDetails
	(*FindBannerListReq)(nil),  // 17: photorpc.FindBannerListReq
	(*FindBannerListResp)(nil), // 18: photorpc.FindBannerListResp
}
var file_photo_proto_depIdxs = []int32{
	8,  // 0: photorpc.FindPhotoListResp.list:type_name -> photorpc.PhotoDetails
	12, // 1: photorpc.FindAlbumListResp.list:type_name -> photorpc.AlbumDetails
	16, // 2: photorpc.FindBannerListResp.list:type_name -> photorpc.BannerDetails
	7,  // 3: photorpc.PhotoRpc.AddPhoto:input_type -> photorpc.PhotoNewReq
	7,  // 4: photorpc.PhotoRpc.UpdatePhoto:input_type -> photorpc.PhotoNewReq
	3,  // 5: photorpc.PhotoRpc.DeletePhoto:input_type -> photorpc.IdsReq
	9,  // 6: photorpc.PhotoRpc.FindPhotoList:input_type -> photorpc.FindPhotoListReq
	11, // 7: photorpc.PhotoRpc.AddAlbum:input_type -> photorpc.AlbumNewReq
	11, // 8: photorpc.PhotoRpc.UpdateAlbum:input_type -> photorpc.AlbumNewReq
	2,  // 9: photorpc.PhotoRpc.GetAlbum:input_type -> photorpc.IdReq
	3,  // 10: photorpc.PhotoRpc.DeleteAlbum:input_type -> photorpc.IdsReq
	13, // 11: photorpc.PhotoRpc.FindAlbumList:input_type -> photorpc.FindAlbumListReq
	15, // 12: photorpc.PhotoRpc.AddBanner:input_type -> photorpc.BannerNewReq
	15, // 13: photorpc.PhotoRpc.UpdateBanner:input_type -> photorpc.BannerNewReq
	3,  // 14: photorpc.PhotoRpc.DeleteBanner:input_type -> photorpc.IdsReq
	17, // 15: photorpc.PhotoRpc.FindBannerList:input_type -> photorpc.FindBannerListReq
	8,  // 16: photorpc.PhotoRpc.AddPhoto:output_type -> photorpc.PhotoDetails
	8,  // 17: photorpc.PhotoRpc.UpdatePhoto:output_type -> photorpc.PhotoDetails
	5,  // 18: photorpc.PhotoRpc.DeletePhoto:output_type -> photorpc.BatchResp
	10, // 19: photorpc.PhotoRpc.FindPhotoList:output_type -> photorpc.FindPhotoListResp
	12, // 20: photorpc.PhotoRpc.AddAlbum:output_type -> photorpc.AlbumDetails
	12, // 21: photorpc.PhotoRpc.UpdateAlbum:output_type -> photorpc.AlbumDetails
	12, // 22: photorpc.PhotoRpc.GetAlbum:output_type -> photorpc.AlbumDetails
	5,  // 23: photorpc.PhotoRpc.DeleteAlbum:output_type -> photorpc.BatchResp
	14, // 24: photorpc.PhotoRpc.FindAlbumList:output_type -> photorpc.FindAlbumListResp
	16, // 25: photorpc.PhotoRpc.AddBanner:output_type -> photorpc.BannerDetails
	16, // 26: photorpc.PhotoRpc.UpdateBanner:output_type -> photorpc.BannerDetails
	5,  // 27: photorpc.PhotoRpc.DeleteBanner:output_type -> photorpc.BatchResp
	18, // 28: photorpc.PhotoRpc.FindBannerList:output_type -> photorpc.FindBannerListResp
	16, // [16:29] is the sub-list for method output_type
	3,  // [3:16] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_photo_proto_init() }
func file_photo_proto_init() {
	if File_photo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_photo_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*EmptyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*EmptyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*IdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*IdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*BatchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PhotoNewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PhotoDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*FindPhotoListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*FindPhotoListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*AlbumNewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*AlbumDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*FindAlbumListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*FindAlbumListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*BannerNewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*BannerDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*FindBannerListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*FindBannerListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_photo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_photo_proto_goTypes,
		DependencyIndexes: file_photo_proto_depIdxs,
		MessageInfos:      file_photo_proto_msgTypes,
	}.Build()
	File_photo_proto = out.File
	file_photo_proto_rawDesc = nil
	file_photo_proto_goTypes = nil
	file_photo_proto_depIdxs = nil
}
