// Code generated by goctl. DO NOT EDIT.
// Source: blog.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/logic/userrpc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/pb/blog"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/svc"
)

type UserRpcServer struct {
	svcCtx *svc.ServiceContext
	blog.UnimplementedUserRpcServer
}

func NewUserRpcServer(svcCtx *svc.ServiceContext) *UserRpcServer {
	return &UserRpcServer{
		svcCtx: svcCtx,
	}
}

// 修改用户信息
func (s *UserRpcServer) UpdateUserInfo(ctx context.Context, in *blog.UpdateUserInfoReq) (*blog.EmptyResp, error) {
	l := userrpclogic.NewUpdateUserInfoLogic(ctx, s.svcCtx)
	return l.UpdateUserInfo(in)
}

// 修改用户状态
func (s *UserRpcServer) UpdateUserStatus(ctx context.Context, in *blog.UpdateUserStatusReq) (*blog.EmptyResp, error) {
	l := userrpclogic.NewUpdateUserStatusLogic(ctx, s.svcCtx)
	return l.UpdateUserStatus(in)
}

// 获取用户信息
func (s *UserRpcServer) FindUserInfo(ctx context.Context, in *blog.UserIdReq) (*blog.UserInfoResp, error) {
	l := userrpclogic.NewFindUserInfoLogic(ctx, s.svcCtx)
	return l.FindUserInfo(in)
}

// 查找用户列表
func (s *UserRpcServer) FindUserList(ctx context.Context, in *blog.FindUserListReq) (*blog.FindUserListResp, error) {
	l := userrpclogic.NewFindUserListLogic(ctx, s.svcCtx)
	return l.FindUserList(in)
}

// 查找在线用户列表
func (s *UserRpcServer) FindUserOnlineList(ctx context.Context, in *blog.FindUserListReq) (*blog.FindUserListResp, error) {
	l := userrpclogic.NewFindUserOnlineListLogic(ctx, s.svcCtx)
	return l.FindUserOnlineList(in)
}

// 查询用户登录历史
func (s *UserRpcServer) FindUserLoginHistoryList(ctx context.Context, in *blog.FindLoginHistoryListReq) (*blog.FindLoginHistoryListResp, error) {
	l := userrpclogic.NewFindUserLoginHistoryListLogic(ctx, s.svcCtx)
	return l.FindUserLoginHistoryList(in)
}

// 批量删除登录历史
func (s *UserRpcServer) DeleteUserLoginHistoryList(ctx context.Context, in *blog.IdsReq) (*blog.BatchResp, error) {
	l := userrpclogic.NewDeleteUserLoginHistoryListLogic(ctx, s.svcCtx)
	return l.DeleteUserLoginHistoryList(in)
}

// 查询用户分布区域
func (s *UserRpcServer) FindUserRegionList(ctx context.Context, in *blog.EmptyReq) (*blog.FindUserRegionListResp, error) {
	l := userrpclogic.NewFindUserRegionListLogic(ctx, s.svcCtx)
	return l.FindUserRegionList(in)
}
