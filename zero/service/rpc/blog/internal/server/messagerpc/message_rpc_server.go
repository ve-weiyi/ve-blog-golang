// Code generated by goctl. DO NOT EDIT.
// Source: message.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/logic/messagerpc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/pb/messagerpc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/svc"
)

type MessageRpcServer struct {
	svcCtx *svc.ServiceContext
	messagerpc.UnimplementedMessageRpcServer
}

func NewMessageRpcServer(svcCtx *svc.ServiceContext) *MessageRpcServer {
	return &MessageRpcServer{
		svcCtx: svcCtx,
	}
}

// 创建聊天记录
func (s *MessageRpcServer) AddChatMessage(ctx context.Context, in *messagerpc.ChatMessageNewReq) (*messagerpc.ChatMessageDetails, error) {
	l := messagerpclogic.NewAddChatMessageLogic(ctx, s.svcCtx)
	return l.AddChatMessage(in)
}

// 更新聊天记录
func (s *MessageRpcServer) UpdateChatMessage(ctx context.Context, in *messagerpc.ChatMessageNewReq) (*messagerpc.ChatMessageDetails, error) {
	l := messagerpclogic.NewUpdateChatMessageLogic(ctx, s.svcCtx)
	return l.UpdateChatMessage(in)
}

// 删除聊天记录
func (s *MessageRpcServer) DeletesChatMessage(ctx context.Context, in *messagerpc.IdsReq) (*messagerpc.BatchResp, error) {
	l := messagerpclogic.NewDeletesChatMessageLogic(ctx, s.svcCtx)
	return l.DeletesChatMessage(in)
}

// 查询聊天记录
func (s *MessageRpcServer) GetChatMessage(ctx context.Context, in *messagerpc.IdReq) (*messagerpc.ChatMessageDetails, error) {
	l := messagerpclogic.NewGetChatMessageLogic(ctx, s.svcCtx)
	return l.GetChatMessage(in)
}

// 查询聊天记录列表
func (s *MessageRpcServer) FindChatMessageList(ctx context.Context, in *messagerpc.FindChatMessageListReq) (*messagerpc.FindChatMessageListResp, error) {
	l := messagerpclogic.NewFindChatMessageListLogic(ctx, s.svcCtx)
	return l.FindChatMessageList(in)
}

// 创建留言
func (s *MessageRpcServer) AddRemark(ctx context.Context, in *messagerpc.RemarkNewReq) (*messagerpc.RemarkDetails, error) {
	l := messagerpclogic.NewAddRemarkLogic(ctx, s.svcCtx)
	return l.AddRemark(in)
}

// 更新留言
func (s *MessageRpcServer) UpdateRemark(ctx context.Context, in *messagerpc.RemarkUpdateReq) (*messagerpc.RemarkDetails, error) {
	l := messagerpclogic.NewUpdateRemarkLogic(ctx, s.svcCtx)
	return l.UpdateRemark(in)
}

// 删除留言
func (s *MessageRpcServer) DeletesRemark(ctx context.Context, in *messagerpc.IdsReq) (*messagerpc.BatchResp, error) {
	l := messagerpclogic.NewDeletesRemarkLogic(ctx, s.svcCtx)
	return l.DeletesRemark(in)
}

// 查询留言
func (s *MessageRpcServer) GetRemark(ctx context.Context, in *messagerpc.IdReq) (*messagerpc.RemarkDetails, error) {
	l := messagerpclogic.NewGetRemarkLogic(ctx, s.svcCtx)
	return l.GetRemark(in)
}

// 查询留言列表
func (s *MessageRpcServer) FindRemarkList(ctx context.Context, in *messagerpc.FindRemarkListReq) (*messagerpc.FindRemarkListResp, error) {
	l := messagerpclogic.NewFindRemarkListLogic(ctx, s.svcCtx)
	return l.FindRemarkList(in)
}
