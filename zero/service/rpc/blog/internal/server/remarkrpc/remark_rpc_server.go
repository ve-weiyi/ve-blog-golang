// Code generated by goctl. DO NOT EDIT.
// Source: remark.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/logic/remarkrpc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/pb/remarkrpc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/svc"
)

type RemarkRpcServer struct {
	svcCtx *svc.ServiceContext
	remarkrpc.UnimplementedRemarkRpcServer
}

func NewRemarkRpcServer(svcCtx *svc.ServiceContext) *RemarkRpcServer {
	return &RemarkRpcServer{
		svcCtx: svcCtx,
	}
}

// 创建留言
func (s *RemarkRpcServer) AddRemark(ctx context.Context, in *remarkrpc.RemarkNewReq) (*remarkrpc.RemarkDetails, error) {
	l := remarkrpclogic.NewAddRemarkLogic(ctx, s.svcCtx)
	return l.AddRemark(in)
}

// 更新留言
func (s *RemarkRpcServer) UpdateRemark(ctx context.Context, in *remarkrpc.RemarkUpdateReq) (*remarkrpc.RemarkDetails, error) {
	l := remarkrpclogic.NewUpdateRemarkLogic(ctx, s.svcCtx)
	return l.UpdateRemark(in)
}

// 删除留言
func (s *RemarkRpcServer) DeleteRemark(ctx context.Context, in *remarkrpc.IdsReq) (*remarkrpc.BatchResp, error) {
	l := remarkrpclogic.NewDeleteRemarkLogic(ctx, s.svcCtx)
	return l.DeleteRemark(in)
}

// 查询留言
func (s *RemarkRpcServer) GetRemark(ctx context.Context, in *remarkrpc.IdReq) (*remarkrpc.RemarkDetails, error) {
	l := remarkrpclogic.NewGetRemarkLogic(ctx, s.svcCtx)
	return l.GetRemark(in)
}

// 查询留言列表
func (s *RemarkRpcServer) FindRemarkList(ctx context.Context, in *remarkrpc.FindRemarkListReq) (*remarkrpc.FindRemarkListResp, error) {
	l := remarkrpclogic.NewFindRemarkListLogic(ctx, s.svcCtx)
	return l.FindRemarkList(in)
}
