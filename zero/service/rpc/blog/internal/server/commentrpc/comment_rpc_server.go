// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/logic/commentrpc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/pb/commentrpc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/svc"
)

type CommentRpcServer struct {
	svcCtx *svc.ServiceContext
	commentrpc.UnimplementedCommentRpcServer
}

func NewCommentRpcServer(svcCtx *svc.ServiceContext) *CommentRpcServer {
	return &CommentRpcServer{
		svcCtx: svcCtx,
	}
}

// 创建评论
func (s *CommentRpcServer) AddComment(ctx context.Context, in *commentrpc.CommentNew) (*commentrpc.CommentDetails, error) {
	l := commentrpclogic.NewAddCommentLogic(ctx, s.svcCtx)
	return l.AddComment(in)
}

// 更新评论
func (s *CommentRpcServer) UpdateComment(ctx context.Context, in *commentrpc.CommentNew) (*commentrpc.CommentDetails, error) {
	l := commentrpclogic.NewUpdateCommentLogic(ctx, s.svcCtx)
	return l.UpdateComment(in)
}

// 删除评论
func (s *CommentRpcServer) DeleteComment(ctx context.Context, in *commentrpc.IdReq) (*commentrpc.BatchResp, error) {
	l := commentrpclogic.NewDeleteCommentLogic(ctx, s.svcCtx)
	return l.DeleteComment(in)
}

// 批量删除评论
func (s *CommentRpcServer) DeleteCommentList(ctx context.Context, in *commentrpc.IdsReq) (*commentrpc.BatchResp, error) {
	l := commentrpclogic.NewDeleteCommentListLogic(ctx, s.svcCtx)
	return l.DeleteCommentList(in)
}

// 查询评论
func (s *CommentRpcServer) FindComment(ctx context.Context, in *commentrpc.IdReq) (*commentrpc.CommentDetails, error) {
	l := commentrpclogic.NewFindCommentLogic(ctx, s.svcCtx)
	return l.FindComment(in)
}

// 查询评论列表
func (s *CommentRpcServer) FindCommentList(ctx context.Context, in *commentrpc.FindCommentListReq) (*commentrpc.FindCommentListResp, error) {
	l := commentrpclogic.NewFindCommentListLogic(ctx, s.svcCtx)
	return l.FindCommentList(in)
}

// 点赞评论
func (s *CommentRpcServer) LikeComment(ctx context.Context, in *commentrpc.IdReq) (*commentrpc.EmptyResp, error) {
	l := commentrpclogic.NewLikeCommentLogic(ctx, s.svcCtx)
	return l.LikeComment(in)
}

// 用户点赞的评论
func (s *CommentRpcServer) FindUserLikeComment(ctx context.Context, in *commentrpc.UserIdReq) (*commentrpc.FindLikeCommentResp, error) {
	l := commentrpclogic.NewFindUserLikeCommentLogic(ctx, s.svcCtx)
	return l.FindUserLikeComment(in)
}
