// Code generated by goctl. DO NOT EDIT.
// Source: chat.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/logic/chatrpc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/pb/chatrpc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/svc"
)

type ChatRpcServer struct {
	svcCtx *svc.ServiceContext
	chatrpc.UnimplementedChatRpcServer
}

func NewChatRpcServer(svcCtx *svc.ServiceContext) *ChatRpcServer {
	return &ChatRpcServer{
		svcCtx: svcCtx,
	}
}

// 创建聊天记录
func (s *ChatRpcServer) AddChatMessage(ctx context.Context, in *chatrpc.ChatMessageNewReq) (*chatrpc.ChatMessageDetails, error) {
	l := chatrpclogic.NewAddChatMessageLogic(ctx, s.svcCtx)
	return l.AddChatMessage(in)
}

// 更新聊天记录
func (s *ChatRpcServer) UpdateChatMessage(ctx context.Context, in *chatrpc.ChatMessageNewReq) (*chatrpc.ChatMessageDetails, error) {
	l := chatrpclogic.NewUpdateChatMessageLogic(ctx, s.svcCtx)
	return l.UpdateChatMessage(in)
}

// 删除聊天记录
func (s *ChatRpcServer) DeletesChatMessage(ctx context.Context, in *chatrpc.IdsReq) (*chatrpc.BatchResp, error) {
	l := chatrpclogic.NewDeletesChatMessageLogic(ctx, s.svcCtx)
	return l.DeletesChatMessage(in)
}

// 查询聊天记录列表
func (s *ChatRpcServer) FindChatMessageList(ctx context.Context, in *chatrpc.FindChatMessageListReq) (*chatrpc.FindChatMessageListResp, error) {
	l := chatrpclogic.NewFindChatMessageListLogic(ctx, s.svcCtx)
	return l.FindChatMessageList(in)
}
