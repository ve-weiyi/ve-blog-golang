// Code generated by goctl. DO NOT EDIT.
// Source: syslog.proto

package syslogrpc

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/pb/syslogrpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BatchResp                = syslogrpc.BatchResp
	CountResp                = syslogrpc.CountResp
	EmptyReq                 = syslogrpc.EmptyReq
	EmptyResp                = syslogrpc.EmptyResp
	FindOperationLogListReq  = syslogrpc.FindOperationLogListReq
	FindOperationLogListResp = syslogrpc.FindOperationLogListResp
	IdReq                    = syslogrpc.IdReq
	IdsReq                   = syslogrpc.IdsReq
	OperationLog             = syslogrpc.OperationLog
	UploadLogReq             = syslogrpc.UploadLogReq
	UploadLogResp            = syslogrpc.UploadLogResp
	UserIdReq                = syslogrpc.UserIdReq

	SyslogRpc interface {
		// 创建操作记录
		AddOperationLog(ctx context.Context, in *OperationLog, opts ...grpc.CallOption) (*OperationLog, error)
		// 批量删除操作记录
		DeleteOperationLog(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error)
		// 查询操作记录列表
		FindOperationLogList(ctx context.Context, in *FindOperationLogListReq, opts ...grpc.CallOption) (*FindOperationLogListResp, error)
		// 上传文件
		AddUploadLog(ctx context.Context, in *UploadLogReq, opts ...grpc.CallOption) (*UploadLogResp, error)
	}

	defaultSyslogRpc struct {
		cli zrpc.Client
	}
)

func NewSyslogRpc(cli zrpc.Client) SyslogRpc {
	return &defaultSyslogRpc{
		cli: cli,
	}
}

// 创建操作记录
func (m *defaultSyslogRpc) AddOperationLog(ctx context.Context, in *OperationLog, opts ...grpc.CallOption) (*OperationLog, error) {
	client := syslogrpc.NewSyslogRpcClient(m.cli.Conn())
	return client.AddOperationLog(ctx, in, opts...)
}

// 批量删除操作记录
func (m *defaultSyslogRpc) DeleteOperationLog(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error) {
	client := syslogrpc.NewSyslogRpcClient(m.cli.Conn())
	return client.DeleteOperationLog(ctx, in, opts...)
}

// 查询操作记录列表
func (m *defaultSyslogRpc) FindOperationLogList(ctx context.Context, in *FindOperationLogListReq, opts ...grpc.CallOption) (*FindOperationLogListResp, error) {
	client := syslogrpc.NewSyslogRpcClient(m.cli.Conn())
	return client.FindOperationLogList(ctx, in, opts...)
}

// 上传文件
func (m *defaultSyslogRpc) AddUploadLog(ctx context.Context, in *UploadLogReq, opts ...grpc.CallOption) (*UploadLogResp, error) {
	client := syslogrpc.NewSyslogRpcClient(m.cli.Conn())
	return client.AddUploadLog(ctx, in, opts...)
}
