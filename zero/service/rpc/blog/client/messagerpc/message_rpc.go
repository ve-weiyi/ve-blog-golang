// Code generated by goctl. DO NOT EDIT.
// Source: message.proto

package messagerpc

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/zero/service/rpc/blog/internal/pb/messagerpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BatchResp               = messagerpc.BatchResp
	ChatMessageDetails      = messagerpc.ChatMessageDetails
	ChatMessageNewReq       = messagerpc.ChatMessageNewReq
	EmptyReq                = messagerpc.EmptyReq
	EmptyResp               = messagerpc.EmptyResp
	FindChatMessageListReq  = messagerpc.FindChatMessageListReq
	FindChatMessageListResp = messagerpc.FindChatMessageListResp
	FindRemarkListReq       = messagerpc.FindRemarkListReq
	FindRemarkListResp      = messagerpc.FindRemarkListResp
	IdReq                   = messagerpc.IdReq
	IdsReq                  = messagerpc.IdsReq
	RemarkDetails           = messagerpc.RemarkDetails
	RemarkNewReq            = messagerpc.RemarkNewReq
	RemarkUpdateReq         = messagerpc.RemarkUpdateReq

	MessageRpc interface {
		// 创建聊天记录
		AddChatMessage(ctx context.Context, in *ChatMessageNewReq, opts ...grpc.CallOption) (*ChatMessageDetails, error)
		// 更新聊天记录
		UpdateChatMessage(ctx context.Context, in *ChatMessageNewReq, opts ...grpc.CallOption) (*ChatMessageDetails, error)
		// 删除聊天记录
		DeletesChatMessage(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error)
		// 查询聊天记录
		GetChatMessage(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*ChatMessageDetails, error)
		// 查询聊天记录列表
		FindChatMessageList(ctx context.Context, in *FindChatMessageListReq, opts ...grpc.CallOption) (*FindChatMessageListResp, error)
		// 创建留言
		AddRemark(ctx context.Context, in *RemarkNewReq, opts ...grpc.CallOption) (*RemarkDetails, error)
		// 更新留言
		UpdateRemark(ctx context.Context, in *RemarkUpdateReq, opts ...grpc.CallOption) (*RemarkDetails, error)
		// 删除留言
		DeletesRemark(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error)
		// 查询留言
		GetRemark(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*RemarkDetails, error)
		// 查询留言列表
		FindRemarkList(ctx context.Context, in *FindRemarkListReq, opts ...grpc.CallOption) (*FindRemarkListResp, error)
	}

	defaultMessageRpc struct {
		cli zrpc.Client
	}
)

func NewMessageRpc(cli zrpc.Client) MessageRpc {
	return &defaultMessageRpc{
		cli: cli,
	}
}

// 创建聊天记录
func (m *defaultMessageRpc) AddChatMessage(ctx context.Context, in *ChatMessageNewReq, opts ...grpc.CallOption) (*ChatMessageDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.AddChatMessage(ctx, in, opts...)
}

// 更新聊天记录
func (m *defaultMessageRpc) UpdateChatMessage(ctx context.Context, in *ChatMessageNewReq, opts ...grpc.CallOption) (*ChatMessageDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.UpdateChatMessage(ctx, in, opts...)
}

// 删除聊天记录
func (m *defaultMessageRpc) DeletesChatMessage(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.DeletesChatMessage(ctx, in, opts...)
}

// 查询聊天记录
func (m *defaultMessageRpc) GetChatMessage(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*ChatMessageDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.GetChatMessage(ctx, in, opts...)
}

// 查询聊天记录列表
func (m *defaultMessageRpc) FindChatMessageList(ctx context.Context, in *FindChatMessageListReq, opts ...grpc.CallOption) (*FindChatMessageListResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.FindChatMessageList(ctx, in, opts...)
}

// 创建留言
func (m *defaultMessageRpc) AddRemark(ctx context.Context, in *RemarkNewReq, opts ...grpc.CallOption) (*RemarkDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.AddRemark(ctx, in, opts...)
}

// 更新留言
func (m *defaultMessageRpc) UpdateRemark(ctx context.Context, in *RemarkUpdateReq, opts ...grpc.CallOption) (*RemarkDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.UpdateRemark(ctx, in, opts...)
}

// 删除留言
func (m *defaultMessageRpc) DeletesRemark(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.DeletesRemark(ctx, in, opts...)
}

// 查询留言
func (m *defaultMessageRpc) GetRemark(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*RemarkDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.GetRemark(ctx, in, opts...)
}

// 查询留言列表
func (m *defaultMessageRpc) FindRemarkList(ctx context.Context, in *FindRemarkListReq, opts ...grpc.CallOption) (*FindRemarkListResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.FindRemarkList(ctx, in, opts...)
}
