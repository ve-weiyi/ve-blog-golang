// 声明 proto 语法版本，固定值
syntax = "proto3";

// proto 包名
package chatrpc;

// 生成 golang 代码后的包名
option go_package = "./chatrpc";

message EmptyReq {
}

message EmptyResp {
}

message IdReq {
  int64 id = 1;
}
message IdsReq {
  repeated int64 ids = 1;
}

message BatchResp {
  int64 success_count = 1;
}

/************** blog 聊天记录 **************/

message ChatMessageNewReq {
  int64 id = 1;// 主键
  string user_id = 2;// 用户id
  string device_id = 3;// 设备id
  string chat_id = 4;// 聊天id
  string reply_msg_id = 5;// 回复消息id
  string reply_users = 6;// 回复用户列表
  string ip_address = 7;// ip地址
  string ip_source = 8;// ip来源
  string chat_content = 9;// 聊天内容
  int64 type = 10;// 类型
}

message ChatMessageDetails {
  int64 id = 1;// 主键
  string user_id = 2;// 用户id
  string device_id = 3;// 设备id
  string chat_id = 4;// 聊天id
  string reply_msg_id = 5;// 回复消息id
  string reply_users = 6;// 回复用户列表
  string ip_address = 7;// ip地址
  string ip_source = 8;// ip来源
  string chat_content = 9;// 聊天内容
  int64 type = 10;// 类型
  int64 status = 11;// 状态 0:正常 1:编辑 2：删除
  int64 created_at = 12;// 创建时间
  int64 updated_at = 13;// 更新时间
}

message FindChatMessageListReq {
  int64 after = 101;
  int64 before = 102;
  int64 limit = 103;
  string user_id = 2;// 用户id
  string chat_id = 3;// 聊天id
  string chat_content = 8;// 聊天内容
  int64 type = 9;// 类型
}

message FindChatMessageListResp {
  repeated ChatMessageDetails list = 1;
  int64 total = 2;
}

service ChatRpc {
  // 创建聊天记录
  rpc AddChatMessage(ChatMessageNewReq) returns(ChatMessageDetails);
  // 更新聊天记录
  rpc UpdateChatMessage(ChatMessageNewReq) returns(ChatMessageDetails);
  // 删除聊天记录
  rpc DeletesChatMessage(IdsReq) returns(BatchResp);
  // 查询聊天记录列表
  rpc FindChatMessageList(FindChatMessageListReq) returns(FindChatMessageListResp);
}
