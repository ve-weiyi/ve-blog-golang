// 声明 proto 语法版本，固定值
syntax = "proto3";

// proto 包名
package friendrpc;

// 生成 golang 代码后的包名
option go_package = "./friendrpc";

message EmptyReq {
}

message EmptyResp {
}

message IdReq {
  int64 id = 1;
}

message IdsReq {
  repeated int64 ids = 1;
}

message UserIdReq {
  int64 user_id = 1;
}

message BatchResp {
  int64 success_count = 1;
}

/************** blog 友链管理 **************/
message FriendNewReq {
  int64 id = 1;// id
  string link_name = 2;// 链接名
  string link_avatar = 3;// 链接头像
  string link_address = 4;// 链接地址
  string link_intro = 5;// 链接介绍
}

message FriendDetails {
  int64 id = 1;// id
  string link_name = 2;// 链接名
  string link_avatar = 3;// 链接头像
  string link_address = 4;// 链接地址
  string link_intro = 5;// 链接介绍
  int64 created_at = 6;// 创建时间
  int64 updated_at = 7;// 更新时间
}

message FindFriendListReq {
  int64 page = 1;
  int64 page_size = 2;
  repeated string sorts = 3; // 排序
  string link_name = 4;// 链接名
}

message FindFriendListResp {
  repeated FriendDetails list = 1;
  int64 total = 2;
}

service FriendRpc {
  // 创建友链
  rpc AddFriend(FriendNewReq) returns(FriendDetails);
  // 更新友链
  rpc UpdateFriend(FriendNewReq) returns(FriendDetails);
  // 删除友链
  rpc DeleteFriend(IdsReq) returns(BatchResp);
  // 查询友链列表
  rpc FindFriendList(FindFriendListReq) returns(FindFriendListResp);
}
