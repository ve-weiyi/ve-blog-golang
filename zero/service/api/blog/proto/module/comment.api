syntax = "v1"

import "base.api"

type (

    // 创建评论
    CommentNewReq {
        TopicId int64 `json:"topic_id,optional"`                 // 主题id
        ParentId int64 `json:"parent_id,optional"`               // 父评论id
        SessionId int64 `json:"session_id,optional"`             // 会话id
        ReplyUserId int64 `json:"reply_user_id,optional"`        // 回复用户id
        CommentContent string `json:"comment_content,optional"`  // 评论内容
        Type int64 `json:"type,optional"`                        // 评论类型 1.文章 2.友链 3.说说
    }

        // 后台评论
    CommentBackDTO {
        Id int64 `json:"id,optional"`
        Type int64 `json:"type,optional"`
        TopicTitle string `json:"topic_title,optional"`
        Nickname string `json:"nickname,optional"`                            // 用户昵称
        Avatar string `json:"avatar,optional"`                                // 用户头像
        CommentContent string `json:"comment_content,optional"`
        IsReview int64 `json:"is_review,optional"`
        CreatedAt int64 `json:"created_at,optional"`
    }

    CommentUserInfo {
        Id int64 `json:"id,optional"`
        Nickname string `json:"nickname,optional"`
        Avatar string `json:"avatar,optional"`
        Website string `json:"website,optional"`
    }

        // 评论回复
    CommentReply {
        Id int64 `json:"id,optional"`                                         // 评论id
        TopicId int64 `json:"topic_id,optional"`                              // 主题id
        ParentId int64 `json:"parent_id,optional"`                            // 父评论id
        SessionId int64 `json:"session_id,optional"`                          // 会话id
        UserId int64 `json:"user_id,optional"`                                // 用户id
        Nickname string `json:"nickname,optional"`                            // 用户昵称
        Avatar string `json:"avatar,optional"`                                // 用户头像
        Website string `json:"website,optional"`                              // 用户网站
        ReplyUserId int64 `json:"reply_user_id,optional"`                     // 被回复用户id
        ReplyNickname string `json:"reply_nickname,optional"`                 // 被回复用户昵称
        ReplyAvatar string `json:"reply_avatar,optional"`                     // 被回复用户头像
        ReplyWebsite string `json:"reply_website,optional"`                   // 被回复用户网站
        CommentContent string `json:"comment_content,optional"`               // 评论内容
        Type int64 `json:"type,optional"`                                     // 评论类型 1.文章 2.友链 3.说说
        CreatedAt int64 `json:"created_at,optional"`                          // 评论时间
        LikeCount int64 `json:"like_count,optional"`                          // 点赞数
    }


        // 评论
    CommentDTO {
        Id int64 `json:"id,optional"`                                         // 评论id
        TopicId int64 `json:"topic_id,optional"`                              // 主题id
        ParentId int64 `json:"parent_id,optional"`                            // 父评论id
        SessionId int64 `json:"session_id,optional"`                          // 会话id
        UserId int64 `json:"user_id,optional"`                                // 用户id
        Nickname string `json:"nickname,optional"`                            // 用户昵称
        Avatar string `json:"avatar,optional"`                                // 用户头像
        Website string `json:"website,optional"`                              // 用户网站
        ReplyUserId int64 `json:"reply_user_id,optional"`                     // 被回复用户id
        ReplyNickname string `json:"reply_nickname,optional"`                 // 被回复用户昵称
        ReplyAvatar string `json:"reply_avatar,optional"`                     // 被回复用户头像
        ReplyWebsite string `json:"reply_website,optional"`                   // 被回复用户网站
        CommentContent string `json:"comment_content,optional"`               // 评论内容
        Type int64 `json:"type,optional"`                                     // 评论类型 1.文章 2.友链 3.说说
        CreatedAt int64 `json:"created_at,optional"`                          // 评论时间
        LikeCount int64 `json:"like_count,optional"`                          // 点赞数
        ReplyCount int64 `json:"reply_count,optional"`                        // 回复量
        CommentReplyList []*CommentReply `json:"comment_reply_list,optional"` // 评论回复列表
    }


    CommentQueryReq {
        Page int64 `json:"page,optional"`                                       // 页码
        PageSize int64 `json:"page_size,optional"`                              // 每页数量
        TopicId int64 `json:"topic_id,optional"`                                // 主题id
        ParentId int64 `json:"parent_id,optional"`                              // 父评论id
        Type int64 `json:"type,optional"`                                       // 评论类型 1.文章 2.友链 3.说说
        OrderBy string `json:"order_by,optional"`                               // 排序字段 create_at|like_count
    }
)

@server(
    prefix: /api/v1
    group: comment
    middleware: SignToken
)

service blog-api {
    @doc "查询评论列表"
    @handler FindCommentList
    post /comment/find_comment_list (CommentQueryReq) returns (PageResp)

    @doc "查询评论回复列表"
    @handler FindCommentReplyList
    post /comment/find_comment_reply_list (CommentQueryReq) returns (PageResp)
}

@server(
    prefix: /api/v1
    group: comment
    middleware: SignToken,JwtToken
)

service blog-api {
    @doc "创建评论"
    @handler CreateComment
    post /comment/create_comment (CommentNewReq) returns (CommentNewReq)

    @doc "更新评论"
    @handler UpdateComment
    put /comment/update_comment (CommentNewReq) returns (CommentNewReq)

    @doc "删除评论"
    @handler DeleteComment
    delete /comment/delete_comment (IdReq) returns (EmptyResp)

    @doc "批量删除评论"
    @handler DeleteCommentList
    delete /comment/delete_comment_list (IdsReq) returns (BatchResp)

    @doc "查询评论"
    @handler FindComment
    post /comment/find_comment (IdReq) returns (CommentBackDTO)

    @doc "查询评论列表(后台)"
    @handler FindCommentBackList
    post /comment/find_comment_back_list (PageQuery) returns (PageResp)

    @doc "点赞评论"
    @handler LikeComment
    post /comment/like_comment (IdReq) returns (EmptyResp)
}
