syntax = "v1"

import "base.api"

type (
    FileFolderNewReq {
        Id int64 `json:"id,optional"`             // 文件目录ID
        FilePath string `json:"file_path"`        // 文件路径
        FolderName string `json:"folder_name"`    // 文件夹名称
        FolderDesc string `json:"folder_desc"`    // 文件夹描述
    }

    FileFolderBackDTO {
        Id int64 `json:"id,optional"`             // 文件目录ID
        UserId int64 `json:"user_id"`             // 用户id
        FilePath string `json:"file_path"`        // 文件路径
        FolderName string `json:"folder_name"`    // 文件夹名称
        FolderDesc string `json:"folder_desc"`    // 文件夹描述
        CreatedAt int64 `json:"created_at"`       // 创建时间
        UpdatedAt int64 `json:"updated_at"`       // 更新时间
    }


    FileFolderQuery {
        PageQuery
        FilePath string `json:"file_path,optional"`        // 文件路径
    }


    FileUploadBackDTO {
        Id int64 `json:"id,optional"`             // 文件目录ID
        UserId int64 `json:"user_id"`             // 用户id
        FilePath string `json:"file_path"`        // 文件路径
        FileName string `json:"file_name"`        // 文件名称
        FileType string `json:"file_type"`        // 文件类型
        FileSize int64 `json:"file_size"`         // 文件大小
        FileMd5 string `json:"file_md5"`          // 文件md5值
        FileUrl string `json:"file_url"`          // 上传路径
        CreatedAt int64 `json:"created_at"`       // 创建时间
        UpdatedAt int64 `json:"updated_at"`       // 更新时间
    }


    FileUploadQuery {
        PageQuery
        FilePath string `json:"file_path,optional"`        // 文件路径
        FileType string `json:"file_type,optional"`        // 文件类型
    }

    UploadFileReq {
        File interface{} `form:"file,optional"`   // 文件
        FilePath string `json:"file_path,optional"`        // 文件路径
    }

    MultiUploadFileReq {
        Files []interface{} `form:"files,optional"`   // 文件列表
        FilePath string `json:"file_path,optional"`        // 文件路径
    }
)

@server(
    prefix: /admin_api/v1
    group: file
    middleware: SignToken
)

service admin-api {
    @doc "分页获取文件目录列表"
    @handler FindFileFolderList
    post /file/find_folder_list (FileFolderQuery) returns (PageResp)

    @doc "分页获取文件上传列表"
    @handler FindFileUploadList
    post /file/find_file_list (FileUploadQuery) returns (PageResp)
}

@server(
    prefix: /admin_api/v1
    group: file
    middleware: SignToken,JwtToken,Operation
)

service admin-api {
    @doc "创建文件目录"
    @handler AddFileFolder
    post /file/add_file_folder (FileFolderNewReq) returns (FileFolderBackDTO)

    @doc "更新文件目录"
    @handler UpdateFileFolder
    put /file/update_file_folder (FileFolderNewReq) returns (FileFolderBackDTO)

    @doc "删除文件目录"
    @handler DeletesFileFolder
    delete /file/deletes_file_folder (IdsReq) returns (BatchResp)


    @doc "删除文件上传"
    @handler DeletesFileUpload
    delete /file/deletes_file (IdsReq) returns (BatchResp)

    @doc "上传文件"
    @handler UploadFile
    post /file/upload_file (UploadFileReq) returns (FileUploadBackDTO)

    @doc "上传文件列表"
    @handler MultiUploadFile
    post /file/multi_upload_file (MultiUploadFileReq) returns ([]*FileUploadBackDTO)

}
