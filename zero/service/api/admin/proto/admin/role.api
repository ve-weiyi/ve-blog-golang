syntax = "v1"

import "base.api"

type (
    // 角色
    RoleNewReq {
        Id int64 `json:"id,optional"`                     // 主键id
        ParentId int64 `json:"parent_id"`                 // 父角色id
        RoleName string `json:"role_name"`                // 角色名
        RoleLabel string `json:"role_label"`              // 角色标签
        RoleComment string `json:"role_comment"`          // 角色备注
        IsDisable int64 `json:"is_disable"`               // 是否禁用  0否 1是
        IsDefault int64 `json:"is_default"`               // 是否默认角色 0否 1是
    }

    RoleBackDTO {
        Id int64 `json:"id,optional"`                     // 主键id
        ParentId int64 `json:"parent_id"`                 // 父角色id
        RoleName string `json:"role_name"`                // 角色名
        RoleLabel string `json:"role_label"`              // 角色标签
        RoleComment string `json:"role_comment"`          // 角色备注
        IsDisable int64 `json:"is_disable"`               // 是否禁用  0否 1是
        IsDefault int64 `json:"is_default"`               // 是否默认角色 0否 1是
        CreatedAt int64 `json:"created_at"`               // 创建时间
        UpdatedAt int64 `json:"updated_at"`               // 更新时间
    }

    RoleResourcesResp {
        RoleId int64 `json:"role_id"`
        ApiIds []int64 `json:"api_ids"`
        MenuIds []int64 `json:"menu_ids"`
    }

    UpdateRoleApisReq {
        RoleId int64 `json:"role_id"`
        ApiIds []int64 `json:"api_ids"`
    }

    UpdateRoleMenusReq {
        RoleId int64 `json:"role_id"`
        MenuIds []int64 `json:"menu_ids"`
    }

    RoleQuery {
        PageQuery
        RoleName string `json:"role_name,optional"`         // 角色名
        RoleLabel string `json:"role_label,optional"`              // 角色标签
        IsDisable int64 `json:"is_disable,optional"`        // 是否禁用  0否 1是
    }
)

@server(
    prefix: /admin_api/v1
    group: role
    middleware: SignToken,JwtToken,Operation
)

service admin-api {
    @doc "创建角色"
    @handler AddRole
    post /role/add_role (RoleNewReq) returns (RoleBackDTO)

    @doc "更新角色"
    @handler UpdateRole
    put /role/update_role (RoleNewReq) returns (RoleBackDTO)

    @doc "删除角色"
    @handler DeleteRole
    delete /role/delete_role (IdReq) returns (BatchResp)

    @doc "批量删除角色"
    @handler BatchDeleteRole
    post /role/batch_delete_role (IdsReq) returns (BatchResp)


    @doc "分页获取角色列表"
    @handler FindRoleList
    post /role/find_role_list (RoleQuery) returns (PageResp)

    @doc "获取角色资源列表"
    @handler FindRoleResources
    post /role/find_role_resources (IdReq) returns (RoleResourcesResp)

    @doc "更新角色菜单权限"
    @handler UpdateRoleMenus
    post /role/update_role_menus (UpdateRoleMenusReq) returns (EmptyResp)

    @doc "更新角色接口权限"
    @handler UpdateRoleApis
    post /role/update_role_apis (UpdateRoleApisReq) returns (EmptyResp)
}
