syntax = "v1"

import "base.api"

type (
    Friend {
        Id int64 `json:"id,optional"`                     // id
        LinkName string `json:"link_name,optional"`       // 链接名
        LinkAvatar string `json:"link_avatar,optional"`   // 链接头像
        LinkAddress string `json:"link_address,optional"` // 链接地址
        LinkIntro string `json:"link_intro,optional"`     // 链接介绍
        CreatedAt int64 `json:"created_at,optional"`      // 创建时间
        UpdatedAt int64 `json:"updated_at,optional"`      // 更新时间
    }

    FriendQuery {
        Page int64 `json:"page,optional"`                                       // 页码
        PageSize int64 `json:"page_size,optional"`                              // 每页数量
        LinkName string `json:"link_name,optional"`                             // 链接名
    }
)

@server(
    prefix: /api/v1
    group: friend
    middleware: SignToken
)

service admin-api {
    @doc "分页获取友链列表"
    @handler FindFriendList
    post /friend/find_friend_list (FriendQuery) returns (PageResp)
}

@server(
    prefix: /api/v1
    group: friend
    middleware: SignToken,JwtToken
)

service admin-api {
    @doc "创建友链"
    @handler AddFriend
    post /friend/add_friend (Friend) returns (Friend)

    @doc "更新友链"
    @handler UpdateFriend
    put /friend/update_friend (Friend) returns (Friend)

    @doc "删除友链"
    @handler DeleteFriend
    delete /friend/delete_friend (IdReq) returns (BatchResp)

    @doc "批量删除友链"
    @handler BatchDeleteFriend
    delete /friend/batch_delete_friend (IdsReq) returns (BatchResp)
}
