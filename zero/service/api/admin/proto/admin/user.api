syntax = "v1"

import "base.api"

type (
    UserInfoResp {
        UserId int64 `json:"user_id"`               // 用户id
        Username string `json:"username"`           // 用户名
        Nickname string `json:"nickname"`           // 用户昵称
        Avatar string `json:"avatar"`               // 用户头像
        Email string `json:"email"`                 // 用户邮箱
        Phone string `json:"phone"`                 // 用户手机号
        Status int64 `json:"status"`                // 状态
        LoginType string `json:"login_type"`        // 登录方式
        IpAddress string `json:"ip_address"`        // ip host
        IpSource string `json:"ip_source"`          // ip 源
        CreatedAt int64 `json:"created_at"`
        UpdatedAt int64 `json:"updated_at"`
        Roles []*UserRoleLabel `json:"roles"`
        Perms []*UserApi `json:"perms"`
        UserInfoExt
    }

    UserRoleLabel {
        RoleId int64 `json:"role_id"`
        RoleName string `json:"role_name"`
        RoleComment string `json:"role_comment"`
    }


    UserInfoExt {
        Intro string `json:"intro"`         // 简介
        Website string `json:"website"`     // 网站
    }

    UserInfoReq {
        Nickname string `json:"nickname"` // 昵称
        Avatar string `json:"avatar"`     // 头像
        UserInfoExt
    }


    UserLoginHistory {
        Id int64 `json:"id,optional"`
        LoginType string `json:"login_type"`  // 登录类型
        Agent string `json:"agent"`           // 代理
        IpAddress string `json:"ip_address"`  // ip host
        IpSource string `json:"ip_source"`    // ip 源
        LoginAt int64 `json:"login_at"`       // 登录时间
        LogoutAt int64 `json:"login_out"`     // 登出时间
    }

    UserApi {
        Id int64 `json:"id,optional"`                // 主键id
        ParentId int64 `json:"parent_id"`            // 父id
        Name string `json:"name"`                    // api名称
        Path string `json:"path"`                    // api路径
        Method string `json:"method"`                // api请求方法
        CreatedAt int64 `json:"created_at"`          // 创建时间
        UpdatedAt int64 `json:"updated_at"`          // 更新时间
        Children []*UserApi `json:"children"`
    }

    UserMenu {
        Id int64 `json:"id,optional"`                    // 主键
        ParentId int64 `json:"parent_id"`                // 父id
        Path string `json:"path"`                        // 路由地址
        Name string `json:"name"`                        // 路由名字
        Component string `json:"component"`              // Layout组件
        Redirect string `json:"redirect"`                // 路由重定向
        Meta UserMenuMeta `json:"meta"`                  // meta配置
        Children []*UserMenu `json:"children,optional"`
        CreatedAt int64 `json:"created_at"`              // 创建时间
        UpdatedAt int64 `json:"updated_at"`              // 更新时间
    }

    UserMenuMeta {
        Title string `json:"title,optional"`
        Icon string `json:"icon,optional"`
        Hidden bool `json:"hidden,optional"`
        AlwaysShow bool `json:"alwaysShow,optional"`
        Affix bool `json:"affix,optional"`
        KeepAlive bool `json:"keepAlive,optional"`
        Breadcrumb bool `json:"breadcrumb,optional"`
    }

    UserRole {
        Id int64 `json:"id,optional"`                     // 主键id
        ParentId int64 `json:"parent_id"`                 // 父id
        RoleName string `json:"role_name"`                // 角色名
        RoleLabel string `json:"role_label"`              // 角色标签
        RoleComment string `json:"role_comment"`          // 角色备注
    }

    UserApisResp {
        List []*UserApi `json:"list"`
    }

    UserMenusResp {
        List []*UserMenu `json:"list"`
    }

    UserRolesResp {
        List []*UserRole `json:"list"`
    }


    UserLoginHistoryQuery {
        PageQuery
    }
)

@server(
    prefix: /admin_api/v1
    group: user
    middleware: SignToken,JwtToken,Operation
)

service admin-api {
    @doc "查询用户登录历史"
    @handler GetUserLoginHistoryList
    post /user/get_user_login_history_list (UserLoginHistoryQuery) returns (PageResp)

    @doc "修改用户信息"
    @handler UpdateUserInfo
    post /user/update_user_info (UserInfoReq) returns (EmptyResp)



    @doc "获取用户角色"
    @handler GetUserRoles
    get /user/get_user_roles (EmptyReq) returns (UserRolesResp)

    @doc "获取用户接口权限"
    @handler GetUserApis
    get /user/get_user_apis (EmptyReq) returns (UserApisResp)

    @doc "获取用户菜单权限"
    @handler GetUserMenus
    get /user/get_user_menus (EmptyReq) returns (UserMenusResp)

    @doc "获取用户信息"
    @handler GetUserInfo
    get /user/get_user_info (EmptyReq) returns (UserInfoResp)
}
