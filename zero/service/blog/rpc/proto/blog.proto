// 声明 proto 语法版本，固定值
syntax = "proto3";

// proto 包名
package blog;

// 生成 golang 代码后的包名
option go_package = "./blog";

message EmptyReq {
}

message EmptyResp {
}

message IdReq {
  int64 id = 1;
}

message IdsReq {
  repeated int64 ids = 1;
}

message PageQuery {
  int64 page = 1;
  int64 page_size = 2;
  string sorts = 3; // 排序
  string conditions = 4; // 条件
  repeated string args = 5; // 参数
}

message PageLimit {
  int64 page = 1;
  int64 page_size = 2;
}

message PageSort {
  string field = 1;
  string order = 2;
}

message PageCondition {
  string field = 1; // 字段
  string value = 2; // 值
  string logic = 3; // 逻辑 and or
  string operator = 4; // 操作符 = > < >= <= != like
}

message PageResp {
  int64 page = 1;
  int64 page_size = 2;
  int64 total = 3;
}

message BatchResp {
  int64 success_count = 1;
}

message CountResp {
  int64 count = 1;
}

/************** auth 登录相关 **************/

message LoginReq {
  string username = 1;
  string password = 2;
  string code = 3;
}

message LoginResp {
  int64 user_id = 1;// 用户id
  string username = 2;// 用户名
  string nickname = 3;// 昵称
  string avatar = 4;// 头像
  string intro = 5;// 个人简介
  string website = 6;// 个人网站
  string email = 7;// 邮箱
  repeated RoleLabel roles = 8;// 角色列表
}

message RoleLabel {
  string role_name = 1;
  string role_comment = 2;
}

message OauthLoginReq {
  string platform = 1;// 平台
  string code = 2;// 授权码
  string state = 3;// 状态
}

message OauthLoginUrlResp {
  string url = 1;// 授权地址
}

message ResetPasswordReq {
  string username = 1;
  string password = 2;
  string code = 3;
}

message UserEmailReq {
  string username = 1;
}

message LogoutReq {
  int64 user_id = 1;
}

message LogoffReq {
  int64 user_id = 1;
}

message GetLogoutAtReq {
  int64 user_id = 1;
}

message  GetLogoutAtResp {
  int64 user_id = 1;
  int64 logout_at = 2;
}

service AuthRpc {
  // 登录
  rpc Login(LoginReq) returns(LoginResp);
  // 登出
  rpc Logout(LogoutReq) returns(EmptyResp);
  // 注销
  rpc Logoff(LogoffReq) returns(EmptyResp);
  // 注册
  rpc Register(LoginReq) returns(UserInfoResp);
  // 重置密码
  rpc ResetPassword(ResetPasswordReq) returns(EmptyResp);
  // 发送注册邮件
  rpc SendRegisterEmail(UserEmailReq) returns(EmptyResp);
  // 发送重置密码邮件
  rpc SendResetPasswordEmail(UserEmailReq) returns(EmptyResp);
  // 第三方登录
  rpc OauthLogin(OauthLoginReq) returns(LoginResp);
  // 获取第三方登录授权地址
  rpc GetOauthAuthorizeUrl(OauthLoginReq) returns(OauthLoginUrlResp);
  // 获取用户登录时间
  rpc GetLogoutAt(GetLogoutAtReq) returns(GetLogoutAtResp);
}

/************** rbac 权限相关 **************/
message Api {
  int64 id = 1;// 主键id
  string name = 2;// api名称
  string path = 3;// api路径
  string method = 4;// api请求方法
  int64 parent_id = 5;// 分组id
  int64 traceable = 6;// 是否追溯操作记录 0需要，1是
  int64 status = 7;// 状态 1开，2关
  int64 created_at = 8;// 创建时间
  int64 updated_at = 9;// 更新时间
}

message ApiDetails {
  int64 id = 1;// 主键id
  string name = 2;// api名称
  string path = 3;// api路径
  string method = 4;// api请求方法
  int64 parent_id = 5;// 分组id
  int64 traceable = 6;// 是否追溯操作记录 0需要，1是
  int64 status = 7;// 状态 1开，2关
  int64 created_at = 8;// 创建时间
  int64 updated_at = 9;// 更新时间
  repeated ApiDetails children = 10;
}

message ApiPageResp {
  int64 total = 1;
  repeated ApiDetails list = 2;
}

service ApiRpc {
  // 创建接口
  rpc CreateApi(Api) returns(Api);
  // 更新接口
  rpc UpdateApi(Api) returns(Api);
  // 删除接口
  rpc DeleteApi(IdReq) returns(BatchResp);
  // 批量删除接口
  rpc DeleteApiList(IdsReq) returns(BatchResp);
  // 查询接口
  rpc FindApi(IdReq) returns(Api);
  // 查询接口列表
  rpc FindApiList(PageQuery) returns(ApiPageResp);
  // 同步接口列表
  rpc SyncApiList(EmptyReq) returns(BatchResp);
  // 清空接口列表
  rpc CleanApiList(EmptyReq) returns(BatchResp);
}

message Menu {
  int64 id = 1;// 主键
  int64 parent_id = 2;// 父id
  string title = 3;// 菜单标题
  string path = 4;// 路由路径
  string name = 5;// 路由名称
  string component = 6;// 路由组件
  string redirect = 7;// 路由重定向
  int64 type = 8;// 菜单类型
  string extra = 9;// 菜单元数据
  int64 created_at = 10;// 创建时间
  int64 updated_at = 11;// 更新时间
}

message MenuDetails {
  int64 id = 1;// 主键
  int64 parent_id = 2;// 父id
  string title = 3;// 菜单标题
  int64 type = 4;// 菜单类型（0代表菜单、1代表iframe、2代表外链、3代表按钮）
  string path = 5;// 路由地址
  string name = 6;// 路由名字
  string component = 7;// Layout组件
  string redirect = 8;// 路由重定向
  string extra = 9;// 额外的配置信息
  int64 created_at = 10;// 创建时间
  int64 updated_at = 11;// 更新时间
  repeated MenuDetails children = 12;
}

message MenuPageResp {
  int64 total = 1;
  repeated MenuDetails list = 2;
}

message SyncMenuReq {
  repeated MenuDetails menus = 1;
}

service MenuRpc {
  // 创建菜单
  rpc CreateMenu(Menu) returns(Menu);
  // 更新菜单
  rpc UpdateMenu(Menu) returns(Menu);
  // 删除菜单
  rpc DeleteMenu(IdReq) returns(BatchResp);
  // 批量删除菜单
  rpc DeleteMenuList(IdsReq) returns(BatchResp);
  // 查询菜单
  rpc FindMenu(IdReq) returns(Menu);
  // 查询菜单列表
  rpc FindMenuList(PageQuery) returns(MenuPageResp);
  // 同步菜单列表
  rpc SyncMenuList(SyncMenuReq) returns(BatchResp);
  // 清空菜单列表
  rpc CleanMenuList(EmptyReq) returns(BatchResp);
}

message Role {
  int64 id = 1;// 主键id
  int64 parent_id = 2;// 父角色id
  string role_domain = 3;// 角色域
  string role_name = 4;// 角色名
  string role_comment = 5;// 角色备注
  int64 is_disable = 6;// 是否禁用  0否 1是
  int64 is_default = 7;// 是否默认角色 0否 1是
  int64 created_at = 8;// 创建时间
  int64 updated_at = 9;// 更新时间
}

message RoleDetails {
  int64 id = 1;// 主键id
  int64 parent_id = 2;// 父角色id
  string role_domain = 3;// 角色域
  string role_name = 4;// 角色名
  string role_comment = 5;// 角色备注
  int64 is_disable = 6;// 是否禁用  0否 1是
  int64 is_default = 7;// 是否默认角色 0否 1是
  int64 created_at = 8;// 创建时间
  int64 updated_at = 9;// 更新时间
  repeated RoleDetails children = 10;
}

message RolePageResp {
  int64 total = 1;
  repeated RoleDetails list = 2;
}

message RoleResourcesResp {
  int64 role_id = 1;
  repeated int64 api_ids = 2;
  repeated int64 menu_ids = 3;
}

message UpdateRoleApisReq {
  int64 role_id = 1;
  repeated int64 api_ids = 2;
}

message UpdateRoleMenusReq {
  int64 role_id = 1;
  repeated int64 menu_ids = 2;
}

service RoleRpc {
  // 创建角色
  rpc CreateRole(Role) returns(Role);
  // 更新角色
  rpc UpdateRole(Role) returns(Role);
  // 删除角色
  rpc DeleteRole(IdReq) returns(BatchResp);
  // 批量删除角色
  rpc DeleteRoleList(IdsReq) returns(BatchResp);
  // 查询角色
  rpc FindRole(IdReq) returns(Role);
  // 查询角色列表
  rpc FindRoleList(PageQuery) returns(RolePageResp);
  // 查询角色
  rpc FindRoleResources(IdReq) returns(RoleResourcesResp);
  // 更新角色菜单
  rpc UpdateRoleMenus(UpdateRoleMenusReq) returns(EmptyResp);
  // 更新角色资源
  rpc UpdateRoleApis(UpdateRoleApisReq) returns(EmptyResp);
}

/************** user 用户相关 **************/

message LoginHistory {
  int64 id = 1;
  string login_type = 2;// 登录类型
  string agent = 3;// 代理
  string ip_address = 4;// ip host
  string ip_source = 5;// ip 源
  string login_time = 6;// 创建时间
}

message LoginHistoryPageResp {
  int64 total = 1;
  repeated LoginHistory list = 2;
}

message UserInfoResp {
  int64 id = 1;// id
  int64 user_id = 2;// 用户id
  string email = 3;// 用户邮箱
  string nickname = 4;// 用户昵称
  string avatar = 5;// 用户头像
  string phone = 6;// 用户手机号
  string intro = 7;// 个人简介
  string website = 8;// 个人网站
  int64 created_at = 9;// 创建时间
  int64 updated_at = 10;// 更新时间
}

message User {
  int64 id = 1;
  string username = 2;
  string email = 3;// 用户邮箱
  string nickname = 4;// 用户昵称
  string avatar = 5;// 用户头像
  string phone = 6;// 用户手机号
  string intro = 7;// 个人简介
  string website = 8;// 个人网站
  int64 status = 9;
  string register_type = 10;
  string ip_address = 11;// ip host
  string ip_source = 12;// ip 源
  int64 created_at = 13;
  int64 updated_at = 14;
  repeated RoleLabel roles = 15;
}

message UserPageResp{
  int64 total = 1;
  repeated User list = 2;
}

message UpdateUserInfoReq {
  int64 user_id = 1;
  string nickname = 2;// 昵称
  string phone = 3;// 手机号
  string website = 4;// 网站
  string intro = 5;// 简介
}

message UpdateUserAvatarReq {
  int64 user_id = 1;
  string avatar = 2;
}

message UpdateUserStatusReq {
  int64 user_id = 1;
  int64 status = 2;
}

message UpdateUserRoleReq {
  int64 user_id = 1;
  repeated int64 role_ids = 2;
}

message UserReq {
  int64 user_id = 1;
}

service UserRpc {
  // 查询用户登录历史
  rpc FindUserLoginHistoryList(PageQuery) returns(LoginHistoryPageResp);
  // 批量删除登录历史
  rpc DeleteUserLoginHistoryList(IdsReq) returns(BatchResp);
  // 查找用户列表
  rpc FindUserList(PageQuery) returns(UserPageResp);
  // 获取用户接口权限
  rpc FindUserApis(UserReq) returns(ApiPageResp);
  // 获取用户菜单权限
  rpc FindUserMenus(UserReq) returns(MenuPageResp);
  // 获取用户角色信息
  rpc FindUserRoles(UserReq) returns(RolePageResp);
  // 获取用户信息
  rpc FindUserInfo(UserReq) returns(UserInfoResp);
  // 修改用户信息
  rpc UpdateUserInfo(UpdateUserInfoReq) returns(EmptyResp);
  // 修改用户头像
  rpc UpdateUserAvatar(UpdateUserAvatarReq) returns(EmptyResp);
  // 修改用户状态
  rpc UpdateUserStatus(UpdateUserStatusReq) returns(EmptyResp);
  // 修改用户角色
  rpc UpdateUserRole(UpdateUserRoleReq) returns(EmptyResp);
}

/************** blog 博客相关 **************/
message FindConfigReq {
  string config_key = 1;
}

message FindConfigResp {
  string config_value = 1;
}

message SaveConfigReq {
  string config_key = 1;
  string config_value = 2;
}

service ConfigRpc {
  rpc SaveConfig(SaveConfigReq) returns(EmptyResp);

  rpc FindConfig(FindConfigReq) returns(FindConfigResp);
}

// article结构体
message Article {
  int64 id = 1;// id
  int64 user_id = 2;// 作者
  int64 category_id = 3;// 文章分类
  string article_cover = 4;// 文章缩略图
  string article_title = 5;// 标题
  string article_content = 6;// 内容
  int64 type = 7;// 文章类型 1原创 2转载 3翻译
  string original_url = 8;// 原文链接
  int64 is_top = 9;// 是否置顶 0否 1是
  int64 is_delete = 10;// 是否删除  0否 1是
  int64 status = 11;// 状态值 1公开 2私密 3评论可见
  int64 created_at = 12;// 发表时间
  int64 updated_at = 13;// 更新时间
}

message ArticlePageResp {
  int64 total = 1;
  repeated Article list = 2;
}

message FindArticleByTagReq{
  repeated int64 tag_ids = 1;
}

message FindArticleByCategoryReq{
  repeated int64 category_ids = 1;
}

// article服务
service ArticleRpc {
  // 创建文章
  rpc CreateArticle(Article) returns(Article);
  // 更新文章
  rpc UpdateArticle(Article) returns(Article);
  // 删除文章
  rpc DeleteArticle(IdReq) returns(BatchResp);
  // 批量删除文章
  rpc DeleteArticleList(IdsReq) returns(BatchResp);
  // 查询文章
  rpc FindArticle(IdReq) returns(Article);
  // 查询文章列表
  rpc FindArticleList(PageQuery) returns(ArticlePageResp);
  // 查询文章数量
  rpc FindArticleCount(PageQuery) returns(CountResp);
  // 查询文章列表
  rpc FindArticleByTag(FindArticleByTagReq) returns(ArticlePageResp);
  // 查询文章列表
  rpc FindArticleByCategory(FindArticleByCategoryReq) returns(ArticlePageResp);
}

message Category {
  int64 id = 1;// id
  string category_name = 2;// 分类名
  int64 created_at = 3;// 创建时间
  int64 updated_at = 4;// 更新时间
}

message CategoryPageResp {
  int64 total = 1;
  repeated Category list = 2;
}

message FindCategoryByNameReq{
  string category_name = 1;
}

// category服务
service CategoryRpc {
  // 创建文章分类
  rpc CreateCategory(Category) returns(Category);
  // 更新文章分类
  rpc UpdateCategory(Category) returns(Category);
  // 删除文章分类
  rpc DeleteCategory(IdReq) returns(BatchResp);
  // 批量删除文章分类
  rpc DeleteCategoryList(IdsReq) returns(BatchResp);
  // 查询文章分类
  rpc FindCategory(IdReq) returns(Category);
  // 查询文章分类数量
  rpc FindCategoryCount(PageQuery) returns(CountResp);
  // 查询文章分类列表
  rpc FindCategoryList(PageQuery) returns(CategoryPageResp);
  // 查询文章分类列表(通过ids)
  rpc FindCategoryListByIds(IdsReq) returns(CategoryPageResp);
  // 查询文章分类
  //  rpc FindCategoryByName(FindCategoryByNameReq) returns(Category);
}

message Tag {
  int64 id = 1;// id
  string tag_name = 2;// 标签名
  int64 created_at = 3;// 创建时间
  int64 updated_at = 4;// 更新时间
}

message TagPageResp {
  int64 total = 1;
  repeated Tag list = 2;
}

message FindTagArticleCountReq{
  int64 tag_id = 1;
}

message FindTagByNameReq{
  string tag_name = 1;
}

message TagMapResp{
  map<int64, TagPageResp> tag_map_list = 1;
}

// tag服务
service TagRpc {
  // 创建标签
  rpc CreateTag(Tag) returns(Tag);
  // 更新标签
  rpc UpdateTag(Tag) returns(Tag);
  // 删除标签
  rpc DeleteTag(IdReq) returns(BatchResp);
  // 批量删除标签
  rpc DeleteTagList(IdsReq) returns(BatchResp);
  // 查询标签
  rpc FindTag(IdReq) returns(Tag);
  // 查询标签列表
  rpc FindTagList(PageQuery) returns(TagPageResp);
  // 查询标签数量
  rpc FindTagCount(PageQuery) returns(CountResp);
  // 查询标签关联文章数量
  rpc FindTagArticleCount(FindTagArticleCountReq) returns(CountResp);
  // 查询文章标签列表(通过文章ids)
  rpc FindTagMapByArticleIds(IdsReq) returns(TagMapResp);
  // 查询文章分类
  //  rpc FindTagByName(FindTagByNameReq) returns(Tag);
}

/************** blog 消息管理 **************/
message FriendLink {
  int64 id = 1;// id
  string link_name = 2;// 链接名
  string link_avatar = 3;// 链接头像
  string link_address = 4;// 链接地址
  string link_intro = 5;// 链接介绍
  int64 created_at = 6;// 创建时间
  int64 updated_at = 7;// 更新时间
}

message FriendLinkPageResp {
  int64 total = 1;
  repeated FriendLink list = 2;
}

service FriendLinkRpc {
  // 创建友链
  rpc CreateFriendLink(FriendLink) returns(FriendLink);
  // 更新友链
  rpc UpdateFriendLink(FriendLink) returns(FriendLink);
  // 删除友链
  rpc DeleteFriendLink(IdReq) returns(BatchResp);
  // 批量删除友链
  rpc DeleteFriendLinkList(IdsReq) returns(BatchResp);
  // 查询友链
  rpc FindFriendLink(IdReq) returns(FriendLink);
  // 查询友链列表
  rpc FindFriendLinkList(PageQuery) returns(FriendLinkPageResp);
  // 查询友链数量
  rpc FindFriendLinkCount(PageQuery) returns(CountResp);
}

message Remark {
  int64 id = 1;// 主键id
  string nickname = 2;// 昵称
  string avatar = 3;// 头像
  string message_content = 4;// 留言内容
  string ip_address = 5;// 用户ip
  string ip_source = 6;// 用户地址
  int64 time = 7;// 弹幕速度
  int64 is_review = 8;// 是否审核
  int64 created_at = 9;// 发布时间
  int64 updated_at = 10;// 更新时间
}

message RemarkPageResp {
  int64 total = 1;
  repeated Remark list = 2;
}

service remarkRpc {
  // 创建留言
  rpc CreateRemark(Remark) returns(Remark);
  // 更新留言
  rpc UpdateRemark(Remark) returns(Remark);
  // 删除留言
  rpc DeleteRemark(IdReq) returns(BatchResp);
  // 批量删除留言
  rpc DeleteRemarkList(IdsReq) returns(BatchResp);
  // 查询留言
  rpc FindRemark(IdReq) returns(Remark);
  // 查询留言列表
  rpc FindRemarkList(PageQuery) returns(RemarkPageResp);
  // 查询留言数量
  rpc FindRemarkCount(PageQuery) returns(CountResp);
}

message Comment {
  int64 id = 1;// 主键
  int64 topic_id = 2;// 主题id
  int64 parent_id = 3;// 父评论id
  int64 session_id = 4; // 会话id
  int64 user_id = 5;// 评论用户id
  int64 reply_user_id = 6; // 评论回复用户id
  string comment_content = 7;// 评论内容
  int64 type = 8;// 评论类型 1.文章 2.友链 3.说说
  int64 status = 9;// 状态 0.正常 1.已编辑 2.已删除
  int64 is_review = 10;// 是否审核
  int64 created_at = 11;// 评论时间
  int64 updated_at = 12;// 更新时间
}

message CommentPageResp {
  int64 total = 1;
  repeated Comment list = 2;
}

message CommentReply {
  int64 id = 1;// 主键
  int64 topic_id = 2;// 主题id
  int64 parent_id = 3;// 父评论id
  int64 session_id = 4; // 会话id
  int64 user_id = 5;// 评论用户id
  int64 reply_user_id = 6; // 评论回复用户id
  string comment_content = 7;// 评论内容
  int64 type = 8;// 评论类型 1.文章 2.友链 3.说说
  int64 status = 9;// 状态 0.正常 1.已编辑 2.已删除
  int64 is_review = 10;// 是否审核
  int64 created_at = 11;// 评论时间
  int64 updated_at = 12;// 更新时间
  UserInfoResp user = 13;// 用户信息
  UserInfoResp reply_user = 14;// 回复用户信息
  int64 like_count = 15;// 点赞数
}

message CommentReplyPageResp {
  int64 total = 1;
  repeated CommentReply list = 2;
}

service commentRpc {
  // 创建评论
  rpc CreateComment(Comment) returns(Comment);
  // 更新评论
  rpc UpdateComment(Comment) returns(Comment);
  // 删除评论
  rpc DeleteComment(IdReq) returns(BatchResp);
  // 批量删除评论
  rpc DeleteCommentList(IdsReq) returns(BatchResp);
  // 查询评论
  rpc FindComment(IdReq) returns(Comment);
  // 查询评论列表
  rpc FindCommentList(PageQuery) returns(CommentPageResp);
  // 查询评论回复列表
  rpc FindCommentReplyList(PageQuery) returns(CommentReplyPageResp);
  // 查询评论数量
  rpc FindCommentCount(PageQuery) returns(CountResp);
  // 点赞评论
  rpc LikeComment(IdReq) returns(EmptyResp);
}
/************** blog 相册管理 **************/

message Photo {
  int64 id = 1;// 主键
  int64 album_id = 2;// 相册id
  string photo_name = 3;// 照片名
  string photo_desc = 4;// 照片描述
  string photo_src = 5;// 照片地址
  int64 is_delete = 6;// 是否删除
  int64 created_at = 7;// 创建时间
  int64 updated_at = 8;// 更新时间
}

message PhotoPageResp {
  int64 total = 1;
  repeated Photo list = 2;
}

message PhotoAlbum {
  int64 id = 1;// 主键
  string album_name = 2;// 相册名
  string album_desc = 3;// 相册描述
  string album_cover = 4;// 相册封面
  int64 is_delete = 5;// 是否删除
  int64 status = 6;// 状态值 1公开 2私密
  int64 created_at = 7;// 创建时间
  int64 updated_at = 8;// 更新时间
}

message PhotoAlbumPageResp {
  int64 total = 1;
  repeated PhotoAlbum list = 2;
}

service photoRpc {
  // 创建照片
  rpc CreatePhoto(Photo) returns(Photo);
  // 更新照片
  rpc UpdatePhoto(Photo) returns(Photo);
  // 删除照片
  rpc DeletePhoto(IdReq) returns(BatchResp);
  // 批量删除照片
  rpc DeletePhotoList(IdsReq) returns(BatchResp);
  // 查询照片
  rpc FindPhoto(IdReq) returns(Photo);
  // 查询照片列表
  rpc FindPhotoList(PageQuery) returns(PhotoPageResp);
  // 查询照片数量
  rpc FindPhotoCount(PageQuery) returns(CountResp);

  // 创建相册
  rpc CreatePhotoAlbum(PhotoAlbum) returns(PhotoAlbum);
  // 更新相册
  rpc UpdatePhotoAlbum(PhotoAlbum) returns(PhotoAlbum);
  // 删除相册
  rpc DeletePhotoAlbum(IdReq) returns(BatchResp);
  // 批量删除相册
  rpc DeletePhotoAlbumList(IdsReq) returns(BatchResp);
  // 查询相册
  rpc FindPhotoAlbum(IdReq) returns(PhotoAlbum);
  // 查询相册列表
  rpc FindPhotoAlbumList(PageQuery) returns(PhotoAlbumPageResp);
  // 查询相册数量
  rpc FindPhotoAlbumCount(PageQuery) returns(CountResp);
}


/************** blog 页面管理 **************/
message Page {
  int64 id = 1;// 页面id
  string page_name = 2;// 页面名
  string page_label = 3;// 页面标签
  string page_cover = 4;// 页面封面
  int64 created_at = 5;// 创建时间
  int64 updated_at = 6;// 更新时间
}


message PagePageResp {
  int64 total = 1;
  repeated Page list = 2;
}

service pageRpc {
  // 创建页面
  rpc CreatePage(Page) returns(Page);
  // 更新页面
  rpc UpdatePage(Page) returns(Page);
  // 删除页面
  rpc DeletePage(IdReq) returns(BatchResp);
  // 批量删除页面
  rpc DeletePageList(IdsReq) returns(BatchResp);
  // 查询页面
  rpc FindPage(IdReq) returns(Page);
  // 查询页面列表
  rpc FindPageList(PageQuery) returns(PagePageResp);
  // 查询页面数量
  rpc FindPageCount(PageQuery) returns(CountResp);
}

/************** blog 说说管理 **************/
message Talk {
  int64 id = 1;// 说说id
  int64 user_id = 2;// 用户id
  string content = 3;// 说说内容
  string images = 4;// 图片
  int64 is_top = 5;// 是否置顶
  int64 status = 6;// 状态 1.公开 2.私密
  int64 created_at = 7;// 创建时间
  int64 updated_at = 8;// 更新时间
}

message TalkDetailsDTO {
  int64 id = 1;
  int64 user_id = 2;// 用户ID
  string nickname = 3;// 用户昵称
  string avatar = 4;// 用户头像
  string content = 5;// 评论内容
  repeated string img_list = 6;// 图片URL列表
  int64 is_top = 7;// 是否置顶
  int64 status = 8;// 状态
  int64 like_count = 9;// 点赞量
  int64 comment_count = 10;// 评论量
  int64 created_at = 11;// 创建时间
  int64 updated_at = 12;// 更新时间
}

message TalkPageResp {
  int64 total = 1;
  repeated Talk list = 2;
}

service talkRpc {
  // 创建说说
  rpc CreateTalk(Talk) returns(Talk);
  // 更新说说
  rpc UpdateTalk(Talk) returns(Talk);
  // 删除说说
  rpc DeleteTalk(IdReq) returns(BatchResp);
  // 批量删除说说
  rpc DeleteTalkList(IdsReq) returns(BatchResp);
  // 查询说说
  rpc FindTalk(IdReq) returns(Talk);
  // 查询说说列表
  rpc FindTalkList(PageQuery) returns(TalkPageResp);
  // 查询说说数量
  rpc FindTalkCount(PageQuery) returns(CountResp);
  // 点赞说说
  rpc LikeTalk(IdReq) returns(EmptyResp);
}


/************** blog 日志管理 **************/
message OperationLog {
  int64 id = 1;// 主键id
  int64 user_id = 2;// 用户id
  string nickname = 3;// 用户昵称
  string ip_address = 4;// 操作ip
  string ip_source = 5;// 操作地址
  string opt_module = 6;// 操作模块
  string opt_desc = 7;// 操作描述
  string request_url = 8;// 请求地址
  string request_method = 9;// 请求方式
  string request_header = 10;// 请求头参数
  string request_data = 11;// 请求参数
  string response_data = 12;// 返回数据
  int64 response_status = 13;// 响应状态码
  string cost = 14;// 耗时（ms）
  int64 created_at = 15;// 创建时间
  int64 updated_at = 16;// 更新时间
}

message OperationLogPageResp {
  int64 total = 1;
  repeated OperationLog list = 2;
}

service logRpc {
  // 创建操作记录
  rpc CreateOperationLog(OperationLog) returns(OperationLog);
  // 更新操作记录
  rpc UpdateOperationLog(OperationLog) returns(OperationLog);
  // 删除操作记录
  rpc DeleteOperationLog(IdReq) returns(BatchResp);
  // 批量删除操作记录
  rpc DeleteOperationLogList(IdsReq) returns(BatchResp);
  // 查询操作记录
  rpc FindOperationLog(IdReq) returns(OperationLog);
  // 查询操作记录列表
  rpc FindOperationLogList(PageQuery) returns(OperationLogPageResp);
  // 查询操作记录数量
  rpc FindOperationLogCount(PageQuery) returns(CountResp);
}

message ChatRecord {
  int64 id = 1;// 主键
  int64 user_id = 2;// 用户id
  string nickname = 3;// 昵称
  string avatar = 4;// 头像
  string content = 5;// 聊天内容
  string ip_address = 6;// ip地址
  string ip_source = 7;// ip来源
  int64 type = 8;// 类型
  int64 created_at = 9;// 创建时间
  int64 updated_at = 10;// 更新时间
}

message ChatRecordPageResp {
  int64 total = 1;
  repeated ChatRecord list = 2;
}

service chatRpc {
  // 创建聊天记录
  rpc CreateChatRecord(ChatRecord) returns(ChatRecord);
  // 更新聊天记录
  rpc UpdateChatRecord(ChatRecord) returns(ChatRecord);
  // 删除聊天记录
  rpc DeleteChatRecord(IdReq) returns(BatchResp);
  // 批量删除聊天记录
  rpc DeleteChatRecordList(IdsReq) returns(BatchResp);
  // 查询聊天记录
  rpc FindChatRecord(IdReq) returns(ChatRecord);
  // 查询聊天记录列表
  rpc FindChatRecordList(PageQuery) returns(ChatRecordPageResp);
  // 查询聊天记录数量
  rpc FindChatRecordCount(PageQuery) returns(CountResp);
}

message UploadRecordReq {
  int64 id = 1;// id
  int64 user_id = 2;// 用户id
  string label = 3;// 标签
  string file_name = 4;// 文件名称
  int64 file_size = 5;// 文件大小
  string file_md5 = 6;// 文件md5值
  string file_url = 7;// 上传路径
}

message UploadRecordResp {
  int64 id = 1;// id
  int64 user_id = 2;// 用户id
  string label = 3;// 标签
  string file_name = 4;// 文件名称
  int64 file_size = 5;// 文件大小
  string file_md5 = 6;// 文件md5值
  string file_url = 7;// 上传路径
  int64 created_at = 8;// 创建时间
  int64 updated_at = 9;// 更新时间
}

service uploadRpc {
  // 上传文件
  rpc UploadFile(UploadRecordReq) returns(UploadRecordResp);
  // 上传语言
  rpc UploadVoice(UploadRecordReq) returns(UploadRecordResp);
}
