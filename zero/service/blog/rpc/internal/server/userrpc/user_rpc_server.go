// Code generated by goctl. DO NOT EDIT.
// Source: blog.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/zero/service/blog/rpc/internal/logic/userrpc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/blog/rpc/internal/svc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/blog/rpc/pb/blog"
)

type UserRpcServer struct {
	svcCtx *svc.ServiceContext
	blog.UnimplementedUserRpcServer
}

func NewUserRpcServer(svcCtx *svc.ServiceContext) *UserRpcServer {
	return &UserRpcServer{
		svcCtx: svcCtx,
	}
}

// 查询用户登录历史
func (s *UserRpcServer) FindUserLoginHistoryList(ctx context.Context, in *blog.PageQuery) (*blog.LoginHistoryPageResp, error) {
	l := userrpclogic.NewFindUserLoginHistoryListLogic(ctx, s.svcCtx)
	return l.FindUserLoginHistoryList(in)
}

// 批量删除登录历史
func (s *UserRpcServer) DeleteUserLoginHistoryList(ctx context.Context, in *blog.IdsReq) (*blog.BatchResp, error) {
	l := userrpclogic.NewDeleteUserLoginHistoryListLogic(ctx, s.svcCtx)
	return l.DeleteUserLoginHistoryList(in)
}

// 获取用户接口权限
func (s *UserRpcServer) FindUserApis(ctx context.Context, in *blog.UserReq) (*blog.ApiPageResp, error) {
	l := userrpclogic.NewFindUserApisLogic(ctx, s.svcCtx)
	return l.FindUserApis(in)
}

// 获取用户菜单权限
func (s *UserRpcServer) FindUserMenus(ctx context.Context, in *blog.UserReq) (*blog.MenuPageResp, error) {
	l := userrpclogic.NewFindUserMenusLogic(ctx, s.svcCtx)
	return l.FindUserMenus(in)
}

// 获取用户角色信息
func (s *UserRpcServer) FindUserRoles(ctx context.Context, in *blog.UserReq) (*blog.RolePageResp, error) {
	l := userrpclogic.NewFindUserRolesLogic(ctx, s.svcCtx)
	return l.FindUserRoles(in)
}

// 获取用户信息
func (s *UserRpcServer) FindUserInfo(ctx context.Context, in *blog.UserReq) (*blog.UserInfoResp, error) {
	l := userrpclogic.NewFindUserInfoLogic(ctx, s.svcCtx)
	return l.FindUserInfo(in)
}

// 修改用户信息
func (s *UserRpcServer) UpdateUserInfo(ctx context.Context, in *blog.UpdateUserInfoReq) (*blog.UserInfoResp, error) {
	l := userrpclogic.NewUpdateUserInfoLogic(ctx, s.svcCtx)
	return l.UpdateUserInfo(in)
}

// 修改用户头像
func (s *UserRpcServer) UpdateUserAvatar(ctx context.Context, in *blog.UpdateUserAvatarReq) (*blog.UserInfoResp, error) {
	l := userrpclogic.NewUpdateUserAvatarLogic(ctx, s.svcCtx)
	return l.UpdateUserAvatar(in)
}

// 修改用户状态
func (s *UserRpcServer) UpdateUserStatus(ctx context.Context, in *blog.UpdateUserStatusReq) (*blog.EmptyResp, error) {
	l := userrpclogic.NewUpdateUserStatusLogic(ctx, s.svcCtx)
	return l.UpdateUserStatus(in)
}

// 修改用户角色
func (s *UserRpcServer) UpdateUserRole(ctx context.Context, in *blog.UpdateUserRoleReq) (*blog.EmptyResp, error) {
	l := userrpclogic.NewUpdateUserRoleLogic(ctx, s.svcCtx)
	return l.UpdateUserRole(in)
}

// 查找用户列表
func (s *UserRpcServer) FindUserList(ctx context.Context, in *blog.PageQuery) (*blog.UserInfoPageResp, error) {
	l := userrpclogic.NewFindUserListLogic(ctx, s.svcCtx)
	return l.FindUserList(in)
}
