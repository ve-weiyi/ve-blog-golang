// Code generated by goctl. DO NOT EDIT.
// Source: blog.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/zero/service/blog/rpc/internal/logic/tagrpc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/blog/rpc/internal/svc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/blog/rpc/pb/blog"
)

type TagRpcServer struct {
	svcCtx *svc.ServiceContext
	blog.UnimplementedTagRpcServer
}

func NewTagRpcServer(svcCtx *svc.ServiceContext) *TagRpcServer {
	return &TagRpcServer{
		svcCtx: svcCtx,
	}
}

// 创建标签
func (s *TagRpcServer) CreateTag(ctx context.Context, in *blog.Tag) (*blog.Tag, error) {
	l := tagrpclogic.NewCreateTagLogic(ctx, s.svcCtx)
	return l.CreateTag(in)
}

// 更新标签
func (s *TagRpcServer) UpdateTag(ctx context.Context, in *blog.Tag) (*blog.Tag, error) {
	l := tagrpclogic.NewUpdateTagLogic(ctx, s.svcCtx)
	return l.UpdateTag(in)
}

// 删除标签
func (s *TagRpcServer) DeleteTag(ctx context.Context, in *blog.IdReq) (*blog.BatchResp, error) {
	l := tagrpclogic.NewDeleteTagLogic(ctx, s.svcCtx)
	return l.DeleteTag(in)
}

// 批量删除标签
func (s *TagRpcServer) DeleteTagList(ctx context.Context, in *blog.IdsReq) (*blog.BatchResp, error) {
	l := tagrpclogic.NewDeleteTagListLogic(ctx, s.svcCtx)
	return l.DeleteTagList(in)
}

// 查询标签
func (s *TagRpcServer) FindTag(ctx context.Context, in *blog.IdReq) (*blog.Tag, error) {
	l := tagrpclogic.NewFindTagLogic(ctx, s.svcCtx)
	return l.FindTag(in)
}

// 查询标签列表
func (s *TagRpcServer) FindTagList(ctx context.Context, in *blog.PageQuery) (*blog.TagPageResp, error) {
	l := tagrpclogic.NewFindTagListLogic(ctx, s.svcCtx)
	return l.FindTagList(in)
}

// 查询标签数量
func (s *TagRpcServer) FindTagCount(ctx context.Context, in *blog.PageQuery) (*blog.CountResp, error) {
	l := tagrpclogic.NewFindTagCountLogic(ctx, s.svcCtx)
	return l.FindTagCount(in)
}

// 查询标签关联文章数量
func (s *TagRpcServer) FindTagArticleCount(ctx context.Context, in *blog.FindTagArticleCountReq) (*blog.CountResp, error) {
	l := tagrpclogic.NewFindTagArticleCountLogic(ctx, s.svcCtx)
	return l.FindTagArticleCount(in)
}

// 查询文章标签列表(通过文章ids)
func (s *TagRpcServer) FindTagMapByArticleIds(ctx context.Context, in *blog.IdsReq) (*blog.TagMapResp, error) {
	l := tagrpclogic.NewFindTagMapByArticleIdsLogic(ctx, s.svcCtx)
	return l.FindTagMapByArticleIds(in)
}
