// Code generated by goctl. DO NOT EDIT.
// Source: blog.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/zero/service/blog/rpc/internal/logic/photorpc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/blog/rpc/internal/svc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/blog/rpc/pb/blog"
)

type PhotoRpcServer struct {
	svcCtx *svc.ServiceContext
	blog.UnimplementedPhotoRpcServer
}

func NewPhotoRpcServer(svcCtx *svc.ServiceContext) *PhotoRpcServer {
	return &PhotoRpcServer{
		svcCtx: svcCtx,
	}
}

// 创建照片
func (s *PhotoRpcServer) CreatePhoto(ctx context.Context, in *blog.Photo) (*blog.Photo, error) {
	l := photorpclogic.NewCreatePhotoLogic(ctx, s.svcCtx)
	return l.CreatePhoto(in)
}

// 更新照片
func (s *PhotoRpcServer) UpdatePhoto(ctx context.Context, in *blog.Photo) (*blog.Photo, error) {
	l := photorpclogic.NewUpdatePhotoLogic(ctx, s.svcCtx)
	return l.UpdatePhoto(in)
}

// 删除照片
func (s *PhotoRpcServer) DeletePhoto(ctx context.Context, in *blog.IdReq) (*blog.BatchResp, error) {
	l := photorpclogic.NewDeletePhotoLogic(ctx, s.svcCtx)
	return l.DeletePhoto(in)
}

// 批量删除照片
func (s *PhotoRpcServer) DeletePhotoList(ctx context.Context, in *blog.IdsReq) (*blog.BatchResp, error) {
	l := photorpclogic.NewDeletePhotoListLogic(ctx, s.svcCtx)
	return l.DeletePhotoList(in)
}

// 查询照片
func (s *PhotoRpcServer) FindPhoto(ctx context.Context, in *blog.IdReq) (*blog.Photo, error) {
	l := photorpclogic.NewFindPhotoLogic(ctx, s.svcCtx)
	return l.FindPhoto(in)
}

// 分页获取照片列表
func (s *PhotoRpcServer) FindPhotoList(ctx context.Context, in *blog.PageQuery) (*blog.PhotoPageResp, error) {
	l := photorpclogic.NewFindPhotoListLogic(ctx, s.svcCtx)
	return l.FindPhotoList(in)
}
