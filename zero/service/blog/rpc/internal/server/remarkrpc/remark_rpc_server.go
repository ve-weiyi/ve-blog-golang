// Code generated by goctl. DO NOT EDIT.
// Source: blog.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/zero/service/blog/rpc/internal/logic/remarkrpc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/blog/rpc/internal/svc"
	"github.com/ve-weiyi/ve-blog-golang/zero/service/blog/rpc/pb/blog"
)

type RemarkRpcServer struct {
	svcCtx *svc.ServiceContext
	blog.UnimplementedRemarkRpcServer
}

func NewRemarkRpcServer(svcCtx *svc.ServiceContext) *RemarkRpcServer {
	return &RemarkRpcServer{
		svcCtx: svcCtx,
	}
}

// 创建留言
func (s *RemarkRpcServer) CreateRemark(ctx context.Context, in *blog.Remark) (*blog.Remark, error) {
	l := remarkrpclogic.NewCreateRemarkLogic(ctx, s.svcCtx)
	return l.CreateRemark(in)
}

// 更新留言
func (s *RemarkRpcServer) UpdateRemark(ctx context.Context, in *blog.Remark) (*blog.Remark, error) {
	l := remarkrpclogic.NewUpdateRemarkLogic(ctx, s.svcCtx)
	return l.UpdateRemark(in)
}

// 删除留言
func (s *RemarkRpcServer) DeleteRemark(ctx context.Context, in *blog.IdReq) (*blog.BatchResp, error) {
	l := remarkrpclogic.NewDeleteRemarkLogic(ctx, s.svcCtx)
	return l.DeleteRemark(in)
}

// 批量删除留言
func (s *RemarkRpcServer) DeleteRemarkList(ctx context.Context, in *blog.IdsReq) (*blog.BatchResp, error) {
	l := remarkrpclogic.NewDeleteRemarkListLogic(ctx, s.svcCtx)
	return l.DeleteRemarkList(in)
}

// 查询留言
func (s *RemarkRpcServer) FindRemark(ctx context.Context, in *blog.IdReq) (*blog.Remark, error) {
	l := remarkrpclogic.NewFindRemarkLogic(ctx, s.svcCtx)
	return l.FindRemark(in)
}

// 分页获取留言列表
func (s *RemarkRpcServer) FindRemarkList(ctx context.Context, in *blog.PageQuery) (*blog.RemarkPageResp, error) {
	l := remarkrpclogic.NewFindRemarkListLogic(ctx, s.svcCtx)
	return l.FindRemarkList(in)
}

// 查询留言数量
func (s *RemarkRpcServer) FindRemarkCount(ctx context.Context, in *blog.PageQuery) (*blog.CountResp, error) {
	l := remarkrpclogic.NewFindRemarkCountLogic(ctx, s.svcCtx)
	return l.FindRemarkCount(in)
}
