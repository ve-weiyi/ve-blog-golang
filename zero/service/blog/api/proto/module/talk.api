syntax = "v1"

import "base.api"


type (
    Talk {
        Id int64 `json:"id,optional"`                // 说说id
        UserID int64 `json:"user_i_d,optional"`      // 用户id
        Content string `json:"content,optional"`     // 说说内容
        Images string `json:"images,optional"`       // 图片
        IsTop int64 `json:"is_top,optional"`         // 是否置顶
        Status int64 `json:"status,optional"`        // 状态 1.公开 2.私密
        CreatedAt int64 `json:"created_at,optional"` // 创建时间
        UpdatedAt int64 `json:"updated_at,optional"` // 更新时间
    }

    TalkDetailsDTO {
        Id int64 `json:"id,optional"`
        UserID int64 `json:"user_i_d,optional"`            // 用户ID
        Nickname string `json:"nickname,optional"`         // 用户昵称
        Avatar string `json:"avatar,optional"`             // 用户头像
        Content string `json:"content,optional"`           // 评论内容
        ImgList []string `json:"img_list,optional"`        // 图片URL列表
        IsTop int64 `json:"is_top,optional"`               // 是否置顶
        Status int64 `json:"status,optional"`              // 状态
        LikeCount int64 `json:"like_count,optional"`       // 点赞量
        CommentCount int64 `json:"comment_count,optional"` // 评论量
        CreatedAt int64 `json:"created_at,optional"`       // 创建时间
        UpdatedAt int64 `json:"updated_at,optional"`       // 更新时间
    }
)

@server(
    prefix: /api/v1
    group: talk
)

service blog-api {
    @doc "创建说说"
    @handler CreateTalk
    post /talk/create_talk (Talk) returns (Talk)

    @doc "更新说说"
    @handler UpdateTalk
    put /talk/update_talk (Talk) returns (Talk)

    @doc "删除说说"
    @handler DeleteTalk
    delete /talk/delete_talk (IdReq) returns (BatchResp)

    @doc "批量删除说说"
    @handler DeleteTalkList
    delete /talk/delete_talk_list (IdsReq) returns (BatchResp)

    @doc "查询说说"
    @handler FindTalk
    post /talk/find_talk (IdReq) returns (Talk)

    @doc "分页获取说说列表"
    @handler FindTalkList
    post /talk/find_talk_list (PageQuery) returns (PageResp)

    @doc "分页获取说说详情列表"
    @handler FindTalkDetailsList
    post /talk/details_list (PageQuery) returns (PageResp)

    @doc "分页获取说说详情列表"
    @handler FindTalkDetail
    get /talk/:id/details (IdReq) returns (TalkDetailsDTO)

    @doc "点赞说说"
    @handler LikeTalk
    put /talk/:id/like (IdReq) returns (EmptyResp)
}
