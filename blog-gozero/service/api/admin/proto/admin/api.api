syntax = "v1"

import "base.api"

type (
    ApiNewReq {
        Id int64 `json:"id,optional"`                       // 主键id
        ParentId int64 `json:"parent_id"`                   // 分组id
        Name string `json:"name"`                           // api名称
        Path string `json:"path"`                           // api路径
        Method string `json:"method"`                       // api请求方法
        Traceable int64 `json:"traceable"`                  // 是否追溯操作记录 0需要，1是
        IsDisable int64 `json:"is_disable,optional"`        // 是否禁用 0否 1是
    }

    ApiBackDTO {
        Id int64 `json:"id,optional"`                       // 主键id
        ParentId int64 `json:"parent_id"`                   // 分组id
        Name string `json:"name"`                           // api名称
        Path string `json:"path"`                           // api路径
        Method string `json:"method"`                       // api请求方法
        Traceable int64 `json:"traceable"`                  // 是否追溯操作记录 0需要，1是
        IsDisable int64 `json:"is_disable,optional"`        // 是否禁用 0否 1是
        CreatedAt int64 `json:"created_at"`                 // 创建时间
        UpdatedAt int64 `json:"updated_at"`                 // 更新时间
        Children []*ApiBackDTO `json:"children"`
    }

    ApiQuery {
        PageQuery
        Name string `json:"name,optional"`               // api名称
        Path string `json:"path,optional"`               // api路径
        Method string `json:"method,optional"`           // api请求方法
    }

    SyncApiReq {
        ApiFilePath string `json:"api_file_path"` // api文件路径
    }
)

@server(
    prefix: /admin_api/v1
    group: api
    middleware: JwtToken,Permission
)

service admin-api {
    @doc "分页获取api路由列表"
    @handler FindApiList
    post /api/find_api_list (ApiQuery) returns (PageResp)
}


@server(
    prefix: /admin_api/v1
    group: api
    middleware: JwtToken,Permission,OperationLog
)

service admin-api {
    @doc "同步api列表"
    @handler SyncApiList
    post /api/sync_api_list (SyncApiReq) returns (BatchResp)

    @doc "清空接口列表"
    @handler CleanApiList
    post /api/clean_api_list (EmptyReq) returns (BatchResp)


    @doc "创建api路由"
    @handler AddApi
    post /api/add_api (ApiNewReq) returns (ApiBackDTO)

    @doc "更新api路由"
    @handler UpdateApi
    put /api/update_api (ApiNewReq) returns (ApiBackDTO)

    @doc "删除api路由"
    @handler DeleteApi
    delete /api/delete_api (IdReq) returns (BatchResp)

    @doc "批量删除api路由"
    @handler BatchDeleteApi
    delete /api/batch_delete_api (IdsReq) returns (BatchResp)
}
