syntax = "v1"

import "base.api"


type (
    AlbumNewReq {
        Id int64 `json:"id,optional"`                   // 主键
        AlbumName string `json:"album_name"`            // 相册名
        AlbumDesc string `json:"album_desc"`            // 相册描述
        AlbumCover string `json:"album_cover"`          // 相册封面
        IsDelete int64 `json:"is_delete"`               // 是否删除
        Status int64 `json:"status"`                    // 状态值 1公开 2私密
    }

    AlbumBackDTO {
        Id int64 `json:"id,optional"`                   // 主键
        AlbumName string `json:"album_name"`            // 相册名
        AlbumDesc string `json:"album_desc"`            // 相册描述
        AlbumCover string `json:"album_cover"`          // 相册封面
        IsDelete int64 `json:"is_delete"`               // 是否删除
        Status int64 `json:"status"`                    // 状态值 1公开 2私密
        CreatedAt int64 `json:"created_at"`             // 创建时间
        UpdatedAt int64 `json:"updated_at"`             // 更新时间
        PhotoCount int64 `json:"photo_count"`           // 照片数量
    }

    AlbumQuery {
        PageQuery
        AlbumName string `json:"album_name,optional"` // 相册名
    }
)

@server(
    prefix: /admin_api/v1
    group: album
    middleware: JwtToken,Permission
)

service admin-api {
    @doc "分页获取相册列表"
    @handler FindAlbumList
    post /album/find_album_list (AlbumQuery) returns (PageResp)

    @doc "查询相册"
    @handler GetAlbum
    post /album/get_album (IdReq) returns (AlbumBackDTO)
}


@server(
    prefix: /admin_api/v1
    group: album
    middleware: JwtToken,Permission,OperationLog
)

service admin-api {
    @doc "创建相册"
    @handler AddAlbum
    post /album/add_album (AlbumNewReq) returns (AlbumBackDTO)

    @doc "更新相册"
    @handler UpdateAlbum
    put /album/update_album (AlbumNewReq) returns (AlbumBackDTO)

    @doc "删除相册"
    @handler DeleteAlbum
    delete /album/delete_album (IdReq) returns (BatchResp)
}
