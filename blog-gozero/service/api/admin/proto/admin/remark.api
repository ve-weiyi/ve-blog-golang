syntax = "v1"

import "base.api"

type (
    RemarkReviewReq {
        Ids []int64 `json:"ids,optional"`
        IsReview int64 `json:"is_review"`     // 是否审核
    }

    RemarkBackVO {
        Id int64 `json:"id,optional"`                      // 主键id
        UserId string `json:"user_id"`                     // 用户ID
        MessageContent string `json:"message_content"`     // 留言内容
        IpAddress string `json:"ip_address"`               // 用户ip
        IpSource string `json:"ip_source"`                 // 用户地址
        Time int64 `json:"time"`                           // 弹幕速度
        IsReview int64 `json:"is_review"`                  // 是否审核
        CreatedAt int64 `json:"created_at"`                // 发布时间
        UpdatedAt int64 `json:"updated_at"`                // 更新时间
        User *UserInfoVO `json:"user"`                       // 用户信息
    }

    RemarkQuery {
        PageQuery
        Nickname string `json:"nickname,optional"`     // 昵称
        IsReview int64 `json:"is_review,optional"`     // 是否审核
    }
)

@server(
    tags : "留言管理"
    prefix: /admin-api/v1
    group: remark
    authType: apiKey
    middleware: JwtToken,Permission,OperationLog
)

service admin-api {
    @doc "分页获取留言列表"
    @handler FindRemarkList
    post /remark/find_remark_list (RemarkQuery) returns (PageResp)

    @doc "更新留言"
    @handler UpdateRemarkReview
    put /remark/update_remark_review (RemarkReviewReq) returns (BatchResp)

    @doc "删除留言"
    @handler DeleteRemark
    delete /remark/delete_remark (IdReq) returns (BatchResp)

    @doc "批量删除留言"
    @handler BatchDeleteRemark
    delete /remark/batch_delete_remark (IdsReq) returns (BatchResp)
}
