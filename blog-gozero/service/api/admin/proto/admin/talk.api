syntax = "v1"

import "base.api"


type (
    TalkNewReq {
        Id int64 `json:"id,optional"`             // 说说ID
        Content string `json:"content"`           // 说说内容
        ImgList []string `json:"img_list"`        // 图片URL列表
        IsTop int64 `json:"is_top"`               // 是否置顶
        Status int64 `json:"status"`              // 状态 1.公开 2.私密
    }

    TalkBackVO {
        Id int64 `json:"id,optional"`                // 说说ID
        UserId string `json:"user_id"`               // 用户ID
        Content string `json:"content"`              // 说说内容
        ImgList []string `json:"img_list"`           // 图片URL列表
        IsTop int64 `json:"is_top"`                  // 是否置顶
        Status int64 `json:"status"`                 // 状态 1.公开 2.私密
        LikeCount int64 `json:"like_count"`          // 点赞量
        CommentCount int64 `json:"comment_count"`    // 评论量
        CreatedAt int64 `json:"created_at"`          // 创建时间
        UpdatedAt int64 `json:"updated_at"`          // 更新时间
        User *UserInfoVO `json:"user"`                 // 用户信息
    }

    TalkQuery {
        PageQuery
        Status int64 `json:"status,optional"`     // 状态 1.公开 2.私密
    }
)
@server(
    tags : "说说管理"
    prefix: /admin-api/v1
    group: talk
    authType: apiKey
    middleware: JwtToken,Permission,OperationLog
)

service admin-api {
    @doc "分页获取说说列表"
    @handler FindTalkList
    post /talk/find_talk_list (TalkQuery) returns (PageResp)

    @doc "创建说说"
    @handler AddTalk
    post /talk/add_talk (TalkNewReq) returns (TalkBackVO)

    @doc "更新说说"
    @handler UpdateTalk
    put /talk/update_talk (TalkNewReq) returns (TalkBackVO)

    @doc "查询说说"
    @handler GetTalk
    post /talk/get_talk (IdReq) returns (TalkBackVO)

    @doc "删除说说"
    @handler DeleteTalk
    delete /talk/delete_talk (IdReq) returns (BatchResp)
}
