syntax = "v1"

import "base.api"

type (
    UserLoginHistory {
        Id int64 `json:"id,optional"`
        LoginType string `json:"login_type"`  // 登录类型
        Os string `json:"os"`                 // 操作系统
        Browser string `json:"browser"`       // 浏览器
        IpAddress string `json:"ip_address"`  // ip host
        IpSource string `json:"ip_source"`    // ip 源
        LoginAt int64 `json:"login_at"`       // 登录时间
        LogoutAt int64 `json:"logout_at"`     // 登出时间
    }

    UserLoginHistoryQuery {
        PageQuery
    }


    UserThirdPartyInfo {
        Platform string `json:"platform"`             // 平台
        OpenId string `json:"open_id"`                // 平台用户id
        Nickname string `json:"nickname"`             // 昵称
        Avatar string `json:"avatar"`                 // 头像
        CreatedAt int64 `json:"created_at"`           // 创建时间
    }

    UserInfoResp {
        UserId string `json:"user_id"`               // 用户id
        Username string `json:"username"`            // 用户名
        Nickname string `json:"nickname"`            // 用户昵称
        Avatar string `json:"avatar"`                // 用户头像
        Email string `json:"email"`                  // 用户邮箱
        Phone string `json:"phone"`                  // 用户手机号
        CreatedAt int64 `json:"created_at"`          // 创建时间
        RegisterType string `json:"register_type"`   // 注册方式
        UserInfoExt
        ThirdParty []*UserThirdPartyInfo `json:"third_party"`
        Roles []string `json:"roles"`
        Perms []string `json:"perms"`
    }


    UserApi {
        Id int64 `json:"id,optional"`           // 主键id
        ParentId int64 `json:"parent_id"`       // 父id
        Name string `json:"name"`               // api名称
        Path string `json:"path"`               // api路径
        Method string `json:"method"`           // api请求方法
        CreatedAt int64 `json:"created_at"`     // 创建时间
        UpdatedAt int64 `json:"updated_at"`     // 更新时间
        Children []*UserApi `json:"children"`
    }

    UserMenu {
        Id int64 `json:"id,optional"`           // 主键
        ParentId int64 `json:"parent_id"`       // 父id
        Path string `json:"path"`               // 路由地址
        Name string `json:"name"`               // 路由名字
        Component string `json:"component"`     // Layout组件
        Redirect string `json:"redirect"`       // 路由重定向
        Meta UserMenuMeta `json:"meta"`         // meta配置
        Children []*UserMenu `json:"children,optional"`
        CreatedAt int64 `json:"created_at"`     // 创建时间
        UpdatedAt int64 `json:"updated_at"`     // 更新时间
    }

    UserMenuMeta {
        Title string `json:"title,optional"`
        Icon string `json:"icon,optional"`
        Hidden bool `json:"hidden,optional"`
        AlwaysShow bool `json:"alwaysShow,optional"`
        Affix bool `json:"affix,optional"`
        KeepAlive bool `json:"keepAlive,optional"`
        Breadcrumb bool `json:"breadcrumb,optional"`
    }

    UserRole {
        Id int64 `json:"id,optional"`                // 主键id
        ParentId int64 `json:"parent_id"`            // 父id
        RoleKey string `json:"role_key"`             // 角色名
        RoleLabel string `json:"role_label"`         // 角色标签
        RoleComment string `json:"role_comment"`     // 角色备注
    }

    UserApisResp {
        List []*UserApi `json:"list"`
    }

    UserMenusResp {
        List []*UserMenu `json:"list"`
    }

    UserRolesResp {
        List []*UserRole `json:"list"`
    }

    UpdateUserInfoReq {
        Nickname string `json:"nickname"` // 昵称
        UserInfoExt
    }

    UpdateUserAvatarReq {
        Avatar string `json:"avatar"`     // 头像
    }

    UpdateUserPasswordReq {
        OldPassword string `json:"old_password"`         // 旧密码
        NewPassword string `json:"new_password"`         // 新密码
        ConfirmPassword string `json:"confirm_password"` // 确认密码
    }

    UpdateUserBindEmailReq {
        Email string `json:"email"`            // 邮箱
        VerifyCode string `json:"verify_code"` // 验证码
    }

    UpdateUserBindPhoneReq {
        Phone string `json:"phone"`            // 手机号
        VerifyCode string `json:"verify_code"` // 验证码
    }

    UpdateUserBindThirdPartyReq {
        Platform string `json:"platform"`          // 平台
        Code string `json:"code"`                  // 授权码
        State string `json:"state,optional"`       // 状态
    }

    DeleteUserBindThirdPartyReq {
        Platform string `json:"platform"`          // 平台
    }
)

@server(
    tags : "用户管理"
    prefix: /admin-api/v1
    group: user
    authType: apiKey
    middleware: JwtToken,Permission,OperationLog
)

service admin-api {
    @doc "查询用户登录历史"
    @handler GetUserLoginHistoryList
    post /user/get_user_login_history_list (UserLoginHistoryQuery) returns (PageResp)


    @doc "获取用户信息"
    @handler GetUserInfo
    get /user/get_user_info (EmptyReq) returns (UserInfoResp)

    @doc "获取用户角色"
    @handler GetUserRoles
    get /user/get_user_roles (EmptyReq) returns (UserRolesResp)

    @doc "获取用户菜单权限"
    @handler GetUserMenus
    get /user/get_user_menus (EmptyReq) returns (UserMenusResp)

    @doc "获取用户接口权限"
    @handler GetUserApis
    get /user/get_user_apis (EmptyReq) returns (UserApisResp)


    @doc "修改用户信息"
    @handler UpdateUserInfo
    post /user/update_user_info (UpdateUserInfoReq) returns (EmptyResp)

    @doc "修改用户头像"
    @handler UpdateUserAvatar
    post /user/update_user_avatar (UpdateUserAvatarReq) returns (EmptyResp)

    @doc "修改用户密码"
    @handler UpdateUserPassword
    post /user/update_user_password (UpdateUserPasswordReq) returns (EmptyResp)

    @doc "修改用户绑定邮箱"
    @handler UpdateUserBindEmail
    post /user/update_user_bind_email (UpdateUserBindEmailReq) returns (EmptyResp)

    @doc "修改用户绑定手机号"
    @handler UpdateUserBindPhone
    post /user/update_user_bind_phone (UpdateUserBindPhoneReq) returns (EmptyResp)

    @doc "修改用户绑定第三方平台账号"
    @handler UpdateUserBindThirdParty
    post /user/update_user_bind_third_party (UpdateUserBindThirdPartyReq) returns (EmptyResp)

    @doc "删除用户绑定第三方平台账号"
    @handler DeleteUserBindThirdParty
    post /user/delete_user_bind_third_party (DeleteUserBindThirdPartyReq) returns (EmptyResp)
}
