syntax = "v1"

import "base.api"

type (
    CommentNewReq {
        TopicId int64 `json:"topic_id,optional"`             // 主题id
        ParentId int64 `json:"parent_id,optional"`           // 父评论id
        ReplyMsgId int64 `json:"reply_msg_id,optional"`      // 会话id
        ReplyUserId string `json:"reply_user_id,optional"`   // 回复用户id
        CommentContent string `json:"comment_content"`       // 评论内容
        Type int64 `json:"type"`                             // 评论类型 1.文章 2.友链 3.说说
        Status int64 `json:"status,optional"`                // 状态 0.正常 1.已编辑 2.已删除
    }

    UpdateCommentReq {
        Id int64 `json:"id"`                                    // 主键
        ReplyUserId string `json:"reply_user_id,optional"`      // 回复用户id
        CommentContent string `json:"comment_content"`          // 评论内容
        Status int64 `json:"status,optional"`                   // 状态 0.正常 1.已编辑 2.已删除
    }

    CommentReply {
        Id int64 `json:"id"`                          // 评论id
        TopicId int64 `json:"topic_id"`               // 主题id
        ParentId int64 `json:"parent_id"`             // 父评论id
        ReplyMsgId int64 `json:"reply_msg_id"`        // 会话id
        UserId string `json:"user_id"`                // 用户id
        ReplyUserId string `json:"reply_user_id"`     // 被回复用户id
        CommentContent string `json:"comment_content"`// 评论内容
        Type int64 `json:"type"`                      // 评论类型 1.文章 2.友链 3.说说
        CreatedAt int64 `json:"created_at"`           // 评论时间
        LikeCount int64 `json:"like_count"`           // 点赞数
        User *UserInfoVO `json:"user"`                // 用户信息
        ReplyUser *UserInfoVO `json:"reply_user"`     // 被回复评论用户
    }

    Comment {
        Id int64 `json:"id"`                                        // 评论id
        TopicId int64 `json:"topic_id"`                             // 主题id
        ParentId int64 `json:"parent_id"`                           // 父评论id
        ReplyMsgId int64 `json:"reply_msg_id"`                      // 会话id
        UserId string `json:"user_id"`                              // 用户id
        ReplyUserId string `json:"reply_user_id"`                   // 被回复用户id
        CommentContent string `json:"comment_content"`              // 评论内容
        Type int64 `json:"type"`                                    // 评论类型 1.文章 2.友链 3.说说
        CreatedAt int64 `json:"created_at"`                         // 评论时间
        LikeCount int64 `json:"like_count"`                         // 点赞数
        User *UserInfoVO `json:"user"`                              // 评论用户
        ReplyUser *UserInfoVO `json:"reply_user"`                   // 被回复评论用户
        ReplyCount int64 `json:"reply_count"`                       // 回复量
        CommentReplyList []*CommentReply `json:"comment_reply_list"`// 评论回复列表
    }

    CommentQueryReq {
        PageQuery
        TopicId int64 `json:"topic_id,optional"`          // 主题id
        ParentId int64 `json:"parent_id,optional"`        // 父评论id
        Type int64 `json:"type,optional"`                 // 评论类型 1.文章 2.友链 3.说说
    }
)

@server(
    tags : "评论"
    prefix: /blog-api/v1
    group: comment
    authType: apiKey
    middleware: TimeToken
)

service blog-api {
    @doc "查询评论列表"
    @handler FindCommentList
    post /comment/find_comment_list (CommentQueryReq) returns (PageResp)

    @doc "查询评论回复列表"
    @handler FindCommentReplyList
    post /comment/find_comment_reply_list (CommentQueryReq) returns (PageResp)

    @doc "查询最新评论回复列表"
    @handler FindCommentRecentList
    post /comment/find_comment_recent_list (CommentQueryReq) returns (PageResp)
}

@server(
    tags : "评论"
    prefix: /blog-api/v1
    group: comment
    authType: apiKey
    middleware: TimeToken,SignToken
)

service blog-api {
    @doc "创建评论"
    @handler AddComment
    post /comment/add_comment (CommentNewReq) returns (Comment)

    @doc "更新评论"
    @handler UpdateComment
    post /comment/update_comment (UpdateCommentReq) returns (Comment)

    @doc "点赞评论"
    @handler LikeComment
    post /comment/like_comment (IdReq) returns (EmptyResp)
}
