syntax = "v1"

type (
    MessageEvent {
        Type int64 `json:"type"`           // 消息类型
        Data string `json:"data"`          // 消息内容
        Timestamp int64 `json:"timestamp"` // 消息时间戳
    }

    OnlineEvent {
        Count int64 `json:"count"`
        IsOnline bool `json:"is_online"`
        Msg string `json:"msg"` // 消息内容
    }

    ClientInfoEvent {
        IpAddress string `json:"ip_address"` // ip地址
        IpSource string `json:"ip_source"`   // ip来源
    }

    HistoryMessageEvent {
        List []*ChatMessageEvent `json:"list"` // 消息列表
    }

    ChatMessageEvent {
        Id int64 `json:"id"`                   // 主键
        UserId string `json:"user_id"`         // 用户id
        TerminalId string `json:"terminal_id"` // 设备id
        Nickname string `json:"nickname"`      // 昵称
        Avatar string `json:"avatar"`          // 头像
        IpAddress string `json:"ip_address"`   // ip地址
        IpSource string `json:"ip_source"`     // ip来源
        Type string `json:"type"`              // 消息类型 1: 文本消息 2: 图片消息 3: 文件消息 4: 语音消息 5: 视频消息
        Content string `json:"content"`        // 消息内容
        Status int64 `json:"status"`           // 消息状态 0-正常 1-已编辑 2-已撤回 3-已删除
        CreatedAt int64 `json:"created_at"`    // 创建时间
        UpdatedAt int64 `json:"updated_at"`    // 更新时间
    }

    RecallMessageEvent {
        Id int64 `json:"id"` // 消息id
    }
)


@server(
    tags : "WebSocket"
    prefix: /blog-api/v1
    group: websocket
)

service blog-api {
    @doc "WebSocket消息"
    @handler Websocket
    get /websocket
}
