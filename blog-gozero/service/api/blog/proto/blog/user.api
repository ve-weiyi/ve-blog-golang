syntax = "v1"

import "base.api"

type (
    UserInfoExt {
        Gender int `json:"gender"`          // 性别 0未知 1男 2女
        Intro string `json:"intro"`         // 简介
        Website string `json:"website"`     // 网站
    }

    UpdateUserInfoReq {
        Nickname string `json:"nickname"` // 昵称
        UserInfoExt
    }

    UpdateUserAvatarReq {
        Avatar string `json:"avatar"`     // 头像
    }

    UpdateUserPasswordReq {
        OldPassword string `json:"old_password"`         // 旧密码
        NewPassword string `json:"new_password"`         // 新密码
        ConfirmPassword string `json:"confirm_password"` // 确认密码
    }

    UpdateUserBindEmailReq {
        Email string `json:"email"`            // 邮箱
        VerifyCode string `json:"verify_code"` // 验证码
    }

    UpdateUserBindPhoneReq {
        Phone string `json:"phone"`            // 手机号
        VerifyCode string `json:"verify_code"` // 验证码
    }

    UserInfoResp {
        UserId string `json:"user_id"`                  // 用户id
        Username string `json:"username"`               // 用户名
        Nickname string `json:"nickname"`               // 用户昵称
        Avatar string `json:"avatar"`                   // 用户头像
        Email string `json:"email"`                     // 用户邮箱
        Phone string `json:"phone"`                     // 用户手机号
        UserInfoExt
    }

    UserLikeResp {
        ArticleLikeSet []int64 `json:"article_like_set"`
        CommentLikeSet []int64 `json:"comment_like_set"`
        TalkLikeSet []int64 `json:"talk_like_set"`
    }
)

@server(
    prefix: /api/v1
    group: user
    middleware: TimeToken,SignToken
)

service blog-api {
    @doc "修改用户信息"
    @handler UpdateUserInfo
    post /user/update_user_info (UpdateUserInfoReq) returns (EmptyResp)

    @doc "修改用户头像"
    @handler UpdateUserAvatar
    post /user/update_user_avatar (UpdateUserAvatarReq) returns (EmptyResp)

    @doc "修改用户密码"
    @handler UpdateUserPassword
    post /user/update_user_password (UpdateUserPasswordReq) returns (EmptyResp)

    @doc "修改用户绑定邮箱"
    @handler UpdateUserBindEmail
    post /user/update_user_bind_email (UpdateUserBindEmailReq) returns (EmptyResp)

    @doc "修改用户绑定手机号"
    @handler UpdateUserBindPhone
    post /user/update_user_bind_phone (UpdateUserBindPhoneReq) returns (EmptyResp)


    @doc "获取用户信息"
    @handler GetUserInfo
    get /user/get_user_info (EmptyReq) returns (UserInfoResp)

    @doc "获取用户点赞列表"
    @handler GetUserLike
    get /user/get_user_like (EmptyReq) returns (UserLikeResp)
}

type (
    GetTouristInfoResp {
        TouristId string `json:"tourist_id"` // 游客id
    }
)
@server(
    prefix: /api/v1
    group: user
)
service blog-api {
    @doc "获取游客身份信息"
    @handler GetTouristInfo
    get /get_tourist_info (EmptyReq) returns (GetTouristInfoResp)
}
