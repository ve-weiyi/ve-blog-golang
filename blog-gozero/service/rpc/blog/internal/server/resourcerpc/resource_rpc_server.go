// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: resource.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/blog-gozero/service/rpc/blog/internal/logic/resourcerpc"
	"github.com/ve-weiyi/ve-blog-golang/blog-gozero/service/rpc/blog/internal/pb/resourcerpc"
	"github.com/ve-weiyi/ve-blog-golang/blog-gozero/service/rpc/blog/internal/svc"
)

type ResourceRpcServer struct {
	svcCtx *svc.ServiceContext
	resourcerpc.UnimplementedResourceRpcServer
}

func NewResourceRpcServer(svcCtx *svc.ServiceContext) *ResourceRpcServer {
	return &ResourceRpcServer{
		svcCtx: svcCtx,
	}
}

// 创建照片
func (s *ResourceRpcServer) AddPhoto(ctx context.Context, in *resourcerpc.PhotoNewReq) (*resourcerpc.PhotoDetails, error) {
	l := resourcerpclogic.NewAddPhotoLogic(ctx, s.svcCtx)
	return l.AddPhoto(in)
}

// 更新照片
func (s *ResourceRpcServer) UpdatePhoto(ctx context.Context, in *resourcerpc.PhotoNewReq) (*resourcerpc.PhotoDetails, error) {
	l := resourcerpclogic.NewUpdatePhotoLogic(ctx, s.svcCtx)
	return l.UpdatePhoto(in)
}

// 更新照片删除状态
func (s *ResourceRpcServer) UpdatePhotoDelete(ctx context.Context, in *resourcerpc.UpdatePhotoDeleteReq) (*resourcerpc.BatchResp, error) {
	l := resourcerpclogic.NewUpdatePhotoDeleteLogic(ctx, s.svcCtx)
	return l.UpdatePhotoDelete(in)
}

// 删除照片
func (s *ResourceRpcServer) DeletePhoto(ctx context.Context, in *resourcerpc.IdsReq) (*resourcerpc.BatchResp, error) {
	l := resourcerpclogic.NewDeletePhotoLogic(ctx, s.svcCtx)
	return l.DeletePhoto(in)
}

// 查询照片列表
func (s *ResourceRpcServer) FindPhotoList(ctx context.Context, in *resourcerpc.FindPhotoListReq) (*resourcerpc.FindPhotoListResp, error) {
	l := resourcerpclogic.NewFindPhotoListLogic(ctx, s.svcCtx)
	return l.FindPhotoList(in)
}

// 创建相册
func (s *ResourceRpcServer) AddAlbum(ctx context.Context, in *resourcerpc.AlbumNewReq) (*resourcerpc.AlbumDetails, error) {
	l := resourcerpclogic.NewAddAlbumLogic(ctx, s.svcCtx)
	return l.AddAlbum(in)
}

// 更新相册
func (s *ResourceRpcServer) UpdateAlbum(ctx context.Context, in *resourcerpc.AlbumNewReq) (*resourcerpc.AlbumDetails, error) {
	l := resourcerpclogic.NewUpdateAlbumLogic(ctx, s.svcCtx)
	return l.UpdateAlbum(in)
}

// 更新相册删除状态
func (s *ResourceRpcServer) UpdateAlbumDelete(ctx context.Context, in *resourcerpc.UpdateAlbumDeleteReq) (*resourcerpc.BatchResp, error) {
	l := resourcerpclogic.NewUpdateAlbumDeleteLogic(ctx, s.svcCtx)
	return l.UpdateAlbumDelete(in)
}

// 获取相册
func (s *ResourceRpcServer) GetAlbum(ctx context.Context, in *resourcerpc.IdReq) (*resourcerpc.AlbumDetails, error) {
	l := resourcerpclogic.NewGetAlbumLogic(ctx, s.svcCtx)
	return l.GetAlbum(in)
}

// 删除相册
func (s *ResourceRpcServer) DeleteAlbum(ctx context.Context, in *resourcerpc.IdsReq) (*resourcerpc.BatchResp, error) {
	l := resourcerpclogic.NewDeleteAlbumLogic(ctx, s.svcCtx)
	return l.DeleteAlbum(in)
}

// 查询相册列表
func (s *ResourceRpcServer) FindAlbumList(ctx context.Context, in *resourcerpc.FindAlbumListReq) (*resourcerpc.FindAlbumListResp, error) {
	l := resourcerpclogic.NewFindAlbumListLogic(ctx, s.svcCtx)
	return l.FindAlbumList(in)
}

// 创建页面
func (s *ResourceRpcServer) AddPage(ctx context.Context, in *resourcerpc.PageNewReq) (*resourcerpc.PageDetails, error) {
	l := resourcerpclogic.NewAddPageLogic(ctx, s.svcCtx)
	return l.AddPage(in)
}

// 更新页面
func (s *ResourceRpcServer) UpdatePage(ctx context.Context, in *resourcerpc.PageNewReq) (*resourcerpc.PageDetails, error) {
	l := resourcerpclogic.NewUpdatePageLogic(ctx, s.svcCtx)
	return l.UpdatePage(in)
}

// 删除页面
func (s *ResourceRpcServer) DeletePage(ctx context.Context, in *resourcerpc.IdsReq) (*resourcerpc.BatchResp, error) {
	l := resourcerpclogic.NewDeletePageLogic(ctx, s.svcCtx)
	return l.DeletePage(in)
}

// 查询页面列表
func (s *ResourceRpcServer) FindPageList(ctx context.Context, in *resourcerpc.FindPageListReq) (*resourcerpc.FindPageListResp, error) {
	l := resourcerpclogic.NewFindPageListLogic(ctx, s.svcCtx)
	return l.FindPageList(in)
}
