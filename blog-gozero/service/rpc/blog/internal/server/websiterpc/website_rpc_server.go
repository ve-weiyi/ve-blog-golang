// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: website.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/blog-gozero/service/rpc/blog/internal/logic/websiterpc"
	"github.com/ve-weiyi/ve-blog-golang/blog-gozero/service/rpc/blog/internal/pb/websiterpc"
	"github.com/ve-weiyi/ve-blog-golang/blog-gozero/service/rpc/blog/internal/svc"
)

type WebsiteRpcServer struct {
	svcCtx *svc.ServiceContext
	websiterpc.UnimplementedWebsiteRpcServer
}

func NewWebsiteRpcServer(svcCtx *svc.ServiceContext) *WebsiteRpcServer {
	return &WebsiteRpcServer{
		svcCtx: svcCtx,
	}
}

// 用户日浏览量分析
func (s *WebsiteRpcServer) AnalysisVisit(ctx context.Context, in *websiterpc.EmptyReq) (*websiterpc.AnalysisVisitResp, error) {
	l := websiterpclogic.NewAnalysisVisitLogic(ctx, s.svcCtx)
	return l.AnalysisVisit(in)
}

// 添加用户访问记录
func (s *WebsiteRpcServer) AddVisit(ctx context.Context, in *websiterpc.AddVisitReq) (*websiterpc.AddVisitResp, error) {
	l := websiterpclogic.NewAddVisitLogic(ctx, s.svcCtx)
	return l.AddVisit(in)
}

// 查询用户访问趋势
func (s *WebsiteRpcServer) FindVisitTrend(ctx context.Context, in *websiterpc.FindVisitTrendReq) (*websiterpc.FindVisitTrendResp, error) {
	l := websiterpclogic.NewFindVisitTrendLogic(ctx, s.svcCtx)
	return l.FindVisitTrend(in)
}

// 创建友链
func (s *WebsiteRpcServer) AddFriend(ctx context.Context, in *websiterpc.FriendNewReq) (*websiterpc.FriendDetails, error) {
	l := websiterpclogic.NewAddFriendLogic(ctx, s.svcCtx)
	return l.AddFriend(in)
}

// 更新友链
func (s *WebsiteRpcServer) UpdateFriend(ctx context.Context, in *websiterpc.FriendNewReq) (*websiterpc.FriendDetails, error) {
	l := websiterpclogic.NewUpdateFriendLogic(ctx, s.svcCtx)
	return l.UpdateFriend(in)
}

// 删除友链
func (s *WebsiteRpcServer) DeleteFriend(ctx context.Context, in *websiterpc.IdsReq) (*websiterpc.BatchResp, error) {
	l := websiterpclogic.NewDeleteFriendLogic(ctx, s.svcCtx)
	return l.DeleteFriend(in)
}

// 查询友链列表
func (s *WebsiteRpcServer) FindFriendList(ctx context.Context, in *websiterpc.FindFriendListReq) (*websiterpc.FindFriendListResp, error) {
	l := websiterpclogic.NewFindFriendListLogic(ctx, s.svcCtx)
	return l.FindFriendList(in)
}
