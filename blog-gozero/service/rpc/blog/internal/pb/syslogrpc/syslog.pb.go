// 声明 proto 语法版本，固定值

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: syslog.proto

// proto 包名

package syslogrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyReq) Reset() {
	*x = EmptyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyReq) ProtoMessage() {}

func (x *EmptyReq) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyReq.ProtoReflect.Descriptor instead.
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{0}
}

type EmptyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResp) Reset() {
	*x = EmptyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResp) ProtoMessage() {}

func (x *EmptyResp) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResp.ProtoReflect.Descriptor instead.
func (*EmptyResp) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{1}
}

type IdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdReq) Reset() {
	*x = IdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdReq) ProtoMessage() {}

func (x *IdReq) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdReq.ProtoReflect.Descriptor instead.
func (*IdReq) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{2}
}

func (x *IdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *IdsReq) Reset() {
	*x = IdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdsReq) ProtoMessage() {}

func (x *IdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdsReq.ProtoReflect.Descriptor instead.
func (*IdsReq) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{3}
}

func (x *IdsReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type UserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserIdReq) Reset() {
	*x = UserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdReq) ProtoMessage() {}

func (x *UserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdReq.ProtoReflect.Descriptor instead.
func (*UserIdReq) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{4}
}

func (x *UserIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type BatchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuccessCount int64 `protobuf:"varint,1,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
}

func (x *BatchResp) Reset() {
	*x = BatchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResp) ProtoMessage() {}

func (x *BatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResp.ProtoReflect.Descriptor instead.
func (*BatchResp) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{5}
}

func (x *BatchResp) GetSuccessCount() int64 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

type CountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountResp) Reset() {
	*x = CountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountResp) ProtoMessage() {}

func (x *CountResp) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountResp.ProtoReflect.Descriptor instead.
func (*CountResp) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{6}
}

func (x *CountResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// ************* blog 日志管理 *************
type LoginLogDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户id
	LoginType string `protobuf:"bytes,3,opt,name=login_type,json=loginType,proto3" json:"login_type,omitempty"` // 登录类型
	AppName   string `protobuf:"bytes,4,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`       // 应用名称
	Os        string `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`                                // 操作系统
	Browser   string `protobuf:"bytes,6,opt,name=browser,proto3" json:"browser,omitempty"`                      // 浏览器
	IpAddress string `protobuf:"bytes,7,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"` // ip host
	IpSource  string `protobuf:"bytes,8,opt,name=ip_source,json=ipSource,proto3" json:"ip_source,omitempty"`    // ip 源
	LoginAt   int64  `protobuf:"varint,9,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`      // 登录时间
	LogoutAt  int64  `protobuf:"varint,10,opt,name=logout_at,json=logoutAt,proto3" json:"logout_at,omitempty"`  // 登出时间
}

func (x *LoginLogDetails) Reset() {
	*x = LoginLogDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogDetails) ProtoMessage() {}

func (x *LoginLogDetails) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogDetails.ProtoReflect.Descriptor instead.
func (*LoginLogDetails) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{7}
}

func (x *LoginLogDetails) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LoginLogDetails) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LoginLogDetails) GetLoginType() string {
	if x != nil {
		return x.LoginType
	}
	return ""
}

func (x *LoginLogDetails) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *LoginLogDetails) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *LoginLogDetails) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *LoginLogDetails) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *LoginLogDetails) GetIpSource() string {
	if x != nil {
		return x.IpSource
	}
	return ""
}

func (x *LoginLogDetails) GetLoginAt() int64 {
	if x != nil {
		return x.LoginAt
	}
	return 0
}

func (x *LoginLogDetails) GetLogoutAt() int64 {
	if x != nil {
		return x.LogoutAt
	}
	return 0
}

type LoginLogNewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户id
	LoginType string `protobuf:"bytes,3,opt,name=login_type,json=loginType,proto3" json:"login_type,omitempty"` // 登录类型
}

func (x *LoginLogNewReq) Reset() {
	*x = LoginLogNewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogNewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogNewReq) ProtoMessage() {}

func (x *LoginLogNewReq) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogNewReq.ProtoReflect.Descriptor instead.
func (*LoginLogNewReq) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{8}
}

func (x *LoginLogNewReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LoginLogNewReq) GetLoginType() string {
	if x != nil {
		return x.LoginType
	}
	return ""
}

type AddLogoutLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`        // 用户id
	LogoutAt int64  `protobuf:"varint,8,opt,name=logout_at,json=logoutAt,proto3" json:"logout_at,omitempty"` // 登出时间
}

func (x *AddLogoutLogReq) Reset() {
	*x = AddLogoutLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLogoutLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLogoutLogReq) ProtoMessage() {}

func (x *AddLogoutLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLogoutLogReq.ProtoReflect.Descriptor instead.
func (*AddLogoutLogReq) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{9}
}

func (x *AddLogoutLogReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddLogoutLogReq) GetLogoutAt() int64 {
	if x != nil {
		return x.LogoutAt
	}
	return 0
}

type AddLogoutLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddLogoutLogResp) Reset() {
	*x = AddLogoutLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLogoutLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLogoutLogResp) ProtoMessage() {}

func (x *AddLogoutLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLogoutLogResp.ProtoReflect.Descriptor instead.
func (*AddLogoutLogResp) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{10}
}

type FindLoginLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorts    []string `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`                 // 排序
	UserId   string   `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
}

func (x *FindLoginLogListReq) Reset() {
	*x = FindLoginLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindLoginLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindLoginLogListReq) ProtoMessage() {}

func (x *FindLoginLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindLoginLogListReq.ProtoReflect.Descriptor instead.
func (*FindLoginLogListReq) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{11}
}

func (x *FindLoginLogListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindLoginLogListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindLoginLogListReq) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *FindLoginLogListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FindLoginLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*LoginLogDetails `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FindLoginLogListResp) Reset() {
	*x = FindLoginLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindLoginLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindLoginLogListResp) ProtoMessage() {}

func (x *FindLoginLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindLoginLogListResp.ProtoReflect.Descriptor instead.
func (*FindLoginLogListResp) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{12}
}

func (x *FindLoginLogListResp) GetList() []*LoginLogDetails {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FindLoginLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ************* blog 日志管理 *************
type VisitLogDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                  // 主键id
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 用户id
	TerminalId string `protobuf:"bytes,3,opt,name=terminal_id,json=terminalId,proto3" json:"terminal_id,omitempty"` // 设备id
	PageName   string `protobuf:"bytes,4,opt,name=page_name,json=pageName,proto3" json:"page_name,omitempty"`       // 访问页面
	IpAddress  string `protobuf:"bytes,5,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`    // 操作ip
	IpSource   string `protobuf:"bytes,6,opt,name=ip_source,json=ipSource,proto3" json:"ip_source,omitempty"`       // 操作地址
	Os         string `protobuf:"bytes,7,opt,name=os,proto3" json:"os,omitempty"`                                   // 操作系统
	Browser    string `protobuf:"bytes,8,opt,name=browser,proto3" json:"browser,omitempty"`                         // 浏览器
	CreatedAt  int64  `protobuf:"varint,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`  // 创建时间
	UpdatedAt  int64  `protobuf:"varint,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`  // 更新时间
}

func (x *VisitLogDetails) Reset() {
	*x = VisitLogDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisitLogDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisitLogDetails) ProtoMessage() {}

func (x *VisitLogDetails) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisitLogDetails.ProtoReflect.Descriptor instead.
func (*VisitLogDetails) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{13}
}

func (x *VisitLogDetails) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VisitLogDetails) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VisitLogDetails) GetTerminalId() string {
	if x != nil {
		return x.TerminalId
	}
	return ""
}

func (x *VisitLogDetails) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *VisitLogDetails) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *VisitLogDetails) GetIpSource() string {
	if x != nil {
		return x.IpSource
	}
	return ""
}

func (x *VisitLogDetails) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *VisitLogDetails) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *VisitLogDetails) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *VisitLogDetails) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type VisitLogNewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageName string `protobuf:"bytes,1,opt,name=page_name,json=pageName,proto3" json:"page_name,omitempty"` // 访问页面
}

func (x *VisitLogNewReq) Reset() {
	*x = VisitLogNewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisitLogNewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisitLogNewReq) ProtoMessage() {}

func (x *VisitLogNewReq) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisitLogNewReq.ProtoReflect.Descriptor instead.
func (*VisitLogNewReq) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{14}
}

func (x *VisitLogNewReq) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

type FindVisitLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorts      []string `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`                             // 排序
	UserId     string   `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 用户id
	TerminalId string   `protobuf:"bytes,5,opt,name=terminal_id,json=terminalId,proto3" json:"terminal_id,omitempty"` // 设备id
	PageName   string   `protobuf:"bytes,6,opt,name=page_name,json=pageName,proto3" json:"page_name,omitempty"`       // 访问页面
}

func (x *FindVisitLogListReq) Reset() {
	*x = FindVisitLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindVisitLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindVisitLogListReq) ProtoMessage() {}

func (x *FindVisitLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindVisitLogListReq.ProtoReflect.Descriptor instead.
func (*FindVisitLogListReq) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{15}
}

func (x *FindVisitLogListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindVisitLogListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindVisitLogListReq) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *FindVisitLogListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindVisitLogListReq) GetTerminalId() string {
	if x != nil {
		return x.TerminalId
	}
	return ""
}

func (x *FindVisitLogListReq) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

type FindVisitLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*VisitLogDetails `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FindVisitLogListResp) Reset() {
	*x = FindVisitLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindVisitLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindVisitLogListResp) ProtoMessage() {}

func (x *FindVisitLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindVisitLogListResp.ProtoReflect.Descriptor instead.
func (*FindVisitLogListResp) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{16}
}

func (x *FindVisitLogListResp) GetList() []*VisitLogDetails {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FindVisitLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ************* blog 日志管理 *************
type OperationLogDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                // 主键id
	UserId         string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                           // 用户id
	TerminalId     string `protobuf:"bytes,3,opt,name=terminal_id,json=terminalId,proto3" json:"terminal_id,omitempty"`               // 设备id
	IpAddress      string `protobuf:"bytes,4,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`                  // 操作ip
	IpSource       string `protobuf:"bytes,5,opt,name=ip_source,json=ipSource,proto3" json:"ip_source,omitempty"`                     // 操作地址
	OptModule      string `protobuf:"bytes,6,opt,name=opt_module,json=optModule,proto3" json:"opt_module,omitempty"`                  // 操作模块
	OptDesc        string `protobuf:"bytes,7,opt,name=opt_desc,json=optDesc,proto3" json:"opt_desc,omitempty"`                        // 操作描述
	RequestUri     string `protobuf:"bytes,8,opt,name=request_uri,json=requestUri,proto3" json:"request_uri,omitempty"`               // 请求地址
	RequestMethod  string `protobuf:"bytes,9,opt,name=request_method,json=requestMethod,proto3" json:"request_method,omitempty"`      // 请求方式
	RequestData    string `protobuf:"bytes,11,opt,name=request_data,json=requestData,proto3" json:"request_data,omitempty"`           // 请求参数
	ResponseData   string `protobuf:"bytes,12,opt,name=response_data,json=responseData,proto3" json:"response_data,omitempty"`        // 返回数据
	ResponseStatus int64  `protobuf:"varint,13,opt,name=response_status,json=responseStatus,proto3" json:"response_status,omitempty"` // 响应状态码
	Cost           string `protobuf:"bytes,14,opt,name=cost,proto3" json:"cost,omitempty"`                                            // 耗时（ms）
	CreatedAt      int64  `protobuf:"varint,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                // 创建时间
	UpdatedAt      int64  `protobuf:"varint,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                // 更新时间
}

func (x *OperationLogDetails) Reset() {
	*x = OperationLogDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationLogDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationLogDetails) ProtoMessage() {}

func (x *OperationLogDetails) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationLogDetails.ProtoReflect.Descriptor instead.
func (*OperationLogDetails) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{17}
}

func (x *OperationLogDetails) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OperationLogDetails) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OperationLogDetails) GetTerminalId() string {
	if x != nil {
		return x.TerminalId
	}
	return ""
}

func (x *OperationLogDetails) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *OperationLogDetails) GetIpSource() string {
	if x != nil {
		return x.IpSource
	}
	return ""
}

func (x *OperationLogDetails) GetOptModule() string {
	if x != nil {
		return x.OptModule
	}
	return ""
}

func (x *OperationLogDetails) GetOptDesc() string {
	if x != nil {
		return x.OptDesc
	}
	return ""
}

func (x *OperationLogDetails) GetRequestUri() string {
	if x != nil {
		return x.RequestUri
	}
	return ""
}

func (x *OperationLogDetails) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *OperationLogDetails) GetRequestData() string {
	if x != nil {
		return x.RequestData
	}
	return ""
}

func (x *OperationLogDetails) GetResponseData() string {
	if x != nil {
		return x.ResponseData
	}
	return ""
}

func (x *OperationLogDetails) GetResponseStatus() int64 {
	if x != nil {
		return x.ResponseStatus
	}
	return 0
}

func (x *OperationLogDetails) GetCost() string {
	if x != nil {
		return x.Cost
	}
	return ""
}

func (x *OperationLogDetails) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *OperationLogDetails) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type OperationLogNewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                           // 用户id
	TerminalId     string `protobuf:"bytes,3,opt,name=terminal_id,json=terminalId,proto3" json:"terminal_id,omitempty"`               // 设备id
	IpAddress      string `protobuf:"bytes,4,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`                  // 操作ip
	IpSource       string `protobuf:"bytes,5,opt,name=ip_source,json=ipSource,proto3" json:"ip_source,omitempty"`                     // 操作地址
	OptModule      string `protobuf:"bytes,6,opt,name=opt_module,json=optModule,proto3" json:"opt_module,omitempty"`                  // 操作模块
	OptDesc        string `protobuf:"bytes,7,opt,name=opt_desc,json=optDesc,proto3" json:"opt_desc,omitempty"`                        // 操作描述
	RequestUri     string `protobuf:"bytes,8,opt,name=request_uri,json=requestUri,proto3" json:"request_uri,omitempty"`               // 请求地址
	RequestMethod  string `protobuf:"bytes,9,opt,name=request_method,json=requestMethod,proto3" json:"request_method,omitempty"`      // 请求方式
	RequestData    string `protobuf:"bytes,11,opt,name=request_data,json=requestData,proto3" json:"request_data,omitempty"`           // 请求参数
	ResponseData   string `protobuf:"bytes,12,opt,name=response_data,json=responseData,proto3" json:"response_data,omitempty"`        // 返回数据
	ResponseStatus int64  `protobuf:"varint,13,opt,name=response_status,json=responseStatus,proto3" json:"response_status,omitempty"` // 响应状态码
	Cost           string `protobuf:"bytes,14,opt,name=cost,proto3" json:"cost,omitempty"`                                            // 耗时（ms）
}

func (x *OperationLogNewReq) Reset() {
	*x = OperationLogNewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationLogNewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationLogNewReq) ProtoMessage() {}

func (x *OperationLogNewReq) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationLogNewReq.ProtoReflect.Descriptor instead.
func (*OperationLogNewReq) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{18}
}

func (x *OperationLogNewReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OperationLogNewReq) GetTerminalId() string {
	if x != nil {
		return x.TerminalId
	}
	return ""
}

func (x *OperationLogNewReq) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *OperationLogNewReq) GetIpSource() string {
	if x != nil {
		return x.IpSource
	}
	return ""
}

func (x *OperationLogNewReq) GetOptModule() string {
	if x != nil {
		return x.OptModule
	}
	return ""
}

func (x *OperationLogNewReq) GetOptDesc() string {
	if x != nil {
		return x.OptDesc
	}
	return ""
}

func (x *OperationLogNewReq) GetRequestUri() string {
	if x != nil {
		return x.RequestUri
	}
	return ""
}

func (x *OperationLogNewReq) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *OperationLogNewReq) GetRequestData() string {
	if x != nil {
		return x.RequestData
	}
	return ""
}

func (x *OperationLogNewReq) GetResponseData() string {
	if x != nil {
		return x.ResponseData
	}
	return ""
}

func (x *OperationLogNewReq) GetResponseStatus() int64 {
	if x != nil {
		return x.ResponseStatus
	}
	return 0
}

func (x *OperationLogNewReq) GetCost() string {
	if x != nil {
		return x.Cost
	}
	return ""
}

type FindOperationLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorts    []string `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`       // 排序
	Keywords string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords,omitempty"` // 关键字
}

func (x *FindOperationLogListReq) Reset() {
	*x = FindOperationLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOperationLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOperationLogListReq) ProtoMessage() {}

func (x *FindOperationLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOperationLogListReq.ProtoReflect.Descriptor instead.
func (*FindOperationLogListReq) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{19}
}

func (x *FindOperationLogListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindOperationLogListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindOperationLogListReq) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *FindOperationLogListReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type FindOperationLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*OperationLogDetails `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FindOperationLogListResp) Reset() {
	*x = FindOperationLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOperationLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOperationLogListResp) ProtoMessage() {}

func (x *FindOperationLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOperationLogListResp.ProtoReflect.Descriptor instead.
func (*FindOperationLogListResp) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{20}
}

func (x *FindOperationLogListResp) GetList() []*OperationLogDetails {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FindOperationLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ************* blog 上传日志管理 *************
type UploadLogNewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             // id
	UserId   string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`        // 用户id
	FilePath string `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`  // 文件路径
	FileName string `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`  // 文件名称
	FileType string `protobuf:"bytes,5,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`  // 文件类型
	FileSize int64  `protobuf:"varint,6,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"` // 文件大小
	FileMd5  string `protobuf:"bytes,7,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`     // 文件md5值
	FileUrl  string `protobuf:"bytes,8,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`     // 上传路径
}

func (x *UploadLogNewReq) Reset() {
	*x = UploadLogNewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadLogNewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadLogNewReq) ProtoMessage() {}

func (x *UploadLogNewReq) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadLogNewReq.ProtoReflect.Descriptor instead.
func (*UploadLogNewReq) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{21}
}

func (x *UploadLogNewReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UploadLogNewReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UploadLogNewReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *UploadLogNewReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadLogNewReq) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *UploadLogNewReq) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *UploadLogNewReq) GetFileMd5() string {
	if x != nil {
		return x.FileMd5
	}
	return ""
}

func (x *UploadLogNewReq) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

type UploadLogDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                 // id
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`            // 用户id
	FilePath  string `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`      // 文件路径
	FileName  string `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`      // 文件名称
	FileType  string `protobuf:"bytes,5,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`      // 文件类型
	FileSize  int64  `protobuf:"varint,6,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`     // 文件大小
	FileMd5   string `protobuf:"bytes,7,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`         // 文件md5值
	FileUrl   string `protobuf:"bytes,8,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`         // 上传路径
	CreatedAt int64  `protobuf:"varint,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`  // 创建时间
	UpdatedAt int64  `protobuf:"varint,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // 更新时间
}

func (x *UploadLogDetails) Reset() {
	*x = UploadLogDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadLogDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadLogDetails) ProtoMessage() {}

func (x *UploadLogDetails) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadLogDetails.ProtoReflect.Descriptor instead.
func (*UploadLogDetails) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{22}
}

func (x *UploadLogDetails) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UploadLogDetails) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UploadLogDetails) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *UploadLogDetails) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadLogDetails) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *UploadLogDetails) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *UploadLogDetails) GetFileMd5() string {
	if x != nil {
		return x.FileMd5
	}
	return ""
}

func (x *UploadLogDetails) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *UploadLogDetails) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UploadLogDetails) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type FindUploadLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorts    []string `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`                       // 排序
	FilePath string   `protobuf:"bytes,4,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"` // 文件路径
	FileName string   `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"` // 文件名称
	FileType string   `protobuf:"bytes,6,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"` // 文件类型
}

func (x *FindUploadLogListReq) Reset() {
	*x = FindUploadLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUploadLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUploadLogListReq) ProtoMessage() {}

func (x *FindUploadLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUploadLogListReq.ProtoReflect.Descriptor instead.
func (*FindUploadLogListReq) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{23}
}

func (x *FindUploadLogListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindUploadLogListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindUploadLogListReq) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *FindUploadLogListReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FindUploadLogListReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FindUploadLogListReq) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

type FindUploadLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*UploadLogDetails `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FindUploadLogListResp) Reset() {
	*x = FindUploadLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_syslog_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUploadLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUploadLogListResp) ProtoMessage() {}

func (x *FindUploadLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_syslog_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUploadLogListResp.ProtoReflect.Descriptor instead.
func (*FindUploadLogListResp) Descriptor() ([]byte, []int) {
	return file_syslog_proto_rawDescGZIP(), []int{24}
}

func (x *FindUploadLogListResp) GetList() []*UploadLogDetails {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FindUploadLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_syslog_proto protoreflect.FileDescriptor

var file_syslog_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x22, 0x0a, 0x0a, 0x08, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x22, 0x0b, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x17, 0x0a, 0x05, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x06, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x24, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x30, 0x0a,
	0x09, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x21, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x92, 0x02, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x70, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x41, 0x74, 0x22, 0x48, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x47, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x41, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x64,
	0x64, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x75,
	0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x79,
	0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x9c, 0x02, 0x0a, 0x0f, 0x56, 0x69, 0x73, 0x69, 0x74, 0x4c, 0x6f, 0x67,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x70, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x2d, 0x0a, 0x0e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4e, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xb3, 0x01, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x69, 0x73, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f,
	0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x56,
	0x69, 0x73, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xe0, 0x03, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x70, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x69, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a,
	0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x91, 0x03, 0x0a, 0x12, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x70, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x5f, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x69,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x7c, 0x0a, 0x17,
	0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x64, 0x0a, 0x18, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0xe4, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x4e, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xa3, 0x02, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x4d, 0x64, 0x35, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb4, 0x01,
	0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x5e, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79,
	0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x32, 0xbd, 0x07, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x52,
	0x70, 0x63, 0x12, 0x3e, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x73,
	0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x4c,
	0x6f, 0x67, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x64, 0x64, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x11,
	0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x79,
	0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x79,
	0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0b,
	0x41, 0x64, 0x64, 0x56, 0x69, 0x73, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x19, 0x2e, 0x73, 0x79,
	0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x4c, 0x6f, 0x67,
	0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x56, 0x69, 0x73, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x12,
	0x11, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x73,
	0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x69, 0x73,
	0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73,
	0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x69, 0x73,
	0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67,
	0x12, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x11, 0x2e, 0x73,
	0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e,
	0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x4e, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x3b, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x4c, 0x6f, 0x67, 0x12, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x11,
	0x46, 0x69, 0x6e, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_syslog_proto_rawDescOnce sync.Once
	file_syslog_proto_rawDescData = file_syslog_proto_rawDesc
)

func file_syslog_proto_rawDescGZIP() []byte {
	file_syslog_proto_rawDescOnce.Do(func() {
		file_syslog_proto_rawDescData = protoimpl.X.CompressGZIP(file_syslog_proto_rawDescData)
	})
	return file_syslog_proto_rawDescData
}

var file_syslog_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_syslog_proto_goTypes = []any{
	(*EmptyReq)(nil),                 // 0: syslogrpc.EmptyReq
	(*EmptyResp)(nil),                // 1: syslogrpc.EmptyResp
	(*IdReq)(nil),                    // 2: syslogrpc.IdReq
	(*IdsReq)(nil),                   // 3: syslogrpc.IdsReq
	(*UserIdReq)(nil),                // 4: syslogrpc.UserIdReq
	(*BatchResp)(nil),                // 5: syslogrpc.BatchResp
	(*CountResp)(nil),                // 6: syslogrpc.CountResp
	(*LoginLogDetails)(nil),          // 7: syslogrpc.LoginLogDetails
	(*LoginLogNewReq)(nil),           // 8: syslogrpc.LoginLogNewReq
	(*AddLogoutLogReq)(nil),          // 9: syslogrpc.AddLogoutLogReq
	(*AddLogoutLogResp)(nil),         // 10: syslogrpc.AddLogoutLogResp
	(*FindLoginLogListReq)(nil),      // 11: syslogrpc.FindLoginLogListReq
	(*FindLoginLogListResp)(nil),     // 12: syslogrpc.FindLoginLogListResp
	(*VisitLogDetails)(nil),          // 13: syslogrpc.VisitLogDetails
	(*VisitLogNewReq)(nil),           // 14: syslogrpc.VisitLogNewReq
	(*FindVisitLogListReq)(nil),      // 15: syslogrpc.FindVisitLogListReq
	(*FindVisitLogListResp)(nil),     // 16: syslogrpc.FindVisitLogListResp
	(*OperationLogDetails)(nil),      // 17: syslogrpc.OperationLogDetails
	(*OperationLogNewReq)(nil),       // 18: syslogrpc.OperationLogNewReq
	(*FindOperationLogListReq)(nil),  // 19: syslogrpc.FindOperationLogListReq
	(*FindOperationLogListResp)(nil), // 20: syslogrpc.FindOperationLogListResp
	(*UploadLogNewReq)(nil),          // 21: syslogrpc.UploadLogNewReq
	(*UploadLogDetails)(nil),         // 22: syslogrpc.UploadLogDetails
	(*FindUploadLogListReq)(nil),     // 23: syslogrpc.FindUploadLogListReq
	(*FindUploadLogListResp)(nil),    // 24: syslogrpc.FindUploadLogListResp
}
var file_syslog_proto_depIdxs = []int32{
	7,  // 0: syslogrpc.FindLoginLogListResp.list:type_name -> syslogrpc.LoginLogDetails
	13, // 1: syslogrpc.FindVisitLogListResp.list:type_name -> syslogrpc.VisitLogDetails
	17, // 2: syslogrpc.FindOperationLogListResp.list:type_name -> syslogrpc.OperationLogDetails
	22, // 3: syslogrpc.FindUploadLogListResp.list:type_name -> syslogrpc.UploadLogDetails
	8,  // 4: syslogrpc.SyslogRpc.AddLoginLog:input_type -> syslogrpc.LoginLogNewReq
	9,  // 5: syslogrpc.SyslogRpc.AddLogoutLog:input_type -> syslogrpc.AddLogoutLogReq
	3,  // 6: syslogrpc.SyslogRpc.DeletesLoginLog:input_type -> syslogrpc.IdsReq
	11, // 7: syslogrpc.SyslogRpc.FindLoginLogList:input_type -> syslogrpc.FindLoginLogListReq
	14, // 8: syslogrpc.SyslogRpc.AddVisitLog:input_type -> syslogrpc.VisitLogNewReq
	3,  // 9: syslogrpc.SyslogRpc.DeletesVisitLog:input_type -> syslogrpc.IdsReq
	15, // 10: syslogrpc.SyslogRpc.FindVisitLogList:input_type -> syslogrpc.FindVisitLogListReq
	18, // 11: syslogrpc.SyslogRpc.AddOperationLog:input_type -> syslogrpc.OperationLogNewReq
	3,  // 12: syslogrpc.SyslogRpc.DeletesOperationLog:input_type -> syslogrpc.IdsReq
	19, // 13: syslogrpc.SyslogRpc.FindOperationLogList:input_type -> syslogrpc.FindOperationLogListReq
	21, // 14: syslogrpc.SyslogRpc.AddUploadLog:input_type -> syslogrpc.UploadLogNewReq
	3,  // 15: syslogrpc.SyslogRpc.DeletesUploadLog:input_type -> syslogrpc.IdsReq
	23, // 16: syslogrpc.SyslogRpc.FindUploadLogList:input_type -> syslogrpc.FindUploadLogListReq
	1,  // 17: syslogrpc.SyslogRpc.AddLoginLog:output_type -> syslogrpc.EmptyResp
	10, // 18: syslogrpc.SyslogRpc.AddLogoutLog:output_type -> syslogrpc.AddLogoutLogResp
	5,  // 19: syslogrpc.SyslogRpc.DeletesLoginLog:output_type -> syslogrpc.BatchResp
	12, // 20: syslogrpc.SyslogRpc.FindLoginLogList:output_type -> syslogrpc.FindLoginLogListResp
	1,  // 21: syslogrpc.SyslogRpc.AddVisitLog:output_type -> syslogrpc.EmptyResp
	5,  // 22: syslogrpc.SyslogRpc.DeletesVisitLog:output_type -> syslogrpc.BatchResp
	16, // 23: syslogrpc.SyslogRpc.FindVisitLogList:output_type -> syslogrpc.FindVisitLogListResp
	1,  // 24: syslogrpc.SyslogRpc.AddOperationLog:output_type -> syslogrpc.EmptyResp
	5,  // 25: syslogrpc.SyslogRpc.DeletesOperationLog:output_type -> syslogrpc.BatchResp
	20, // 26: syslogrpc.SyslogRpc.FindOperationLogList:output_type -> syslogrpc.FindOperationLogListResp
	22, // 27: syslogrpc.SyslogRpc.AddUploadLog:output_type -> syslogrpc.UploadLogDetails
	5,  // 28: syslogrpc.SyslogRpc.DeletesUploadLog:output_type -> syslogrpc.BatchResp
	24, // 29: syslogrpc.SyslogRpc.FindUploadLogList:output_type -> syslogrpc.FindUploadLogListResp
	17, // [17:30] is the sub-list for method output_type
	4,  // [4:17] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_syslog_proto_init() }
func file_syslog_proto_init() {
	if File_syslog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_syslog_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*EmptyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*EmptyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*IdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*IdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*BatchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*LoginLogDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*LoginLogNewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AddLogoutLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AddLogoutLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*FindLoginLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*FindLoginLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*VisitLogDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*VisitLogNewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*FindVisitLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*FindVisitLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*OperationLogDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*OperationLogNewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*FindOperationLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*FindOperationLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*UploadLogNewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*UploadLogDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*FindUploadLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_syslog_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*FindUploadLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_syslog_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_syslog_proto_goTypes,
		DependencyIndexes: file_syslog_proto_depIdxs,
		MessageInfos:      file_syslog_proto_msgTypes,
	}.Build()
	File_syslog_proto = out.File
	file_syslog_proto_rawDesc = nil
	file_syslog_proto_goTypes = nil
	file_syslog_proto_depIdxs = nil
}
