version: "3"

# 设置mysql，redis持久化保存
#volumes:
#  mysql:
#  redis:

services:

  blog-rpc:
    build:
      context: ./
      dockerfile: Dockerfile-blog-rpc
    env_file:
      - .env      # 应用配置
    image: ghcr.io/ve-weiyi/blog-rpc:${IMAGE_TAG}  # 设置新的镜像名称和标签
    container_name: blog-rpc
    restart: always
    ports:
      - "9999:9999"
    volumes:
      - ./runtime:/app/runtime
    command: [
      "./blog",
      "-nacos-ip", "${NACOS_IP}",
      "-nacos-port", "${NACOS_PORT}",
      "-nacos-username", "${NACOS_USERNAME}",
      "-nacos-password", "${NACOS_PASSWORD}",
      "-nacos-namespace", "${NACOS_NAMESPACE}",
      "-nacos-group", "${NACOS_GROUP}",
      "-nacos-data-id", "blog-rpc"
    ]

  blog-api:
    build:
      context: ./
      dockerfile: Dockerfile-blog-api
    env_file:
      - .env      # 应用配置
    image: ghcr.io/ve-weiyi/blog-api:${IMAGE_TAG}  # 设置新的镜像名称和标签
    container_name: blog-api
    restart: always
    ports:
      - "6060:6060"
      - "9090:9090"
    volumes:
      - ./runtime:/app/runtime
    depends_on:
      - blog-rpc
    command: [
      "./blog",
      "-nacos-ip", "${NACOS_IP}",
      "-nacos-port", "${NACOS_PORT}",
      "-nacos-username", "${NACOS_USERNAME}",
      "-nacos-password", "${NACOS_PASSWORD}",
      "-nacos-namespace", "${NACOS_NAMESPACE}",
      "-nacos-group", "${NACOS_GROUP}",
      "-nacos-data-id", "blog-api"
    ]

  admin-api:
    build:
      context: ./
      dockerfile: Dockerfile-admin-api
    env_file:
      - .env      # 应用配置
    image: ghcr.io/ve-weiyi/admin-api:${IMAGE_TAG}  # 设置新的镜像名称和标签
    container_name: admin-api
    restart: always
    ports:
      - "6061:6061"
      - "9091:9091"
    volumes:
      - ./runtime:/app/runtime
    depends_on:
      - blog-rpc
    command: [
      "./admin",
      "-nacos-ip", "${NACOS_IP}",
      "-nacos-port", "${NACOS_PORT}",
      "-nacos-username", "${NACOS_USERNAME}",
      "-nacos-password", "${NACOS_PASSWORD}",
      "-nacos-namespace", "${NACOS_NAMESPACE}",
      "-nacos-group", "${NACOS_GROUP}",
      "-nacos-data-id", "admin-api"
    ]

#使用外部网络。不同dokcer通讯
#  service:
#    networks:
#      - blog-network
#docker network create blog-network
#networks:
#  blog-network:
#    external: true
