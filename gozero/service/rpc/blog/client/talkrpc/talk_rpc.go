// Code generated by goctl. DO NOT EDIT.
// Source: talk.proto

package talkrpc

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/gozero/service/rpc/blog/internal/pb/talkrpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BatchResp        = talkrpc.BatchResp
	CountResp        = talkrpc.CountResp
	EmptyReq         = talkrpc.EmptyReq
	EmptyResp        = talkrpc.EmptyResp
	FindLikeTalkResp = talkrpc.FindLikeTalkResp
	FindTalkListReq  = talkrpc.FindTalkListReq
	FindTalkListResp = talkrpc.FindTalkListResp
	IdReq            = talkrpc.IdReq
	IdsReq           = talkrpc.IdsReq
	TalkDetails      = talkrpc.TalkDetails
	TalkNewReq       = talkrpc.TalkNewReq
	UserIdReq        = talkrpc.UserIdReq

	TalkRpc interface {
		// 创建说说
		AddTalk(ctx context.Context, in *TalkNewReq, opts ...grpc.CallOption) (*TalkDetails, error)
		// 更新说说
		UpdateTalk(ctx context.Context, in *TalkNewReq, opts ...grpc.CallOption) (*TalkDetails, error)
		// 删除说说
		DeleteTalk(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error)
		// 查询说说
		GetTalk(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*TalkDetails, error)
		// 查询说说列表
		FindTalkList(ctx context.Context, in *FindTalkListReq, opts ...grpc.CallOption) (*FindTalkListResp, error)
		// 点赞说说
		LikeTalk(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*EmptyResp, error)
		// 用户点赞的说说
		FindUserLikeTalk(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*FindLikeTalkResp, error)
	}

	defaultTalkRpc struct {
		cli zrpc.Client
	}
)

func NewTalkRpc(cli zrpc.Client) TalkRpc {
	return &defaultTalkRpc{
		cli: cli,
	}
}

// 创建说说
func (m *defaultTalkRpc) AddTalk(ctx context.Context, in *TalkNewReq, opts ...grpc.CallOption) (*TalkDetails, error) {
	client := talkrpc.NewTalkRpcClient(m.cli.Conn())
	return client.AddTalk(ctx, in, opts...)
}

// 更新说说
func (m *defaultTalkRpc) UpdateTalk(ctx context.Context, in *TalkNewReq, opts ...grpc.CallOption) (*TalkDetails, error) {
	client := talkrpc.NewTalkRpcClient(m.cli.Conn())
	return client.UpdateTalk(ctx, in, opts...)
}

// 删除说说
func (m *defaultTalkRpc) DeleteTalk(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error) {
	client := talkrpc.NewTalkRpcClient(m.cli.Conn())
	return client.DeleteTalk(ctx, in, opts...)
}

// 查询说说
func (m *defaultTalkRpc) GetTalk(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*TalkDetails, error) {
	client := talkrpc.NewTalkRpcClient(m.cli.Conn())
	return client.GetTalk(ctx, in, opts...)
}

// 查询说说列表
func (m *defaultTalkRpc) FindTalkList(ctx context.Context, in *FindTalkListReq, opts ...grpc.CallOption) (*FindTalkListResp, error) {
	client := talkrpc.NewTalkRpcClient(m.cli.Conn())
	return client.FindTalkList(ctx, in, opts...)
}

// 点赞说说
func (m *defaultTalkRpc) LikeTalk(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*EmptyResp, error) {
	client := talkrpc.NewTalkRpcClient(m.cli.Conn())
	return client.LikeTalk(ctx, in, opts...)
}

// 用户点赞的说说
func (m *defaultTalkRpc) FindUserLikeTalk(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*FindLikeTalkResp, error) {
	client := talkrpc.NewTalkRpcClient(m.cli.Conn())
	return client.FindUserLikeTalk(ctx, in, opts...)
}
