// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: message.proto

package messagerpc

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/gozero/service/rpc/blog/internal/pb/messagerpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AnalysisMessageResp        = messagerpc.AnalysisMessageResp
	BatchResp                  = messagerpc.BatchResp
	ChatDetails                = messagerpc.ChatDetails
	ChatNewReq                 = messagerpc.ChatNewReq
	CommentDetails             = messagerpc.CommentDetails
	CommentNewReq              = messagerpc.CommentNewReq
	EmptyReq                   = messagerpc.EmptyReq
	EmptyResp                  = messagerpc.EmptyResp
	FindChatListReq            = messagerpc.FindChatListReq
	FindChatListResp           = messagerpc.FindChatListResp
	FindCommentListReq         = messagerpc.FindCommentListReq
	FindCommentListResp        = messagerpc.FindCommentListResp
	FindCommentReplyListReq    = messagerpc.FindCommentReplyListReq
	FindCommentReplyListResp   = messagerpc.FindCommentReplyListResp
	FindLikeCommentResp        = messagerpc.FindLikeCommentResp
	FindRemarkListReq          = messagerpc.FindRemarkListReq
	FindRemarkListResp         = messagerpc.FindRemarkListResp
	FindTopicCommentCountsReq  = messagerpc.FindTopicCommentCountsReq
	FindTopicCommentCountsResp = messagerpc.FindTopicCommentCountsResp
	IdReq                      = messagerpc.IdReq
	IdsReq                     = messagerpc.IdsReq
	RemarkDetails              = messagerpc.RemarkDetails
	RemarkNewReq               = messagerpc.RemarkNewReq
	RemarkUpdateReq            = messagerpc.RemarkUpdateReq
	UpdateCommentContentReq    = messagerpc.UpdateCommentContentReq
	UpdateCommentReviewReq     = messagerpc.UpdateCommentReviewReq
	UpdateRemarkReviewReq      = messagerpc.UpdateRemarkReviewReq
	UserIdReq                  = messagerpc.UserIdReq

	MessageRpc interface {
		// 消息数据分析
		AnalysisMessage(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*AnalysisMessageResp, error)
		// 创建聊天记录
		AddChat(ctx context.Context, in *ChatNewReq, opts ...grpc.CallOption) (*ChatDetails, error)
		// 更新聊天记录
		UpdateChat(ctx context.Context, in *ChatNewReq, opts ...grpc.CallOption) (*ChatDetails, error)
		// 删除聊天记录
		DeletesChat(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error)
		// 查询聊天记录
		GetChat(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*ChatDetails, error)
		// 查询聊天记录列表
		FindChatList(ctx context.Context, in *FindChatListReq, opts ...grpc.CallOption) (*FindChatListResp, error)
		// 创建留言
		AddRemark(ctx context.Context, in *RemarkNewReq, opts ...grpc.CallOption) (*RemarkDetails, error)
		// 更新留言
		UpdateRemark(ctx context.Context, in *RemarkUpdateReq, opts ...grpc.CallOption) (*RemarkDetails, error)
		// 删除留言
		DeletesRemark(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error)
		// 查询留言
		GetRemark(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*RemarkDetails, error)
		// 查询留言列表
		FindRemarkList(ctx context.Context, in *FindRemarkListReq, opts ...grpc.CallOption) (*FindRemarkListResp, error)
		// 更新留言审核状态
		UpdateRemarkReview(ctx context.Context, in *UpdateRemarkReviewReq, opts ...grpc.CallOption) (*BatchResp, error)
		// 创建评论
		AddComment(ctx context.Context, in *CommentNewReq, opts ...grpc.CallOption) (*CommentDetails, error)
		// 删除评论
		DeleteComment(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error)
		// 查询评论
		GetComment(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*CommentDetails, error)
		// 查询评论列表
		FindCommentList(ctx context.Context, in *FindCommentListReq, opts ...grpc.CallOption) (*FindCommentListResp, error)
		// 查询评论回复列表
		FindCommentReplyList(ctx context.Context, in *FindCommentReplyListReq, opts ...grpc.CallOption) (*FindCommentReplyListResp, error)
		// 查询评论回复数量
		FindTopicCommentCounts(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*FindTopicCommentCountsResp, error)
		// 更新评论审核状态
		UpdateCommentReview(ctx context.Context, in *UpdateCommentReviewReq, opts ...grpc.CallOption) (*BatchResp, error)
		// 更新评论
		UpdateCommentContent(ctx context.Context, in *UpdateCommentContentReq, opts ...grpc.CallOption) (*CommentDetails, error)
		// 点赞评论
		LikeComment(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*EmptyResp, error)
		// 用户点赞的评论
		FindUserLikeComment(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*FindLikeCommentResp, error)
	}

	defaultMessageRpc struct {
		cli zrpc.Client
	}
)

func NewMessageRpc(cli zrpc.Client) MessageRpc {
	return &defaultMessageRpc{
		cli: cli,
	}
}

// 消息数据分析
func (m *defaultMessageRpc) AnalysisMessage(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*AnalysisMessageResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.AnalysisMessage(ctx, in, opts...)
}

// 创建聊天记录
func (m *defaultMessageRpc) AddChat(ctx context.Context, in *ChatNewReq, opts ...grpc.CallOption) (*ChatDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.AddChat(ctx, in, opts...)
}

// 更新聊天记录
func (m *defaultMessageRpc) UpdateChat(ctx context.Context, in *ChatNewReq, opts ...grpc.CallOption) (*ChatDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.UpdateChat(ctx, in, opts...)
}

// 删除聊天记录
func (m *defaultMessageRpc) DeletesChat(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.DeletesChat(ctx, in, opts...)
}

// 查询聊天记录
func (m *defaultMessageRpc) GetChat(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*ChatDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.GetChat(ctx, in, opts...)
}

// 查询聊天记录列表
func (m *defaultMessageRpc) FindChatList(ctx context.Context, in *FindChatListReq, opts ...grpc.CallOption) (*FindChatListResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.FindChatList(ctx, in, opts...)
}

// 创建留言
func (m *defaultMessageRpc) AddRemark(ctx context.Context, in *RemarkNewReq, opts ...grpc.CallOption) (*RemarkDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.AddRemark(ctx, in, opts...)
}

// 更新留言
func (m *defaultMessageRpc) UpdateRemark(ctx context.Context, in *RemarkUpdateReq, opts ...grpc.CallOption) (*RemarkDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.UpdateRemark(ctx, in, opts...)
}

// 删除留言
func (m *defaultMessageRpc) DeletesRemark(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.DeletesRemark(ctx, in, opts...)
}

// 查询留言
func (m *defaultMessageRpc) GetRemark(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*RemarkDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.GetRemark(ctx, in, opts...)
}

// 查询留言列表
func (m *defaultMessageRpc) FindRemarkList(ctx context.Context, in *FindRemarkListReq, opts ...grpc.CallOption) (*FindRemarkListResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.FindRemarkList(ctx, in, opts...)
}

// 更新留言审核状态
func (m *defaultMessageRpc) UpdateRemarkReview(ctx context.Context, in *UpdateRemarkReviewReq, opts ...grpc.CallOption) (*BatchResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.UpdateRemarkReview(ctx, in, opts...)
}

// 创建评论
func (m *defaultMessageRpc) AddComment(ctx context.Context, in *CommentNewReq, opts ...grpc.CallOption) (*CommentDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.AddComment(ctx, in, opts...)
}

// 删除评论
func (m *defaultMessageRpc) DeleteComment(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BatchResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.DeleteComment(ctx, in, opts...)
}

// 查询评论
func (m *defaultMessageRpc) GetComment(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*CommentDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.GetComment(ctx, in, opts...)
}

// 查询评论列表
func (m *defaultMessageRpc) FindCommentList(ctx context.Context, in *FindCommentListReq, opts ...grpc.CallOption) (*FindCommentListResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.FindCommentList(ctx, in, opts...)
}

// 查询评论回复列表
func (m *defaultMessageRpc) FindCommentReplyList(ctx context.Context, in *FindCommentReplyListReq, opts ...grpc.CallOption) (*FindCommentReplyListResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.FindCommentReplyList(ctx, in, opts...)
}

// 查询评论回复数量
func (m *defaultMessageRpc) FindTopicCommentCounts(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*FindTopicCommentCountsResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.FindTopicCommentCounts(ctx, in, opts...)
}

// 更新评论审核状态
func (m *defaultMessageRpc) UpdateCommentReview(ctx context.Context, in *UpdateCommentReviewReq, opts ...grpc.CallOption) (*BatchResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.UpdateCommentReview(ctx, in, opts...)
}

// 更新评论
func (m *defaultMessageRpc) UpdateCommentContent(ctx context.Context, in *UpdateCommentContentReq, opts ...grpc.CallOption) (*CommentDetails, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.UpdateCommentContent(ctx, in, opts...)
}

// 点赞评论
func (m *defaultMessageRpc) LikeComment(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*EmptyResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.LikeComment(ctx, in, opts...)
}

// 用户点赞的评论
func (m *defaultMessageRpc) FindUserLikeComment(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*FindLikeCommentResp, error) {
	client := messagerpc.NewMessageRpcClient(m.cli.Conn())
	return client.FindUserLikeComment(ctx, in, opts...)
}
