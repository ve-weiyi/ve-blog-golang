// Code generated by goctl. DO NOT EDIT.
// Source: account.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/gozero/service/rpc/blog/internal/logic/accountrpc"
	"github.com/ve-weiyi/ve-blog-golang/gozero/service/rpc/blog/internal/pb/accountrpc"
	"github.com/ve-weiyi/ve-blog-golang/gozero/service/rpc/blog/internal/svc"
)

type AccountRpcServer struct {
	svcCtx *svc.ServiceContext
	accountrpc.UnimplementedAccountRpcServer
}

func NewAccountRpcServer(svcCtx *svc.ServiceContext) *AccountRpcServer {
	return &AccountRpcServer{
		svcCtx: svcCtx,
	}
}

// 登录
func (s *AccountRpcServer) Login(ctx context.Context, in *accountrpc.LoginReq) (*accountrpc.LoginResp, error) {
	l := accountrpclogic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

// 登出
func (s *AccountRpcServer) Logout(ctx context.Context, in *accountrpc.LogoutReq) (*accountrpc.LogoutResp, error) {
	l := accountrpclogic.NewLogoutLogic(ctx, s.svcCtx)
	return l.Logout(in)
}

// 注销
func (s *AccountRpcServer) Logoff(ctx context.Context, in *accountrpc.LogoffReq) (*accountrpc.EmptyResp, error) {
	l := accountrpclogic.NewLogoffLogic(ctx, s.svcCtx)
	return l.Logoff(in)
}

// 注册
func (s *AccountRpcServer) Register(ctx context.Context, in *accountrpc.RegisterReq) (*accountrpc.LoginResp, error) {
	l := accountrpclogic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

// 重置密码
func (s *AccountRpcServer) ResetPassword(ctx context.Context, in *accountrpc.ResetPasswordReq) (*accountrpc.EmptyResp, error) {
	l := accountrpclogic.NewResetPasswordLogic(ctx, s.svcCtx)
	return l.ResetPassword(in)
}

// 修改用户邮箱
func (s *AccountRpcServer) BindUserEmail(ctx context.Context, in *accountrpc.BindUserEmailReq) (*accountrpc.EmptyResp, error) {
	l := accountrpclogic.NewBindUserEmailLogic(ctx, s.svcCtx)
	return l.BindUserEmail(in)
}

// 发送注册邮件
func (s *AccountRpcServer) SendRegisterEmail(ctx context.Context, in *accountrpc.UserEmailReq) (*accountrpc.EmptyResp, error) {
	l := accountrpclogic.NewSendRegisterEmailLogic(ctx, s.svcCtx)
	return l.SendRegisterEmail(in)
}

// 发送重置密码邮件
func (s *AccountRpcServer) SendResetPasswordEmail(ctx context.Context, in *accountrpc.UserEmailReq) (*accountrpc.EmptyResp, error) {
	l := accountrpclogic.NewSendResetPasswordEmailLogic(ctx, s.svcCtx)
	return l.SendResetPasswordEmail(in)
}

// 发送绑定邮箱邮件
func (s *AccountRpcServer) SendBindEmail(ctx context.Context, in *accountrpc.UserEmailReq) (*accountrpc.EmptyResp, error) {
	l := accountrpclogic.NewSendBindEmailLogic(ctx, s.svcCtx)
	return l.SendBindEmail(in)
}

// 第三方登录
func (s *AccountRpcServer) OauthLogin(ctx context.Context, in *accountrpc.OauthLoginReq) (*accountrpc.LoginResp, error) {
	l := accountrpclogic.NewOauthLoginLogic(ctx, s.svcCtx)
	return l.OauthLogin(in)
}

// 获取第三方登录授权地址
func (s *AccountRpcServer) GetOauthAuthorizeUrl(ctx context.Context, in *accountrpc.OauthLoginReq) (*accountrpc.OauthLoginUrlResp, error) {
	l := accountrpclogic.NewGetOauthAuthorizeUrlLogic(ctx, s.svcCtx)
	return l.GetOauthAuthorizeUrl(in)
}

// 获取用户信息
func (s *AccountRpcServer) GetUserInfo(ctx context.Context, in *accountrpc.UserIdReq) (*accountrpc.UserInfoResp, error) {
	l := accountrpclogic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

// 修改用户信息
func (s *AccountRpcServer) UpdateUserInfo(ctx context.Context, in *accountrpc.UpdateUserInfoReq) (*accountrpc.EmptyResp, error) {
	l := accountrpclogic.NewUpdateUserInfoLogic(ctx, s.svcCtx)
	return l.UpdateUserInfo(in)
}

// 修改用户状态
func (s *AccountRpcServer) UpdateUserStatus(ctx context.Context, in *accountrpc.UpdateUserStatusReq) (*accountrpc.EmptyResp, error) {
	l := accountrpclogic.NewUpdateUserStatusLogic(ctx, s.svcCtx)
	return l.UpdateUserStatus(in)
}

// 查找用户列表
func (s *AccountRpcServer) FindUserList(ctx context.Context, in *accountrpc.FindUserListReq) (*accountrpc.FindUserListResp, error) {
	l := accountrpclogic.NewFindUserListLogic(ctx, s.svcCtx)
	return l.FindUserList(in)
}

// 查找在线用户列表
func (s *AccountRpcServer) FindUserOnlineList(ctx context.Context, in *accountrpc.FindUserListReq) (*accountrpc.FindUserInfoListResp, error) {
	l := accountrpclogic.NewFindUserOnlineListLogic(ctx, s.svcCtx)
	return l.FindUserOnlineList(in)
}

// 查找用户信息列表
func (s *AccountRpcServer) FindUserInfoList(ctx context.Context, in *accountrpc.FindUserListReq) (*accountrpc.FindUserInfoListResp, error) {
	l := accountrpclogic.NewFindUserInfoListLogic(ctx, s.svcCtx)
	return l.FindUserInfoList(in)
}

// 查询用户登录历史
func (s *AccountRpcServer) FindUserLoginHistoryList(ctx context.Context, in *accountrpc.FindLoginHistoryListReq) (*accountrpc.FindLoginHistoryListResp, error) {
	l := accountrpclogic.NewFindUserLoginHistoryListLogic(ctx, s.svcCtx)
	return l.FindUserLoginHistoryList(in)
}

// 查询用户分布区域
func (s *AccountRpcServer) GetUserAreasAnalysis(ctx context.Context, in *accountrpc.EmptyReq) (*accountrpc.GetUserAreasAnalysisResp, error) {
	l := accountrpclogic.NewGetUserAreasAnalysisLogic(ctx, s.svcCtx)
	return l.GetUserAreasAnalysis(in)
}
