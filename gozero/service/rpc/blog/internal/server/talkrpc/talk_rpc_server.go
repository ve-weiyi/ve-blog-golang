// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: talk.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/gozero/service/rpc/blog/internal/logic/talkrpc"
	"github.com/ve-weiyi/ve-blog-golang/gozero/service/rpc/blog/internal/pb/talkrpc"
	"github.com/ve-weiyi/ve-blog-golang/gozero/service/rpc/blog/internal/svc"
)

type TalkRpcServer struct {
	svcCtx *svc.ServiceContext
	talkrpc.UnimplementedTalkRpcServer
}

func NewTalkRpcServer(svcCtx *svc.ServiceContext) *TalkRpcServer {
	return &TalkRpcServer{
		svcCtx: svcCtx,
	}
}

// 创建说说
func (s *TalkRpcServer) AddTalk(ctx context.Context, in *talkrpc.TalkNewReq) (*talkrpc.TalkDetails, error) {
	l := talkrpclogic.NewAddTalkLogic(ctx, s.svcCtx)
	return l.AddTalk(in)
}

// 更新说说
func (s *TalkRpcServer) UpdateTalk(ctx context.Context, in *talkrpc.TalkNewReq) (*talkrpc.TalkDetails, error) {
	l := talkrpclogic.NewUpdateTalkLogic(ctx, s.svcCtx)
	return l.UpdateTalk(in)
}

// 删除说说
func (s *TalkRpcServer) DeleteTalk(ctx context.Context, in *talkrpc.IdsReq) (*talkrpc.BatchResp, error) {
	l := talkrpclogic.NewDeleteTalkLogic(ctx, s.svcCtx)
	return l.DeleteTalk(in)
}

// 查询说说
func (s *TalkRpcServer) GetTalk(ctx context.Context, in *talkrpc.IdReq) (*talkrpc.TalkDetails, error) {
	l := talkrpclogic.NewGetTalkLogic(ctx, s.svcCtx)
	return l.GetTalk(in)
}

// 查询说说列表
func (s *TalkRpcServer) FindTalkList(ctx context.Context, in *talkrpc.FindTalkListReq) (*talkrpc.FindTalkListResp, error) {
	l := talkrpclogic.NewFindTalkListLogic(ctx, s.svcCtx)
	return l.FindTalkList(in)
}

// 点赞说说
func (s *TalkRpcServer) LikeTalk(ctx context.Context, in *talkrpc.IdReq) (*talkrpc.EmptyResp, error) {
	l := talkrpclogic.NewLikeTalkLogic(ctx, s.svcCtx)
	return l.LikeTalk(in)
}

// 用户点赞的说说
func (s *TalkRpcServer) FindUserLikeTalk(ctx context.Context, in *talkrpc.UserIdReq) (*talkrpc.FindLikeTalkResp, error) {
	l := talkrpclogic.NewFindUserLikeTalkLogic(ctx, s.svcCtx)
	return l.FindUserLikeTalk(in)
}
