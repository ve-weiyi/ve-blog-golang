// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/gozero/service/rpc/blog/internal/logic/commentrpc"
	"github.com/ve-weiyi/ve-blog-golang/gozero/service/rpc/blog/internal/pb/commentrpc"
	"github.com/ve-weiyi/ve-blog-golang/gozero/service/rpc/blog/internal/svc"
)

type CommentRpcServer struct {
	svcCtx *svc.ServiceContext
	commentrpc.UnimplementedCommentRpcServer
}

func NewCommentRpcServer(svcCtx *svc.ServiceContext) *CommentRpcServer {
	return &CommentRpcServer{
		svcCtx: svcCtx,
	}
}

// 创建评论
func (s *CommentRpcServer) AddComment(ctx context.Context, in *commentrpc.CommentNewReq) (*commentrpc.CommentDetails, error) {
	l := commentrpclogic.NewAddCommentLogic(ctx, s.svcCtx)
	return l.AddComment(in)
}

// 删除评论
func (s *CommentRpcServer) DeleteComment(ctx context.Context, in *commentrpc.IdsReq) (*commentrpc.BatchResp, error) {
	l := commentrpclogic.NewDeleteCommentLogic(ctx, s.svcCtx)
	return l.DeleteComment(in)
}

// 查询评论
func (s *CommentRpcServer) GetComment(ctx context.Context, in *commentrpc.IdReq) (*commentrpc.CommentDetails, error) {
	l := commentrpclogic.NewGetCommentLogic(ctx, s.svcCtx)
	return l.GetComment(in)
}

// 查询评论列表
func (s *CommentRpcServer) FindCommentList(ctx context.Context, in *commentrpc.FindCommentListReq) (*commentrpc.FindCommentListResp, error) {
	l := commentrpclogic.NewFindCommentListLogic(ctx, s.svcCtx)
	return l.FindCommentList(in)
}

// 查询评论回复列表
func (s *CommentRpcServer) FindCommentReplyList(ctx context.Context, in *commentrpc.FindCommentReplyListReq) (*commentrpc.FindCommentReplyListResp, error) {
	l := commentrpclogic.NewFindCommentReplyListLogic(ctx, s.svcCtx)
	return l.FindCommentReplyList(in)
}

// 查询评论回复数量
func (s *CommentRpcServer) FindTopicCommentCounts(ctx context.Context, in *commentrpc.IdsReq) (*commentrpc.FindTopicCommentCountsResp, error) {
	l := commentrpclogic.NewFindTopicCommentCountsLogic(ctx, s.svcCtx)
	return l.FindTopicCommentCounts(in)
}

// 更新评论审核状态
func (s *CommentRpcServer) UpdateCommentReview(ctx context.Context, in *commentrpc.UpdateCommentReviewReq) (*commentrpc.BatchResp, error) {
	l := commentrpclogic.NewUpdateCommentReviewLogic(ctx, s.svcCtx)
	return l.UpdateCommentReview(in)
}

// 更新评论
func (s *CommentRpcServer) UpdateCommentContent(ctx context.Context, in *commentrpc.UpdateCommentContentReq) (*commentrpc.CommentDetails, error) {
	l := commentrpclogic.NewUpdateCommentContentLogic(ctx, s.svcCtx)
	return l.UpdateCommentContent(in)
}

// 点赞评论
func (s *CommentRpcServer) LikeComment(ctx context.Context, in *commentrpc.IdReq) (*commentrpc.EmptyResp, error) {
	l := commentrpclogic.NewLikeCommentLogic(ctx, s.svcCtx)
	return l.LikeComment(in)
}

// 用户点赞的评论
func (s *CommentRpcServer) FindUserLikeComment(ctx context.Context, in *commentrpc.UserIdReq) (*commentrpc.FindLikeCommentResp, error) {
	l := commentrpclogic.NewFindUserLikeCommentLogic(ctx, s.svcCtx)
	return l.FindUserLikeComment(in)
}
