// 声明 proto 语法版本，固定值
syntax = "proto3";

// proto 包名
package pagerpc;

// 生成 golang 代码后的包名
option go_package = "./pagerpc";

message EmptyReq {
}

message EmptyResp {
}

message IdReq {
  int64 id = 1;
}

message IdsReq {
  repeated int64 ids = 1;
}

message UserIdReq {
  string user_id = 1;
}

message BatchResp {
  int64 success_count = 1;
}

message CountResp {
  int64 count = 1;
}

/************** blog 页面管理 **************/
message PageNewReq {
  int64 id = 1;// 页面id
  string page_name = 2;// 页面名
  string page_label = 3;// 页面标签
  string page_cover = 4;// 页面封面
  int64 is_carousel = 5;// 是否轮播
  repeated string carousel_covers = 6;// 轮播列表
}

message PageDetails {
  int64 id = 1;// 页面id
  string page_name = 2;// 页面名
  string page_label = 3;// 页面标签
  string page_cover = 4;// 页面封面
  int64 is_carousel = 5;// 是否轮播
  repeated string carousel_covers = 6;// 轮播列表
  int64 created_at = 7;// 创建时间
  int64 updated_at = 8;// 更新时间
}

message FindPageListReq {
  int64 page = 1;
  int64 page_size = 2;
  repeated string sorts = 3; // 排序
}

message FindPageListResp {
  repeated PageDetails list = 1;
  int64 total = 2;
}

service PageRpc {

  // 创建页面
  rpc AddPage(PageNewReq) returns(PageDetails);
  // 更新页面
  rpc UpdatePage(PageNewReq) returns(PageDetails);
  // 删除页面
  rpc DeletePage(IdsReq) returns(BatchResp);
  // 查询页面列表
  rpc FindPageList(FindPageListReq) returns(FindPageListResp);
}
