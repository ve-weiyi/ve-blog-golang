// Code generated by goctl. DO NOT EDIT.
// Source: account.proto

package accountrpc

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/server/zero/rpc/pb/account"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BatchResult       = account.BatchResult
	EmptyReq          = account.EmptyReq
	EmptyResp         = account.EmptyResp
	IdReq             = account.IdReq
	IdsReq            = account.IdsReq
	LoginReq          = account.LoginReq
	LoginResp         = account.LoginResp
	OauthLoginReq     = account.OauthLoginReq
	OauthLoginUrlResp = account.OauthLoginUrlResp
	PageCondition     = account.PageCondition
	PageLimit         = account.PageLimit
	PageQuery         = account.PageQuery
	PageResult        = account.PageResult
	PageSort          = account.PageSort
	PingReq           = account.PingReq
	PingResp          = account.PingResp
	ResetPasswordReq  = account.ResetPasswordReq
	RoleDTO           = account.RoleDTO
	Token             = account.Token
	UserEmailReq      = account.UserEmailReq
	UserInfo          = account.UserInfo

	AccountRpc interface {
		// 连接检测
		Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingResp, error)
	}

	defaultAccountRpc struct {
		cli zrpc.Client
	}
)

func NewAccountRpc(cli zrpc.Client) AccountRpc {
	return &defaultAccountRpc{
		cli: cli,
	}
}

// 连接检测
func (m *defaultAccountRpc) Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingResp, error) {
	client := account.NewAccountRpcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
