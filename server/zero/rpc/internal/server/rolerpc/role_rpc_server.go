// Code generated by goctl. DO NOT EDIT.
// Source: blog.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/server/zero/rpc/internal/logic/rolerpc"
	"github.com/ve-weiyi/ve-blog-golang/server/zero/rpc/internal/svc"
	"github.com/ve-weiyi/ve-blog-golang/server/zero/rpc/pb/blog"
)

type RoleRpcServer struct {
	svcCtx *svc.ServiceContext
	blog.UnimplementedRoleRpcServer
}

func NewRoleRpcServer(svcCtx *svc.ServiceContext) *RoleRpcServer {
	return &RoleRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *RoleRpcServer) CreateRole(ctx context.Context, in *blog.Role) (*blog.Role, error) {
	l := rolerpclogic.NewCreateRoleLogic(ctx, s.svcCtx)
	return l.CreateRole(in)
}

func (s *RoleRpcServer) UpdateRole(ctx context.Context, in *blog.Role) (*blog.Role, error) {
	l := rolerpclogic.NewUpdateRoleLogic(ctx, s.svcCtx)
	return l.UpdateRole(in)
}

func (s *RoleRpcServer) DeleteRole(ctx context.Context, in *blog.IdReq) (*blog.EmptyResp, error) {
	l := rolerpclogic.NewDeleteRoleLogic(ctx, s.svcCtx)
	return l.DeleteRole(in)
}

func (s *RoleRpcServer) FindRole(ctx context.Context, in *blog.IdReq) (*blog.Role, error) {
	l := rolerpclogic.NewFindRoleLogic(ctx, s.svcCtx)
	return l.FindRole(in)
}

func (s *RoleRpcServer) DeleteRoleList(ctx context.Context, in *blog.IdsReq) (*blog.BatchResult, error) {
	l := rolerpclogic.NewDeleteRoleListLogic(ctx, s.svcCtx)
	return l.DeleteRoleList(in)
}

func (s *RoleRpcServer) FindRoleList(ctx context.Context, in *blog.PageQuery) (*blog.PageResult, error) {
	l := rolerpclogic.NewFindRoleListLogic(ctx, s.svcCtx)
	return l.FindRoleList(in)
}
