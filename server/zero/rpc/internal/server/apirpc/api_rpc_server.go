// Code generated by goctl. DO NOT EDIT.
// Source: blog.proto

package server

import (
	"context"

	"github.com/ve-weiyi/ve-blog-golang/server/zero/rpc/internal/logic/apirpc"
	"github.com/ve-weiyi/ve-blog-golang/server/zero/rpc/internal/svc"
	"github.com/ve-weiyi/ve-blog-golang/server/zero/rpc/pb/blog"
)

type ApiRpcServer struct {
	svcCtx *svc.ServiceContext
	blog.UnimplementedApiRpcServer
}

func NewApiRpcServer(svcCtx *svc.ServiceContext) *ApiRpcServer {
	return &ApiRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *ApiRpcServer) CreateApi(ctx context.Context, in *blog.Api) (*blog.EmptyReq, error) {
	l := apirpclogic.NewCreateApiLogic(ctx, s.svcCtx)
	return l.CreateApi(in)
}

func (s *ApiRpcServer) UpdateApi(ctx context.Context, in *blog.Api) (*blog.Api, error) {
	l := apirpclogic.NewUpdateApiLogic(ctx, s.svcCtx)
	return l.UpdateApi(in)
}

func (s *ApiRpcServer) DeleteApi(ctx context.Context, in *blog.IdReq) (*blog.EmptyResp, error) {
	l := apirpclogic.NewDeleteApiLogic(ctx, s.svcCtx)
	return l.DeleteApi(in)
}

func (s *ApiRpcServer) FindApi(ctx context.Context, in *blog.IdReq) (*blog.Api, error) {
	l := apirpclogic.NewFindApiLogic(ctx, s.svcCtx)
	return l.FindApi(in)
}

func (s *ApiRpcServer) DeleteListApi(ctx context.Context, in *blog.IdsReq) (*blog.BatchResult, error) {
	l := apirpclogic.NewDeleteListApiLogic(ctx, s.svcCtx)
	return l.DeleteListApi(in)
}

func (s *ApiRpcServer) FindListApi(ctx context.Context, in *blog.PageQuery) (*blog.PageResult, error) {
	l := apirpclogic.NewFindListApiLogic(ctx, s.svcCtx)
	return l.FindListApi(in)
}
