// 声明 proto 语法版本，固定值
syntax = "proto3";

// proto 包名
package blog;

// 生成 golang 代码后的包名
option go_package = "./blog";

import "any.proto";

message EmptyReq {
}

message EmptyResp {
}

message IdReq {
  int64 id = 1;
}

message IdsReq {
  repeated int64 ids = 1;
}

message PageQuery {
  PageLimit limit = 1;
  repeated PageSort sorts = 2;
  repeated PageCondition conditions = 3;
}

message PageLimit {
  int32 page = 1;
  int32 pageSize = 2;
}

message PageSort {
  string field = 1;
  string order = 2;
}

message PageCondition {
  string field = 1;
  google.protobuf.Any value = 2;
  string logic = 3;
  string operator = 4;
}

message BatchResult {
  int32 success_count = 1;
}

message PageResult {
  int32 total = 1;
  google.protobuf.Any list = 2;
}

message PingReq {
  string ping = 1;
}

message PingResp {
  string pong = 1;
}

service BlogRpc {
  // 连接检测
  rpc Ping(PingReq) returns(PingResp);
}

message Api {
  string id = 1;
  string name = 2;
  string url = 3;
  string method = 4;
  string body = 5;
  string headers = 6;
  string query = 7;
  string resp = 8;
}

service ApiRpc {
  rpc CreateApi(Api) returns(EmptyReq);

  rpc UpdateApi(Api) returns(Api);

  rpc DeleteApi(IdReq) returns(EmptyResp);

  rpc FindApi(IdReq) returns(Api);

  rpc DeleteListApi(IdsReq) returns(BatchResult);

  rpc FindListApi(PageQuery) returns(PageResult);
}

// article结构体
message Article {
  int64 id = 1;// id
  int64 user_id = 2;// 作者
  int64 category_id = 3;// 文章分类
  string article_cover = 4;// 文章缩略图
  string article_title = 5;// 标题
  string article_content = 6;// 内容
  int64 type = 7;// 文章类型 1原创 2转载 3翻译
  string original_url = 8;// 原文链接
  int64 is_top = 9;// 是否置顶 0否 1是
  int64 is_delete = 10;// 是否删除  0否 1是
  int64 status = 11;// 状态值 1公开 2私密 3评论可见
  int64 created_at = 12;// 发表时间
  int64 updated_at = 13;// 更新时间
}

// article服务
service ArticleRpc {
  rpc CreateArticle(Article) returns(Article);

  rpc UpdateArticle(Article) returns(Article);

  rpc DeleteArticle(IdReq) returns(EmptyResp);

  rpc FindArticle(IdReq) returns(Article);

  rpc DeleteArticleList(IdsReq) returns(BatchResult);

  rpc FindArticleList(PageQuery) returns(PageResult);
}

// menu结构体
message Menu {
  string id = 1;
  string name = 2;
  string url = 3;
  string method = 4;
  string body = 5;
  string headers = 6;
  string query = 7;
  string resp = 8;
}

// menu服务
service MenuRpc {
  rpc CreateMenu(Menu) returns(Menu);

  rpc UpdateMenu(Menu) returns(Menu);

  rpc DeleteMenu(IdReq) returns(EmptyResp);

  rpc FindMenu(IdReq) returns(Menu);

  rpc DeleteMenuList(IdsReq) returns(BatchResult);

  rpc FindMenuList(PageQuery) returns(PageResult);
}

// role结构体
message Role {
  int64 id = 1;// 主键id
  int64 role_pid = 2;// 父角色id
  string role_domain = 3;// 角色域
  string role_name = 4;// 角色名
  string role_comment = 5;// 角色备注
  int64 is_disable = 6;// 是否禁用  0否 1是
  int64 is_default = 7;// 是否默认角色 0否 1是
  int64 created_at = 8;// 创建时间
  int64 updated_at = 9;// 更新时间
}

// role服务
service RoleRpc {
  rpc CreateRole(Role) returns(Role);

  rpc UpdateRole(Role) returns(Role);

  rpc DeleteRole(IdReq) returns(EmptyResp);

  rpc FindRole(IdReq) returns(Role);

  rpc DeleteRoleList(IdsReq) returns(BatchResult);

  rpc FindRoleList(PageQuery) returns(PageResult);
}
